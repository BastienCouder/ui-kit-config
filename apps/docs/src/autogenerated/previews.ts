
// This file is autogenerated by scripts/build-preview-imports.ts
// Do not edit this file directly.
import React from "react";

export const previews = {
  "demos/components/core/button/default": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/button/default")),
      code : [{"title":"default.tsx","code":"import { Button } from \"@/lib/components/core/default/button\";\r\n\r\nexport default function Demo() {\r\n  return <Button>Button</Button>;\r\n}\r\n"}]
    },
    "demos/components/core/button/variants": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/button/variants")),
      code : [{"title":"variants.tsx","code":"import { Button } from \"@/lib/components/core/default/button\";\r\n\r\nconst variants = [\r\n  \"default\",\r\n  \"primary\",\r\n  \"outline\",\r\n  \"quiet\",\r\n  \"success\",\r\n  \"warning\",\r\n  \"danger\",\r\n  \"accent\",\r\n] as const;\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <div className=\"grid grid-cols-4 gap-2\">\r\n      {variants.map((variant) => (\r\n        <Button key={variant} variant={variant}>\r\n          {variant}\r\n        </Button>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/button/sizes": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/button/sizes")),
      code : [{"title":"sizes.tsx","code":"import { Button } from \"@/lib/components/core/default/button\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <div className=\"flex w-full items-center justify-center gap-4\">\r\n      <Button size=\"sm\">Button</Button>\r\n      <Button size=\"md\">Button</Button>\r\n      <Button size=\"lg\">Button</Button>\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/button/shapes": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/button/shapes")),
      code : [{"title":"shapes.tsx","code":"import { Button } from \"@/lib/components/core/default/button\";\r\nimport { UploadIcon } from \"@/lib/icons\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <div className=\"flex items-center justify-center gap-4\">\r\n      <Button size=\"sm\" shape=\"square\" aria-label=\"upload\">\r\n        <UploadIcon />\r\n      </Button>\r\n      <Button size=\"md\" shape=\"square\" aria-label=\"upload\">\r\n        <UploadIcon />\r\n      </Button>\r\n      <Button size=\"lg\" shape=\"square\" aria-label=\"upload\">\r\n        <UploadIcon />\r\n      </Button>\r\n      <Button size=\"sm\" shape=\"circle\" aria-label=\"upload\">\r\n        <UploadIcon />\r\n      </Button>\r\n      <Button size=\"md\" shape=\"circle\" aria-label=\"upload\">\r\n        <UploadIcon />\r\n      </Button>\r\n      <Button size=\"lg\" shape=\"circle\" aria-label=\"upload\">\r\n        <UploadIcon />\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/button/prefix-and-suffix": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/button/prefix-and-suffix")),
      code : [{"title":"prefix-and-suffix.tsx","code":"import { Button } from \"@/lib/components/core/default/button\";\r\nimport { UploadIcon } from \"@/lib/icons\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <div className=\"flex items-center gap-2\">\r\n      <Button prefix={<UploadIcon />}>Upload</Button>\r\n      <Button suffix={<UploadIcon />}>Upload</Button>\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/button/loading": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/button/loading")),
      code : [{"title":"loading.tsx","code":"import { Button } from \"@/lib/components/core/default/button\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <div className=\"flex w-full items-center justify-center gap-2\">\r\n      <Button size=\"sm\" isLoading>\r\n        Button\r\n      </Button>\r\n      <Button size=\"md\" isLoading>\r\n        Button\r\n      </Button>\r\n      <Button size=\"lg\" isLoading>\r\n        Button\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/button/disabled": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/button/disabled")),
      code : [{"title":"disabled.tsx","code":"import { Button } from \"@/lib/components/core/default/button\";\r\n\r\nexport default function Demo() {\r\n  return <Button isDisabled>Button</Button>;\r\n}\r\n"}]
    },
    "demos/components/core/button/link-button": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/button/link-button")),
      code : [{"title":"link-button.tsx","code":"import { Button } from \"@/lib/components/core/default/button\";\r\nimport { LogInIcon } from \"@/lib/icons\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <Button href=\"/login\" prefix={<LogInIcon />} target=\"_blank\">\r\n      Login\r\n    </Button>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/file-trigger/default": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/file-trigger/default")),
      code : [{"title":"default.tsx","code":"\"use client\";\r\n\r\nimport React from \"react\";\r\nimport { Button } from \"@/lib/components/core/default/button\";\r\nimport { FileTrigger } from \"@/lib/components/core/default/file-trigger\";\r\nimport { UploadIcon } from \"@/lib/icons\";\r\n\r\nexport default function FileTriggerDemo() {\r\n  const [file, setFile] = React.useState<string | null>(null);\r\n  return (\r\n    <div className=\"flex flex-col items-center gap-4\">\r\n      <FileTrigger\r\n        onSelect={(e) => {\r\n          if (e) {\r\n            const files = Array.from(e);\r\n            setFile(files[0].name);\r\n          }\r\n        }}\r\n        allowsMultiple\r\n      >\r\n        <Button prefix={<UploadIcon />}>Upload</Button>\r\n      </FileTrigger>\r\n      {file && (\r\n        <p>\r\n          You selected <span className=\"font-semibold\">{file}</span>\r\n        </p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/file-trigger/file-types": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/file-trigger/file-types")),
      code : [{"title":"file-types.tsx","code":"import React from \"react\";\r\nimport { Button } from \"@/lib/components/core/default/button\";\r\nimport { FileTrigger } from \"@/lib/components/core/default/file-trigger\";\r\nimport { UploadIcon } from \"@/lib/icons\";\r\n\r\nexport default function FileTriggerDemo() {\r\n  return (\r\n    <FileTrigger acceptedFileTypes={[\"image/*\"]}>\r\n      <Button prefix={<UploadIcon />}>Upload image</Button>\r\n    </FileTrigger>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/file-trigger/multiple-files": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/file-trigger/multiple-files")),
      code : [{"title":"multiple-files.tsx","code":"\"use client\";\r\n\r\nimport React from \"react\";\r\nimport { Button } from \"@/lib/components/core/default/button\";\r\nimport { FileTrigger } from \"@/lib/components/core/default/file-trigger\";\r\nimport { UploadIcon } from \"@/lib/icons\";\r\n\r\nexport default function FileTriggerDemo() {\r\n  const [files, setFiles] = React.useState<string[] | null>(null);\r\n  return (\r\n    <div className=\"flex flex-col items-center gap-4\">\r\n      <FileTrigger\r\n        onSelect={(e) => {\r\n          if (e) {\r\n            const files = Array.from(e);\r\n            const filenames = files.map((file) => file.name);\r\n            setFiles(filenames);\r\n          }\r\n        }}\r\n        allowsMultiple\r\n      >\r\n        <Button prefix={<UploadIcon />}>Upload</Button>\r\n      </FileTrigger>\r\n      {files && (\r\n        <p>\r\n          You selected <span className=\"font-semibold\">{files.join(\", \")}</span>\r\n        </p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/file-trigger/directory-selection": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/file-trigger/directory-selection")),
      code : [{"title":"directory-selection.tsx","code":"\"use client\";\r\n\r\nimport React from \"react\";\r\nimport { Button } from \"@/lib/components/core/default/button\";\r\nimport { FileTrigger } from \"@/lib/components/core/default/file-trigger\";\r\nimport { UploadIcon } from \"@/lib/icons\";\r\n\r\nexport default function FileTriggerDemo() {\r\n  const [files, setFiles] = React.useState<string[] | null>(null);\r\n  return (\r\n    <div className=\"flex flex-col items-center gap-4\">\r\n      <FileTrigger\r\n        acceptDirectory\r\n        onSelect={(e) => {\r\n          if (e) {\r\n            const files = Array.from(e);\r\n            const filenames = files.map((file) => file.name);\r\n            setFiles(filenames);\r\n          }\r\n        }}\r\n      >\r\n        <Button prefix={<UploadIcon />}>Upload a directory</Button>\r\n      </FileTrigger>\r\n      {files && (\r\n        <ul>\r\n          {files.map((file, index) => (\r\n            <li key={index}>{file}</li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/file-trigger/media-capture": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/file-trigger/media-capture")),
      code : [{"title":"media-capture.tsx","code":"import React from \"react\";\r\nimport { Button } from \"@/lib/components/core/default/button\";\r\nimport { FileTrigger } from \"@/lib/components/core/default/file-trigger\";\r\nimport { CameraIcon } from \"@/lib/icons\";\r\n\r\nexport default function FileTriggerDemo() {\r\n  return (\r\n    <FileTrigger defaultCamera=\"environment\">\r\n      <Button prefix={<CameraIcon />}>Take a picture</Button>\r\n    </FileTrigger>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/toggle-button/default": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/toggle-button/default")),
      code : [{"title":"default.tsx","code":"import { ToggleButton } from \"@/lib/components/core/default/toggle-button\";\r\nimport { PinIcon } from \"@/lib/icons\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <ToggleButton aria-label=\"Toggle pin\">\r\n      <PinIcon className=\"rotate-45\" />\r\n    </ToggleButton>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/toggle-button/variants": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/toggle-button/variants")),
      code : [{"title":"variants.tsx","code":"import { ToggleButton } from \"@/lib/components/core/default/toggle-button\";\r\nimport { PinIcon } from \"@/lib/icons\";\r\n\r\nconst variants = [\"quiet\", \"outline\", \"accent\"] as const;\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <div className=\"flex items-center gap-4\">\r\n      {variants.map((variant) => (\r\n        <ToggleButton\r\n          key={variant}\r\n          variant={variant}\r\n          defaultSelected={variant === \"accent\"}\r\n          aria-label=\"Toggle pin\"\r\n        >\r\n          <PinIcon className=\"rotate-45\" />\r\n        </ToggleButton>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/toggle-button/sizes": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/toggle-button/sizes")),
      code : [{"title":"sizes.tsx","code":"import { ToggleButton } from \"@/lib/components/core/default/toggle-button\";\r\nimport { PinIcon } from \"@/lib/icons\";\r\n\r\nconst sizes = [\"sm\", \"md\", \"lg\"] as const;\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <div className=\"flex items-center gap-4\">\r\n      {sizes.map((size) => (\r\n        <ToggleButton key={size} size={size} variant=\"outline\" aria-label=\"Toggle pin\">\r\n          <PinIcon className=\"rotate-45\" />\r\n        </ToggleButton>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/toggle-button/shapes": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/toggle-button/shapes")),
      code : [{"title":"shapes.tsx","code":"import { ToggleButton } from \"@/lib/components/core/default/toggle-button\";\r\nimport { PinIcon } from \"@/lib/icons\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <div className=\"flex items-center gap-4\">\r\n      <ToggleButton variant=\"outline\" shape=\"square\" aria-label=\"Toggle pin\">\r\n        <PinIcon className=\"rotate-45\" />\r\n      </ToggleButton>\r\n      <ToggleButton variant=\"outline\" shape=\"circle\" aria-label=\"Toggle pin\">\r\n        <PinIcon className=\"rotate-45\" />\r\n      </ToggleButton>\r\n      <ToggleButton\r\n        variant=\"accent\"\r\n        shape=\"rectangle\"\r\n        prefix={<PinIcon className=\"rotate-45\" />}\r\n        defaultSelected\r\n        aria-label=\"Toggle pin\"\r\n      >\r\n        Pin\r\n      </ToggleButton>\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/toggle-button/disabled": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/toggle-button/disabled")),
      code : [{"title":"disabled.tsx","code":"import { ToggleButton } from \"@/lib/components/core/default/toggle-button\";\r\nimport { PinIcon } from \"@/lib/icons\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <ToggleButton isDisabled aria-label=\"Toggle pin\">\r\n      <PinIcon className=\"rotate-45\" />\r\n    </ToggleButton>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/toggle-button/uncontrolled": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/toggle-button/uncontrolled")),
      code : [{"title":"uncontrolled.tsx","code":"import { ToggleButton } from \"@/lib/components/core/default/toggle-button\";\r\nimport { PinIcon } from \"@/lib/icons\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <ToggleButton aria-label=\"Toggle pin\" defaultSelected>\r\n      <PinIcon className=\"rotate-45\" />\r\n    </ToggleButton>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/toggle-button/controlled": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/toggle-button/controlled")),
      code : [{"title":"controlled.tsx","code":"\"use client\";\r\n\r\nimport React from \"react\";\r\nimport { ToggleButton } from \"@/lib/components/core/default/toggle-button\";\r\nimport { PinIcon } from \"@/lib/icons\";\r\n\r\nexport default function Demo() {\r\n  const [isSelected, setSelected] = React.useState(true);\r\n  return (\r\n    <div className=\"flex flex-col items-center gap-2\">\r\n      <ToggleButton isSelected={isSelected} onChange={setSelected} aria-label=\"Toggle pin\">\r\n        <PinIcon className=\"rotate-45\" />\r\n      </ToggleButton>\r\n      <span className=\"text-sm text-fg-muted\">state: {isSelected ? \"On\" : \"Off\"}</span>\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/color-area/default": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/color-area/default")),
      code : [{"title":"default.tsx","code":"import { ColorArea } from \"@/lib/components/core/default/color-area\";\r\n\r\nexport default function Demo() {\r\n  return <ColorArea />;\r\n}\r\n"}]
    },
    "demos/components/core/color-area/channels": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/color-area/channels")),
      code : [{"title":"channels.tsx","code":"import { ColorArea } from \"@/lib/components/core/default/color-area\";\r\n\r\nexport default function Demo() {\r\n  return <ColorArea xChannel=\"red\" yChannel=\"blue\" />;\r\n}\r\n"}]
    },
    "demos/components/core/color-area/disabled": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/color-area/disabled")),
      code : [{"title":"disabled.tsx","code":"import { ColorArea } from \"@/lib/components/core/default/color-area\";\r\n\r\nexport default function Demo() {\r\n  return <ColorArea isDisabled />;\r\n}\r\n"}]
    },
    "demos/components/core/color-area/uncontrolled": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/color-area/uncontrolled")),
      code : [{"title":"uncontrolled.tsx","code":"import { ColorArea } from \"@/lib/components/core/default/color-area\";\r\n\r\nexport default function Demo() {\r\n  return <ColorArea defaultValue=\"hsl(30, 100%, 50%)\" />;\r\n}\r\n"}]
    },
    "demos/components/core/color-area/controlled": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/color-area/controlled")),
      code : [{"title":"controlled.tsx","code":"\"use client\";\r\n\r\nimport React from \"react\";\r\nimport { parseColor } from \"react-aria-components\";\r\nimport { ColorArea } from \"@/lib/components/core/default/color-area\";\r\n\r\nexport default function Demo() {\r\n  const [value, setValue] = React.useState(parseColor(\"hsl(0, 100%, 50%)\"));\r\n  return (\r\n    <div className=\"flex flex-col items-center gap-4\">\r\n      <ColorArea value={value} onChange={setValue} xChannel=\"saturation\" yChannel=\"lightness\" />\r\n      <p className=\"text-xs text-fg-muted\">Selected color : {value.toString()}</p>\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/color-area/composition": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/color-area/composition")),
      code : [{"title":"composition.tsx","code":"import { ColorAreaRoot } from \"@/lib/components/core/default/color-area\";\r\nimport { ColorThumb } from \"@/lib/components/core/default/color-thumb\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <ColorAreaRoot>\r\n      <ColorThumb />\r\n    </ColorAreaRoot>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/color-field/default": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/color-field/default")),
      code : [{"title":"default.tsx","code":"\"use client\";\r\n\r\nimport React from \"react\";\r\nimport { ColorField } from \"@/lib/components/core/default/color-field\";\r\n\r\nexport default function Demo() {\r\n  return <ColorField label=\"Color\" />;\r\n}\r\n"}]
    },
    "demos/components/core/color-field/label": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/color-field/label")),
      code : [{"title":"label.tsx","code":"import { ColorField } from \"@/lib/components/core/default/color-field\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <div className=\"space-y-4\">\r\n      <ColorField label=\"Background\" placeholder=\"Visible label\" />\r\n      <ColorField aria-label=\"Background\" placeholder=\"Hidden label\" />\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/color-field/sizes": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/color-field/sizes")),
      code : [{"title":"sizes.tsx","code":"import { ColorField } from \"@/lib/components/core/default/color-field\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <div className=\"flex items-center gap-4\">\r\n      <ColorField label=\"small\" size=\"sm\" />\r\n      <ColorField label=\"medium\" size=\"md\" />\r\n      <ColorField label=\"large\" size=\"lg\" />\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/color-field/prefix-and-suffix": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/color-field/prefix-and-suffix")),
      code : [{"title":"prefix-and-suffix.tsx","code":"import { ColorField } from \"@/lib/components/core/default/color-field\";\r\nimport { PaletteIcon } from \"@/lib/icons\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <div className=\"flex flex-col items-center gap-4\">\r\n      <ColorField prefix={<PaletteIcon />} />\r\n      <ColorField suffix={<PaletteIcon />} />\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/color-field/description": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/color-field/description")),
      code : [{"title":"description.tsx","code":"\"use client\";\r\n\r\nimport React from \"react\";\r\nimport { ColorField } from \"@/lib/components/core/default/color-field\";\r\n\r\nexport default function Demo() {\r\n  return <ColorField label=\"Color\" description=\"Enter a background color.\" />;\r\n}\r\n"}]
    },
    "demos/components/core/color-field/contextual-help": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/color-field/contextual-help")),
      code : [{"title":"contextual-help.tsx","code":"import React from \"react\";\r\nimport { ColorField } from \"@/lib/components/core/default/color-field\";\r\nimport { ContextualHelp } from \"@/lib/components/core/default/contextual-help\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <ColorField\r\n      label=\"Color\"\r\n      contextualHelp={\r\n        <ContextualHelp\r\n          title=\"Need help?\"\r\n          description=\"If you're having trouble, contact our customer\r\n      support team for help.\"\r\n        />\r\n      }\r\n    />\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/color-field/error-message": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/color-field/error-message")),
      code : [{"title":"error-message.tsx","code":"\"use client\";\r\n\r\nimport React from \"react\";\r\nimport { ColorField } from \"@/lib/components/core/default/color-field\";\r\n\r\nexport default function Demo() {\r\n  return <ColorField label=\"Color\" isInvalid errorMessage=\"Please fill out this field.\" />;\r\n}\r\n"}]
    },
    "demos/components/core/color-field/loading": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/color-field/loading")),
      code : [{"title":"loading.tsx","code":"import React from \"react\";\r\nimport { ColorField } from \"@/lib/components/core/default/color-field\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <div className=\"flex flex-col items-center gap-4\">\r\n      <ColorField isLoading loaderPosition=\"prefix\" />\r\n      <ColorField isLoading loaderPosition=\"suffix\" />\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/color-field/disabled": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/color-field/disabled")),
      code : [{"title":"disabled.tsx","code":"\"use client\";\r\n\r\nimport { parseColor } from \"react-aria-components\";\r\nimport { ColorField } from \"@/lib/components/core/default/color-field\";\r\n\r\nexport default function Demo() {\r\n  return <ColorField value={parseColor(\"rgb(222,70,58)\")} isDisabled />;\r\n}\r\n"}]
    },
    "demos/components/core/color-field/read-only": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/color-field/read-only")),
      code : [{"title":"read-only.tsx","code":"import React from \"react\";\r\nimport { ColorField } from \"@/lib/components/core/default/color-field\";\r\n\r\nexport default function Demo() {\r\n  return <ColorField label=\"Color\" isReadOnly value=\"#121212\" />;\r\n}\r\n"}]
    },
    "demos/components/core/color-field/required": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/color-field/required")),
      code : [{"title":"required.tsx","code":"\"use client\";\r\n\r\nimport React from \"react\";\r\nimport { ColorField } from \"@/lib/components/core/default/color-field\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <div className=\"grid grid-cols-2 gap-4\">\r\n      <ColorField label=\"Color\" isRequired />\r\n      <ColorField label=\"Color\" isRequired necessityIndicator=\"icon\" />\r\n      <ColorField label=\"Color\" isRequired necessityIndicator=\"label\" />\r\n      <ColorField label=\"Color\" necessityIndicator=\"label\" />\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/color-field/uncontrolled": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/color-field/uncontrolled")),
      code : [{"title":"uncontrolled.tsx","code":"import React from \"react\";\r\nimport { ColorField } from \"@/lib/components/core/default/color-field\";\r\n\r\nexport default function Demo() {\r\n  return <ColorField defaultValue=\"#7f007f\" />;\r\n}\r\n"}]
    },
    "demos/components/core/color-field/controlled": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/color-field/controlled")),
      code : [{"title":"controlled.tsx","code":"\"use client\";\r\n\r\nimport React from \"react\";\r\nimport { type Color, parseColor } from \"react-aria-components\";\r\nimport { ColorField } from \"@/lib/components/core/default/color-field\";\r\n\r\nexport default function Demo() {\r\n  const [color, setColor] = React.useState<Color | null>(parseColor(\"#7f007f\"));\r\n  return (\r\n    <div className=\"flex flex-col items-center gap-4\">\r\n      <ColorField value={color} onChange={setColor} />\r\n      <p className=\"text-sm text-fg-muted\">Current color value: {color?.toString(\"hex\")}</p>\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/color-field/composition": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/color-field/composition")),
      code : [{"title":"composition.tsx","code":"\"use client\";\r\n\r\nimport React from \"react\";\r\nimport { ColorFieldRoot } from \"@/lib/components/core/default/color-field\";\r\nimport { Description, FieldError, Label } from \"@/lib/components/core/default/field\";\r\nimport { Input, InputRoot } from \"@/lib/components/core/default/input\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <ColorFieldRoot>\r\n      <Label>Background</Label>\r\n      <InputRoot>\r\n        <Input />\r\n      </InputRoot>\r\n      <Description>Enter a background color.</Description>\r\n      <FieldError />\r\n    </ColorFieldRoot>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/color-picker/default": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/color-picker/default")),
      code : [{"title":"default.tsx","code":"import { ColorPicker } from \"@/lib/components/core/default/color-picker\";\r\n\r\nexport default function Demo() {\r\n  return <ColorPicker defaultValue=\"#5100FF\" />;\r\n}\r\n"}]
    },
    "demos/components/core/color-picker/options": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/color-picker/options")),
      code : [{"title":"options.tsx","code":"import { ColorPicker } from \"@/lib/components/core/default/color-picker\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <ColorPicker size=\"sm\" shape=\"rectangle\" defaultValue=\"#107030\">\r\n      Fill color\r\n    </ColorPicker>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/color-picker/uncontrolled": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/color-picker/uncontrolled")),
      code : [{"title":"uncontrolled.tsx","code":"import { ColorPicker } from \"@/lib/components/core/default/color-picker\";\r\n\r\nexport default function Demo() {\r\n  return <ColorPicker defaultValue=\"#5100FF\" />;\r\n}\r\n"}]
    },
    "demos/components/core/color-picker/controlled": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/color-picker/controlled")),
      code : [{"title":"controlled.tsx","code":"\"use client\";\r\n\r\nimport React from \"react\";\r\nimport { type Color, parseColor } from \"react-aria-components\";\r\nimport { ColorPicker } from \"@/lib/components/core/default/color-picker\";\r\n\r\nexport default function Demo() {\r\n  const [value, setValue] = React.useState(parseColor(\"hsl(26, 33%, 78%)\"));\r\n  // React aria components should fix this type issue (normally its Color not Color & string)\r\n  return <ColorPicker value={value as Color & string} onChange={setValue} />;\r\n}\r\n"}]
    },
    "demos/components/core/color-picker/composition": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/color-picker/composition")),
      code : [{"title":"composition.tsx","code":"import { Button } from \"@/lib/components/core/default/button\";\r\nimport { ColorEditor, ColorPickerRoot } from \"@/lib/components/core/default/color-picker\";\r\nimport { ColorSwatch } from \"@/lib/components/core/default/color-swatch\";\r\nimport { Dialog, DialogRoot } from \"@/lib/components/core/default/dialog\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <ColorPickerRoot defaultValue=\"#5100FF\">\r\n      <DialogRoot>\r\n        <Button shape=\"square\">\r\n          <ColorSwatch />\r\n        </Button>\r\n        <Dialog type=\"popover\" mobileType=\"drawer\">\r\n          <ColorEditor />\r\n        </Dialog>\r\n      </DialogRoot>\r\n    </ColorPickerRoot>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/color-slider/default": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/color-slider/default")),
      code : [{"title":"default.tsx","code":"import { ColorSlider } from \"@/lib/components/core/default/color-slider\";\r\n\r\nexport default function Demo() {\r\n  return <ColorSlider channel=\"hue\" defaultValue=\"hsl(200, 100%, 50%)\" />;\r\n}\r\n"}]
    },
    "demos/components/core/color-slider/label": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/color-slider/label")),
      code : [{"title":"label.tsx","code":"import { ColorSlider } from \"@/lib/components/core/default/color-slider\";\r\n\r\nexport default function Demo() {\r\n  return <ColorSlider label=\"Hue\" channel=\"hue\" defaultValue=\"hsl(200, 100%, 50%)\" />;\r\n}\r\n"}]
    },
    "demos/components/core/color-slider/vertical": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/color-slider/vertical")),
      code : [{"title":"vertical.tsx","code":"import { ColorSlider } from \"@/lib/components/core/default/color-slider\";\r\n\r\nexport default function Demo() {\r\n  return <ColorSlider orientation=\"vertical\" channel=\"hue\" defaultValue=\"hsl(0, 100%, 50%)\" />;\r\n}\r\n"}]
    },
    "demos/components/core/color-slider/channel": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/color-slider/channel")),
      code : [{"title":"channel.tsx","code":"import { ColorSlider } from \"@/lib/components/core/default/color-slider\";\r\n\r\nexport default function Demo() {\r\n  return <ColorSlider label=\"Opacity\" defaultValue=\"#f00\" channel=\"alpha\" />;\r\n}\r\n"}]
    },
    "demos/components/core/color-slider/disabled": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/color-slider/disabled")),
      code : [{"title":"disabled.tsx","code":"import { ColorSlider } from \"@/lib/components/core/default/color-slider\";\r\n\r\nexport default function Demo() {\r\n  return <ColorSlider label=\"Opacity\" defaultValue=\"#f00\" channel=\"alpha\" isDisabled />;\r\n}\r\n"}]
    },
    "demos/components/core/color-slider/uncontrolled": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/color-slider/uncontrolled")),
      code : [{"title":"uncontrolled.tsx","code":"import { ColorSlider } from \"@/lib/components/core/default/color-slider\";\r\n\r\nexport default function Demo() {\r\n  return <ColorSlider channel=\"hue\" defaultValue=\"hsl(0, 100%, 50%)\" />;\r\n}\r\n"}]
    },
    "demos/components/core/color-slider/controlled": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/color-slider/controlled")),
      code : [{"title":"controlled.tsx","code":"\"use client\";\r\n\r\nimport React from \"react\";\r\nimport { parseColor } from \"react-aria-components\";\r\nimport { ColorSlider } from \"@/lib/components/core/default/color-slider\";\r\n\r\nexport default function Demo() {\r\n  const [value, setValue] = React.useState(parseColor(\"hsl(0, 100%, 50%)\"));\r\n  return (\r\n    <div className=\"flex flex-col items-center gap-4\">\r\n      <ColorSlider value={value} onChange={setValue} channel=\"hue\" />\r\n      <p className=\"text-xs text-fg-muted\">Value: {value.toString(\"hex\")}</p>\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/color-slider/composition": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/color-slider/composition")),
      code : [{"title":"composition.tsx","code":"import {\r\n  ColorSliderOutput,\r\n  ColorSliderRoot,\r\n  ColorSliderTrack,\r\n} from \"@/lib/components/core/default/color-slider\";\r\nimport { ColorThumb } from \"@/lib/components/core/default/color-thumb\";\r\nimport { Label } from \"@/lib/components/core/default/field\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <ColorSliderRoot channel=\"hue\" defaultValue=\"hsl(0, 100%, 50%)\">\r\n      <div className=\"flex items-center justify-between\">\r\n        <Label>Hue</Label>\r\n        <ColorSliderOutput />\r\n      </div>\r\n      <ColorSliderTrack>\r\n        <ColorThumb />\r\n      </ColorSliderTrack>\r\n    </ColorSliderRoot>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/color-swatch/default": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/color-swatch/default")),
      code : [{"title":"default.tsx","code":"import { ColorSwatch } from \"@/lib/components/core/default/color-swatch\";\r\n\r\nexport default function Demo() {\r\n  return <ColorSwatch color=\"#f00\" />;\r\n}\r\n"}]
    },
    "demos/components/core/avatar/default": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/avatar/default")),
      code : [{"title":"default.tsx","code":"import { Avatar } from \"@/lib/components/core/default/avatar\";\r\n\r\nexport default function Demo() {\r\n  return <Avatar src=\"https://github.com/mehdibha.png\" alt=\"@mehdibha\" fallback=\"M\" />;\r\n}\r\n"}]
    },
    "demos/components/core/avatar/shape": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/avatar/shape")),
      code : [{"title":"shape.tsx","code":"import { Avatar } from \"@/lib/components/core/default/avatar\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <div className=\"space-x-4\">\r\n      <Avatar src=\"https://github.com/mehdibha.png\" alt=\"@mehdibha\" fallback=\"M\" shape=\"square\" />\r\n      <Avatar src=\"https://github.com/mehdibha.png\" alt=\"@mehdibha\" fallback=\"M\" shape=\"circle\" />\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/avatar/sizes": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/avatar/sizes")),
      code : [{"title":"sizes.tsx","code":"import { Avatar } from \"@/lib/components/core/default/avatar\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <div className=\"space-x-4\">\r\n      {([\"sm\", \"md\", \"lg\"] as const).map((size) => (\r\n        <Avatar\r\n          key={size}\r\n          size={size}\r\n          src=\"https://github.com/mehdibha.png\"\r\n          alt=\"@mehdibha\"\r\n          fallback=\"M\"\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/avatar/composition": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/avatar/composition")),
      code : [{"title":"composition.tsx","code":"import React from \"react\";\r\nimport {\r\n  AvatarRoot,\r\n  AvatarImage,\r\n  AvatarFallback,\r\n  AvatarPlaceholder,\r\n} from \"@/lib/components/core/default/avatar\";\r\nimport { UserIcon } from \"@/lib/icons\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <AvatarRoot>\r\n      <AvatarImage src=\"https://github.com/mehdibha.png\" alt=\"@mehdibha\" />\r\n      <AvatarFallback>M</AvatarFallback>\r\n      <AvatarPlaceholder>\r\n        <UserIcon className=\"size-5\" />\r\n      </AvatarPlaceholder>\r\n    </AvatarRoot>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/badge/default": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/badge/default")),
      code : [{"title":"default.tsx","code":"import { Badge } from \"@/lib/components/core/default/badge\";\r\n\r\nexport default function Demo() {\r\n  return <Badge>Badge</Badge>;\r\n}\r\n"}]
    },
    "demos/components/core/badge/variants": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/badge/variants")),
      code : [{"title":"variants.tsx","code":"import { Badge } from \"@/lib/components/core/default/badge\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <div className=\"flex flex-col items-start gap-2\">\r\n      <Flex>\r\n        <Badge variant=\"neutral\">Neutral</Badge>\r\n        <Badge variant=\"outline\">Outline</Badge>\r\n        <Badge variant=\"primary\">Primary</Badge>\r\n      </Flex>\r\n      <Flex>\r\n        <Badge variant=\"success\">Success</Badge>\r\n        <Badge variant=\"success-subtle\">Success Subtle</Badge>\r\n        <Badge variant=\"success-outline\">Success Outline</Badge>\r\n      </Flex>\r\n      <Flex>\r\n        <Badge variant=\"danger\">Danger</Badge>\r\n        <Badge variant=\"danger-subtle\">Danger Subtle</Badge>\r\n        <Badge variant=\"danger-outline\">Danger Outline</Badge>\r\n      </Flex>\r\n      <Flex>\r\n        <Badge variant=\"warning\">Warning</Badge>\r\n        <Badge variant=\"warning-subtle\">Warning Subtle</Badge>\r\n        <Badge variant=\"warning-outline\">Warning Outline</Badge>\r\n      </Flex>\r\n      <Flex>\r\n        <Badge variant=\"accent\">Accent</Badge>\r\n        <Badge variant=\"accent-subtle\">Accent Subtle</Badge>\r\n        <Badge variant=\"accent-outline\">Accent Outline</Badge>\r\n      </Flex>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst Flex = (props: React.HTMLAttributes<HTMLDivElement>) => (\r\n  <div {...props} className=\"flex items-center gap-2\" />\r\n);\r\n"}]
    },
    "demos/components/core/badge/sizes": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/badge/sizes")),
      code : [{"title":"sizes.tsx","code":"import { Badge } from \"@/lib/components/core/default/badge\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <div className=\"flex items-center gap-2\">\r\n      <Badge variant=\"primary\" size=\"sm\">\r\n        Small\r\n      </Badge>\r\n      <Badge variant=\"primary\" size=\"md\">\r\n        Medium\r\n      </Badge>\r\n      <Badge variant=\"primary\" size=\"lg\">\r\n        Large\r\n      </Badge>\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/badge/icon": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/badge/icon")),
      code : [{"title":"icon.tsx","code":"import { Badge } from \"@/lib/components/core/default/badge\";\r\nimport { ShieldIcon } from \"@/lib/icons\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <div className=\"flex items-center gap-2\">\r\n      <Badge icon={<ShieldIcon />} size=\"sm\">\r\n        Badge\r\n      </Badge>\r\n      <Badge icon={<ShieldIcon />} size=\"md\">\r\n        Badge\r\n      </Badge>\r\n      <Badge icon={<ShieldIcon />} size=\"lg\">\r\n        Badge\r\n      </Badge>\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/separator/card": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/separator/card")),
      code : [{"title":"card.tsx","code":"import { Separator } from \"@/lib/components/core/default/separator\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <div className=\"space-y-2 rounded-md border p-4\">\r\n      <div>\r\n        <h3 className=\"font-bold\">dotUI</h3>\r\n        <p className=\"text-sm text-fg-muted\">Tools for building high-quality, accessible UI.</p>\r\n      </div>\r\n      <Separator className=\"my-4\" />\r\n      <div className=\"flex h-5 items-center space-x-4 text-sm\">\r\n        <div>Docs</div>\r\n        <Separator orientation=\"vertical\" />\r\n        <div>Components</div>\r\n        <Separator orientation=\"vertical\" />\r\n        <div>Hooks</div>\r\n        <Separator orientation=\"vertical\" />\r\n        <div>Themes</div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/separator/orientation": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/separator/orientation")),
      code : [{"title":"orientation.tsx","code":"import { Separator } from \"@/lib/components/core/default/separator\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <div className=\"flex items-center gap-10\">\r\n      <div className=\"flex h-5 items-center gap-2 text-sm\">\r\n        <div>Components</div>\r\n        <Separator orientation=\"vertical\" />\r\n        <div>Hooks</div>\r\n      </div>\r\n      <div className=\"flex flex-col items-center gap-2 text-sm\">\r\n        <div>Components</div>\r\n        <Separator orientation=\"horizontal\" />\r\n        <div>Hooks</div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/calendar/default": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/calendar/default")),
      code : [{"title":"default.tsx","code":"import { Calendar } from \"@/lib/components/core/default/calendar\";\r\n\r\nexport default function Demo() {\r\n  return <Calendar />;\r\n}\r\n"}]
    },
    "demos/components/core/calendar/label": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/calendar/label")),
      code : [{"title":"label.tsx","code":"import { Calendar } from \"@/lib/components/core/default/calendar\";\r\n\r\nexport default function Demo() {\r\n  return <Calendar aria-label=\"Event date\" />;\r\n}\r\n"}]
    },
    "demos/components/core/calendar/error-message": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/calendar/error-message")),
      code : [{"title":"error-message.tsx","code":"\"use client\";\r\n\r\nimport React from \"react\";\r\nimport { today, isWeekend, getLocalTimeZone } from \"@internationalized/date\";\r\nimport { useLocale } from \"react-aria\";\r\nimport { Calendar } from \"@/lib/components/core/default/calendar\";\r\n\r\nexport default function Demo() {\r\n  const [date, setDate] = React.useState(today(getLocalTimeZone()));\r\n  const { locale } = useLocale();\r\n  const isInvalid = isWeekend(date, locale);\r\n  return (\r\n    <Calendar\r\n      value={date}\r\n      onChange={setDate}\r\n      isInvalid={isInvalid}\r\n      errorMessage={\"We are closed on weekends\"}\r\n    />\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/calendar/validation": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/calendar/validation")),
      code : [{"title":"validation.tsx","code":"\"use client\";\r\n\r\nimport { getLocalTimeZone, today } from \"@internationalized/date\";\r\nimport { Calendar } from \"@/lib/components/core/default/calendar\";\r\n\r\nexport default function Demo() {\r\n  return <Calendar aria-label=\"Appointment date\" minValue={today(getLocalTimeZone())} />;\r\n}\r\n"}]
    },
    "demos/components/core/calendar/unvailable-dates": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/calendar/unvailable-dates")),
      code : [{"title":"unvailable-dates.tsx","code":"\"use client\";\r\n\r\nimport { type DateValue, getLocalTimeZone, isWeekend, today } from \"@internationalized/date\";\r\nimport { useLocale } from \"react-aria\";\r\nimport { Calendar } from \"@/lib/components/core/default/calendar\";\r\n\r\nexport default function Demo() {\r\n  const now = today(getLocalTimeZone());\r\n  const disabledRanges = [\r\n    [now, now.add({ days: 5 })],\r\n    [now.add({ days: 14 }), now.add({ days: 16 })],\r\n    [now.add({ days: 23 }), now.add({ days: 24 })],\r\n  ];\r\n\r\n  const { locale } = useLocale();\r\n  const isDateUnavailable = (date: DateValue) =>\r\n    isWeekend(date, locale) ||\r\n    disabledRanges.some(\r\n      (interval) => date.compare(interval[0]) >= 0 && date.compare(interval[1]) <= 0\r\n    );\r\n\r\n  return (\r\n    <Calendar\r\n      aria-label=\"Appointment date\"\r\n      minValue={today(getLocalTimeZone())}\r\n      isDateUnavailable={isDateUnavailable}\r\n    />\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/calendar/visible-months": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/calendar/visible-months")),
      code : [{"title":"visible-months.tsx","code":"import { Calendar } from \"@/lib/components/core/default/calendar\";\r\n\r\nexport default function Demo() {\r\n  return <Calendar visibleMonths={2} />;\r\n}\r\n"}]
    },
    "demos/components/core/calendar/page-behaviour": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/calendar/page-behaviour")),
      code : [{"title":"page-behaviour.tsx","code":"import { Calendar } from \"@/lib/components/core/default/calendar\";\r\n\r\nexport default function Demo() {\r\n  return <Calendar visibleMonths={2} pageBehavior=\"single\" />;\r\n}\r\n"}]
    },
    "demos/components/core/calendar/disabled": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/calendar/disabled")),
      code : [{"title":"disabled.tsx","code":"import { Calendar } from \"@/lib/components/core/default/calendar\";\r\n\r\nexport default function Demo() {\r\n  return <Calendar aria-label=\"Appointment date\" isDisabled />;\r\n}\r\n"}]
    },
    "demos/components/core/calendar/read-only": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/calendar/read-only")),
      code : [{"title":"read-only.tsx","code":"\"use client\";\r\n\r\nimport { getLocalTimeZone, today } from \"@internationalized/date\";\r\nimport { Calendar } from \"@/lib/components/core/default/calendar\";\r\n\r\nexport default function Demo() {\r\n  return <Calendar aria-label=\"Appointment date\" isReadOnly value={today(getLocalTimeZone())} />;\r\n}\r\n"}]
    },
    "demos/components/core/calendar/uncontrolled": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/calendar/uncontrolled")),
      code : [{"title":"uncontrolled.tsx","code":"\"use client\";\r\n\r\nimport React from \"react\";\r\nimport { getLocalTimeZone, today } from \"@internationalized/date\";\r\nimport { Calendar } from \"@/lib/components/core/default/calendar\";\r\n\r\nexport default function Demo() {\r\n  return <Calendar aria-label=\"Appointment date\" defaultValue={today(getLocalTimeZone())} />;\r\n}\r\n"}]
    },
    "demos/components/core/calendar/controlled": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/calendar/controlled")),
      code : [{"title":"controlled.tsx","code":"\"use client\";\r\n\r\nimport React from \"react\";\r\nimport { getLocalTimeZone, today } from \"@internationalized/date\";\r\nimport { useDateFormatter } from \"react-aria\";\r\nimport { Calendar } from \"@/lib/components/core/default/calendar\";\r\n\r\nexport default function Demo() {\r\n  const [value, setValue] = React.useState(today(getLocalTimeZone()));\r\n  const formatter = useDateFormatter({ dateStyle: \"full\" });\r\n  return (\r\n    <div className=\"flex flex-col items-center gap-6\">\r\n      <Calendar aria-label=\"Date (controlled)\" value={value} onChange={setValue} />\r\n      <p className=\"text-sm text-fg-muted\">\r\n        Selected date: {formatter.format(value.toDate(getLocalTimeZone()))}\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/calendar/composition": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/calendar/composition")),
      code : [{"title":"composition.tsx","code":"\"use client\";\r\n\r\nimport { Button } from \"@/lib/components/core/default/button\";\r\nimport {\r\n  CalendarRoot,\r\n  CalendarHeader,\r\n  CalendarGrid,\r\n  CalendarGridHeader,\r\n  CalendarHeaderCell,\r\n  CalendarGridBody,\r\n  CalendarCell,\r\n} from \"@/lib/components/core/default/calendar\";\r\nimport { Heading } from \"@/lib/components/core/default/heading\";\r\nimport { ChevronLeftIcon, ChevronRightIcon } from \"@/lib/icons\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <CalendarRoot>\r\n      <CalendarHeader>\r\n        <Button slot=\"previous\" variant=\"outline\" shape=\"square\" size=\"sm\">\r\n          <ChevronLeftIcon />\r\n        </Button>\r\n        <Heading className=\"text-sm\" />\r\n        <Button slot=\"next\" variant=\"outline\" shape=\"square\" size=\"sm\">\r\n          <ChevronRightIcon />\r\n        </Button>\r\n      </CalendarHeader>\r\n      <CalendarGrid>\r\n        <CalendarGridHeader>\r\n          {(day) => <CalendarHeaderCell>{day}</CalendarHeaderCell>}\r\n        </CalendarGridHeader>\r\n        <CalendarGridBody>{(date) => <CalendarCell date={date} />}</CalendarGridBody>\r\n      </CalendarGrid>\r\n    </CalendarRoot>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/date-field/default": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/date-field/default")),
      code : [{"title":"default.tsx","code":"import { DateField } from \"@/lib/components/core/default/date-field\";\r\n\r\nexport default function Demo() {\r\n  return <DateField aria-label=\"Meeting date\" />;\r\n}\r\n"}]
    },
    "demos/components/core/date-field/label": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/date-field/label")),
      code : [{"title":"label.tsx","code":"import { DateField } from \"@/lib/components/core/default/date-field\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <div className=\"space-y-4\">\r\n      <DateField label=\"Meeting date\" />\r\n      <DateField aria-label=\"Meeting date\" />\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/date-field/sizes": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/date-field/sizes")),
      code : [{"title":"sizes.tsx","code":"import { DateField } from \"@/lib/components/core/default/date-field\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <div className=\"flex items-center gap-4\">\r\n      <DateField label=\"small (sm)\" size=\"sm\" />\r\n      <DateField label=\"medium (md)\" size=\"md\" />\r\n      <DateField label=\"large (lg)\" size=\"lg\" />\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/date-field/prefix-and-suffix": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/date-field/prefix-and-suffix")),
      code : [{"title":"prefix-and-suffix.tsx","code":"import { DateField } from \"@/lib/components/core/default/date-field\";\r\nimport { CalendarIcon } from \"@/lib/icons\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <div className=\"space-y-2\">\r\n      <DateField aria-label=\"Meeting date\" prefix={<CalendarIcon />} />\r\n      <DateField aria-label=\"Meeting date\" suffix={<CalendarIcon />} />\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/date-field/description": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/date-field/description")),
      code : [{"title":"description.tsx","code":"\"use client\";\r\n\r\nimport React from \"react\";\r\nimport { DateField } from \"@/lib/components/core/default/date-field\";\r\n\r\nexport default function Demo() {\r\n  return <DateField label=\"Appointment\" description=\"Please select a date.\" />;\r\n}\r\n"}]
    },
    "demos/components/core/date-field/contextual-help": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/date-field/contextual-help")),
      code : [{"title":"contextual-help.tsx","code":"\"use client\";\r\n\r\nimport React from \"react\";\r\nimport { ContextualHelp } from \"@/lib/components/core/default/contextual-help\";\r\nimport { DateField } from \"@/lib/components/core/default/date-field\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <DateField\r\n      label=\"Appointment\"\r\n      contextualHelp={\r\n        <ContextualHelp\r\n          title=\"Need help?\"\r\n          description=\"If you're having trouble, contact our customer\r\n      support team for help.\"\r\n        />\r\n      }\r\n    />\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/date-field/error-message": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/date-field/error-message")),
      code : [{"title":"error-message.tsx","code":"\"use client\";\r\n\r\nimport React from \"react\";\r\nimport { DateField } from \"@/lib/components/core/default/date-field\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <DateField label=\"Meeting\" isInvalid errorMessage=\"Meetings can't be scheduled in the past.\" />\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/date-field/time-zones": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/date-field/time-zones")),
      code : [{"title":"time-zones.tsx","code":"\"use client\";\r\n\r\nimport { parseAbsoluteToLocal } from \"@internationalized/date\";\r\nimport { DateField } from \"@/lib/components/core/default/date-field\";\r\n\r\nexport default function Demo() {\r\n  return <DateField defaultValue={parseAbsoluteToLocal(\"2021-11-07T07:45:00Z\")} />;\r\n}\r\n"}]
    },
    "demos/components/core/date-field/granularity": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/date-field/granularity")),
      code : [{"title":"granularity.tsx","code":"\"use client\";\r\n\r\nimport { parseAbsoluteToLocal } from \"@internationalized/date\";\r\nimport { DateField } from \"@/lib/components/core/default/date-field\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <div className=\"flex flex-col items-center gap-4\">\r\n      <DateField\r\n        label=\"Hour\"\r\n        granularity=\"hour\"\r\n        defaultValue={parseAbsoluteToLocal(\"2021-04-07T18:45:22Z\")}\r\n      />\r\n      <DateField\r\n        label=\"Minute\"\r\n        granularity=\"minute\"\r\n        defaultValue={parseAbsoluteToLocal(\"2021-04-07T18:45:22Z\")}\r\n      />\r\n      <DateField\r\n        label=\"Second\"\r\n        granularity=\"second\"\r\n        defaultValue={parseAbsoluteToLocal(\"2021-04-07T18:45:22Z\")}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/date-field/placeholder": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/date-field/placeholder")),
      code : [{"title":"placeholder.tsx","code":"\"use client\";\r\n\r\nimport { CalendarDate } from \"@internationalized/date\";\r\nimport { DateField } from \"@/lib/components/core/default/date-field\";\r\n\r\nexport default function Demo() {\r\n  return <DateField label=\"Meeting date\" placeholderValue={new CalendarDate(1980, 1, 1)} />;\r\n}\r\n"}]
    },
    "demos/components/core/date-field/hide-time-zone": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/date-field/hide-time-zone")),
      code : [{"title":"hide-time-zone.tsx","code":"\"use client\";\r\n\r\nimport { parseZonedDateTime } from \"@internationalized/date\";\r\nimport { DateField } from \"@/lib/components/core/default/date-field\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <DateField\r\n      label=\"Appointment time\"\r\n      granularity=\"minute\"\r\n      defaultValue={parseZonedDateTime(\"2022-11-07T10:45[America/Los_Angeles]\")}\r\n      hideTimeZone\r\n    />\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/date-field/hour-cycle": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/date-field/hour-cycle")),
      code : [{"title":"hour-cycle.tsx","code":"\"use client\";\r\n\r\nimport { DateField } from \"@/lib/components/core/default/date-field\";\r\n\r\nexport default function Demo() {\r\n  return <DateField aria-label=\"Appointment date\" granularity=\"minute\" hourCycle={24} />;\r\n}\r\n"}]
    },
    "demos/components/core/date-field/loading": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/date-field/loading")),
      code : [{"title":"loading.tsx","code":"\"use client\";\r\n\r\nimport React from \"react\";\r\nimport { DateField } from \"@/lib/components/core/default/date-field\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <div className=\"grid grid-cols-2 gap-2\">\r\n      <DateField aria-label=\"Meeting date\" isLoading loaderPosition=\"prefix\" />\r\n      <DateField aria-label=\"Meeting date\" isLoading loaderPosition=\"suffix\" />\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/date-field/disabled": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/date-field/disabled")),
      code : [{"title":"disabled.tsx","code":"import { DateField } from \"@/lib/components/core/default/date-field\";\r\n\r\nexport default function Demo() {\r\n  return <DateField label=\"Event date\" isDisabled />;\r\n}\r\n"}]
    },
    "demos/components/core/date-field/read-only": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/date-field/read-only")),
      code : [{"title":"read-only.tsx","code":"\"use client\";\r\n\r\nimport React from \"react\";\r\nimport { CalendarDate } from \"@internationalized/date\";\r\nimport { DateField } from \"@/lib/components/core/default/date-field\";\r\n\r\nexport default function Demo() {\r\n  return <DateField label=\"Event date\" value={new CalendarDate(1980, 1, 1)} isReadOnly />;\r\n}\r\n"}]
    },
    "demos/components/core/date-field/required": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/date-field/required")),
      code : [{"title":"required.tsx","code":"\"use client\";\r\n\r\nimport React from \"react\";\r\nimport { DateField } from \"@/lib/components/core/default/date-field\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <div className=\"grid grid-cols-2 gap-4\">\r\n      <DateField label=\"Event date\" isRequired />\r\n      <DateField label=\"Event date\" isRequired necessityIndicator=\"icon\" />\r\n      <DateField label=\"Event date\" isRequired necessityIndicator=\"label\" />\r\n      <DateField label=\"Event date\" necessityIndicator=\"label\" />\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/date-field/uncontrolled": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/date-field/uncontrolled")),
      code : [{"title":"uncontrolled.tsx","code":"\"use client\";\r\n\r\nimport React from \"react\";\r\nimport { parseDate } from \"@internationalized/date\";\r\nimport { DateField } from \"@/lib/components/core/default/date-field\";\r\n\r\nexport default function Demo() {\r\n  return <DateField aria-label=\"Event date\" defaultValue={parseDate(\"2020-02-03\")} />;\r\n}\r\n"}]
    },
    "demos/components/core/date-field/controlled": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/date-field/controlled")),
      code : [{"title":"controlled.tsx","code":"\"use client\";\r\n\r\nimport React from \"react\";\r\nimport { parseDate } from \"@internationalized/date\";\r\nimport { DateField } from \"@/lib/components/core/default/date-field\";\r\n\r\nexport default function Demo() {\r\n  const [value, setValue] = React.useState(parseDate(\"2020-02-03\"));\r\n  return (\r\n    <div className=\"flex flex-col items-center gap-4\">\r\n      <DateField aria-label=\"Event date\" value={value} onChange={setValue} />\r\n      <p className=\"text-sm text-fg-muted\">selected date: {value.toString()}</p>\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/date-field/composition": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/date-field/composition")),
      code : [{"title":"composition.tsx","code":"\"use client\";\r\n\r\nimport React from \"react\";\r\nimport { DateFieldRoot } from \"@/lib/components/core/default/date-field\";\r\nimport { DateInput, DateSegment } from \"@/lib/components/core/default/date-input\";\r\nimport { Description, Label } from \"@/lib/components/core/default/field\";\r\nimport { InputRoot } from \"@/lib/components/core/default/input\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <DateFieldRoot>\r\n      <Label>Meeting time</Label>\r\n      <InputRoot>\r\n        <DateInput>{(segment) => <DateSegment segment={segment} />}</DateInput>\r\n      </InputRoot>\r\n      <Description>Please select a time between 9 AM and 5 PM.</Description>\r\n    </DateFieldRoot>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/date-picker/default": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/date-picker/default")),
      code : [{"title":"default.tsx","code":"import { DatePicker } from \"@/lib/components/core/default/date-picker\";\r\n\r\nexport default function Demo() {\r\n  return <DatePicker aria-label=\"Meeting date\" />;\r\n}\r\n"}]
    },
    "demos/components/core/date-picker/label": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/date-picker/label")),
      code : [{"title":"label.tsx","code":"import { DatePicker } from \"@/lib/components/core/default/date-picker\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <div className=\"space-y-4\">\r\n      <DatePicker label=\"Meeting date\" />\r\n      <DatePicker aria-label=\"Meeting date\" />\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/date-picker/sizes": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/date-picker/sizes")),
      code : [{"title":"sizes.tsx","code":"import { DatePicker } from \"@/lib/components/core/default/date-picker\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <div className=\"flex items-center gap-4\">\r\n      <DatePicker label=\"small (sm)\" size=\"sm\" />\r\n      <DatePicker label=\"medium (md)\" size=\"md\" />\r\n      <DatePicker label=\"large (lg)\" size=\"lg\" />\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/date-picker/prefix": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/date-picker/prefix")),
      code : [{"title":"prefix.tsx","code":"import { DatePicker } from \"@/lib/components/core/default/date-picker\";\r\nimport { UsersIcon } from \"@/lib/icons\";\r\n\r\nexport default function Demo() {\r\n  return <DatePicker aria-label=\"Meeting date\" prefix={<UsersIcon />} />;\r\n}\r\n"}]
    },
    "demos/components/core/date-picker/description": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/date-picker/description")),
      code : [{"title":"description.tsx","code":"\"use client\";\r\n\r\nimport React from \"react\";\r\nimport { DatePicker } from \"@/lib/components/core/default/date-picker\";\r\n\r\nexport default function Demo() {\r\n  return <DatePicker label=\"Appointment\" description=\"Please select a date.\" />;\r\n}\r\n"}]
    },
    "demos/components/core/date-picker/contextual-help": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/date-picker/contextual-help")),
      code : [{"title":"contextual-help.tsx","code":"\"use client\";\r\n\r\nimport React from \"react\";\r\nimport { ContextualHelp } from \"@/lib/components/core/default/contextual-help\";\r\nimport { DatePicker } from \"@/lib/components/core/default/date-picker\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <DatePicker\r\n      label=\"Appointment\"\r\n      contextualHelp={\r\n        <ContextualHelp\r\n          title=\"Need help?\"\r\n          description=\"If you're having trouble, contact our customer\r\n      support team for help.\"\r\n        />\r\n      }\r\n    />\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/date-picker/error-message": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/date-picker/error-message")),
      code : [{"title":"error-message.tsx","code":"\"use client\";\r\n\r\nimport React from \"react\";\r\nimport { DatePicker } from \"@/lib/components/core/default/date-picker\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <DatePicker label=\"Meeting\" isInvalid errorMessage=\"Meetings can't be scheduled in the past.\" />\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/date-picker/time-zones": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/date-picker/time-zones")),
      code : [{"title":"time-zones.tsx","code":"\"use client\";\r\n\r\nimport { parseAbsoluteToLocal } from \"@internationalized/date\";\r\nimport { DatePicker } from \"@/lib/components/core/default/date-picker\";\r\n\r\nexport default function Demo() {\r\n  return <DatePicker defaultValue={parseAbsoluteToLocal(\"2021-11-07T07:45:00Z\")} />;\r\n}\r\n"}]
    },
    "demos/components/core/date-picker/granularity": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/date-picker/granularity")),
      code : [{"title":"granularity.tsx","code":"\"use client\";\r\n\r\nimport { parseAbsoluteToLocal } from \"@internationalized/date\";\r\nimport { DatePicker } from \"@/lib/components/core/default/date-picker\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <div className=\"flex flex-col items-center gap-4\">\r\n      <DatePicker\r\n        label=\"Hour\"\r\n        granularity=\"hour\"\r\n        defaultValue={parseAbsoluteToLocal(\"2021-04-07T18:45:22Z\")}\r\n      />\r\n      <DatePicker\r\n        label=\"Minute\"\r\n        granularity=\"minute\"\r\n        defaultValue={parseAbsoluteToLocal(\"2021-04-07T18:45:22Z\")}\r\n      />\r\n      <DatePicker\r\n        label=\"Second\"\r\n        granularity=\"second\"\r\n        defaultValue={parseAbsoluteToLocal(\"2021-04-07T18:45:22Z\")}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/date-picker/placeholder": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/date-picker/placeholder")),
      code : [{"title":"placeholder.tsx","code":"\"use client\";\r\n\r\nimport { CalendarDate } from \"@internationalized/date\";\r\nimport { DatePicker } from \"@/lib/components/core/default/date-picker\";\r\n\r\nexport default function Demo() {\r\n  return <DatePicker label=\"Meeting date\" placeholderValue={new CalendarDate(1980, 1, 1)} />;\r\n}\r\n"}]
    },
    "demos/components/core/date-picker/hide-time-zone": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/date-picker/hide-time-zone")),
      code : [{"title":"hide-time-zone.tsx","code":"\"use client\";\r\n\r\nimport { parseZonedDateTime } from \"@internationalized/date\";\r\nimport { DatePicker } from \"@/lib/components/core/default/date-picker\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <DatePicker\r\n      label=\"Appointment time\"\r\n      granularity=\"minute\"\r\n      defaultValue={parseZonedDateTime(\"2022-11-07T10:45[America/Los_Angeles]\")}\r\n      hideTimeZone\r\n    />\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/date-picker/hour-cycle": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/date-picker/hour-cycle")),
      code : [{"title":"hour-cycle.tsx","code":"\"use client\";\r\n\r\nimport { DatePicker } from \"@/lib/components/core/default/date-picker\";\r\n\r\nexport default function Demo() {\r\n  return <DatePicker aria-label=\"Appointment date\" granularity=\"minute\" hourCycle={24} />;\r\n}\r\n"}]
    },
    "demos/components/core/date-picker/loading": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/date-picker/loading")),
      code : [{"title":"loading.tsx","code":"\"use client\";\r\n\r\nimport React from \"react\";\r\nimport { DatePicker } from \"@/lib/components/core/default/date-picker\";\r\n\r\nexport default function Demo() {\r\n  return <DatePicker aria-label=\"Meeting date\" isLoading />;\r\n}\r\n"}]
    },
    "demos/components/core/date-picker/disabled": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/date-picker/disabled")),
      code : [{"title":"disabled.tsx","code":"import { DatePicker } from \"@/lib/components/core/default/date-picker\";\r\n\r\nexport default function Demo() {\r\n  return <DatePicker label=\"Event date\" isDisabled />;\r\n}\r\n"}]
    },
    "demos/components/core/date-picker/read-only": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/date-picker/read-only")),
      code : [{"title":"read-only.tsx","code":"\"use client\";\r\n\r\nimport React from \"react\";\r\nimport { CalendarDate } from \"@internationalized/date\";\r\nimport { DatePicker } from \"@/lib/components/core/default/date-picker\";\r\n\r\nexport default function Demo() {\r\n  return <DatePicker label=\"Event date\" value={new CalendarDate(1980, 1, 1)} isReadOnly />;\r\n}\r\n"}]
    },
    "demos/components/core/date-picker/required": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/date-picker/required")),
      code : [{"title":"required.tsx","code":"\"use client\";\r\n\r\nimport React from \"react\";\r\nimport { DatePicker } from \"@/lib/components/core/default/date-picker\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <div className=\"grid grid-cols-2 gap-4\">\r\n      <DatePicker label=\"Event date\" isRequired />\r\n      <DatePicker label=\"Event date\" isRequired necessityIndicator=\"icon\" />\r\n      <DatePicker label=\"Event date\" isRequired necessityIndicator=\"label\" />\r\n      <DatePicker label=\"Event date\" necessityIndicator=\"label\" />\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/date-picker/uncontrolled": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/date-picker/uncontrolled")),
      code : [{"title":"uncontrolled.tsx","code":"\"use client\";\r\n\r\nimport React from \"react\";\r\nimport { parseDate } from \"@internationalized/date\";\r\nimport { DatePicker } from \"@/lib/components/core/default/date-picker\";\r\n\r\nexport default function Demo() {\r\n  return <DatePicker aria-label=\"Meeting date\" defaultValue={parseDate(\"2020-02-03\")} />;\r\n}\r\n"}]
    },
    "demos/components/core/date-picker/controlled": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/date-picker/controlled")),
      code : [{"title":"controlled.tsx","code":"\"use client\";\r\n\r\nimport React from \"react\";\r\nimport { parseDate } from \"@internationalized/date\";\r\nimport { DatePicker } from \"@/lib/components/core/default/date-picker\";\r\n\r\nexport default function Demo() {\r\n  const [value, setValue] = React.useState(parseDate(\"2020-02-03\"));\r\n  return (\r\n    <div className=\"flex flex-col items-center gap-4\">\r\n      <DatePicker label=\"Meeting date\" value={value} onChange={setValue} />\r\n      <p className=\"text-sm text-fg-muted\">selected date: {value.toString()}</p>\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/date-picker/composition": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/date-picker/composition")),
      code : [{"title":"composition.tsx","code":"\"use client\";\r\n\r\nimport React from \"react\";\r\nimport { Button } from \"@/lib/components/core/default/button\";\r\nimport { Calendar } from \"@/lib/components/core/default/calendar\";\r\nimport { DateInput, DateSegment } from \"@/lib/components/core/default/date-input\";\r\nimport { DatePickerRoot } from \"@/lib/components/core/default/date-picker\";\r\nimport { DialogContent } from \"@/lib/components/core/default/dialog\";\r\nimport { Description, FieldError, Label } from \"@/lib/components/core/default/field\";\r\nimport { InputRoot } from \"@/lib/components/core/default/input\";\r\nimport { Overlay } from \"@/lib/components/core/default/overlay\";\r\nimport { CalendarIcon } from \"@/lib/icons\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <DatePickerRoot>\r\n      <Label>Meeting date</Label>\r\n      <InputRoot\r\n        suffix={\r\n          <Button variant=\"default\" size=\"sm\" shape=\"square\" className=\"size-7\">\r\n            <CalendarIcon />\r\n          </Button>\r\n        }\r\n        className=\"pr-1\"\r\n      >\r\n        <DateInput>{(segment) => <DateSegment segment={segment} />}</DateInput>\r\n      </InputRoot>\r\n      <Description>Please select a date.</Description>\r\n      <FieldError />\r\n      <Overlay type=\"popover\" mobileType=\"drawer\">\r\n        <DialogContent>\r\n          <Calendar />\r\n        </DialogContent>\r\n      </Overlay>\r\n    </DatePickerRoot>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/date-range-picker/default": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/date-range-picker/default")),
      code : [{"title":"default.tsx","code":"import { DateRangePicker } from \"@/lib/components/core/default/date-range-picker\";\r\n\r\nexport default function Demo() {\r\n  return <DateRangePicker aria-label=\"Meeting date\" />;\r\n}\r\n"}]
    },
    "demos/components/core/date-range-picker/label": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/date-range-picker/label")),
      code : [{"title":"label.tsx","code":"import { DateRangePicker } from \"@/lib/components/core/default/date-range-picker\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <div className=\"space-y-4\">\r\n      <DateRangePicker label=\"Trip\" />\r\n      <DateRangePicker aria-label=\"Trip\" />\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/date-range-picker/sizes": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/date-range-picker/sizes")),
      code : [{"title":"sizes.tsx","code":"import { DateRangePicker } from \"@/lib/components/core/default/date-range-picker\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <div className=\"flex flex-col gap-2\">\r\n      <DateRangePicker label=\"small\" size=\"sm\" />\r\n      <DateRangePicker label=\"medium\" size=\"md\" />\r\n      <DateRangePicker label=\"large\" size=\"lg\" />\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/date-range-picker/prefix": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/date-range-picker/prefix")),
      code : [{"title":"prefix.tsx","code":"import { DateRangePicker } from \"@/lib/components/core/default/date-range-picker\";\r\nimport { PlaneIcon } from \"@/lib/icons\";\r\n\r\nexport default function Demo() {\r\n  return <DateRangePicker aria-label=\"Trip\" prefix={<PlaneIcon />} />;\r\n}\r\n"}]
    },
    "demos/components/core/date-range-picker/description": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/date-range-picker/description")),
      code : [{"title":"description.tsx","code":"\"use client\";\r\n\r\nimport React from \"react\";\r\nimport { DateRangePicker } from \"@/lib/components/core/default/date-range-picker\";\r\n\r\nexport default function Demo() {\r\n  return <DateRangePicker label=\"Trip\" description=\"Please select a date range.\" />;\r\n}\r\n"}]
    },
    "demos/components/core/date-range-picker/contextual-help": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/date-range-picker/contextual-help")),
      code : [{"title":"contextual-help.tsx","code":"\"use client\";\r\n\r\nimport React from \"react\";\r\nimport { ContextualHelp } from \"@/lib/components/core/default/contextual-help\";\r\nimport { DateRangePicker } from \"@/lib/components/core/default/date-range-picker\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <DateRangePicker\r\n      label=\"Trip\"\r\n      contextualHelp={\r\n        <ContextualHelp\r\n          title=\"Need help?\"\r\n          description=\"If you're having trouble, contact our customer\r\n      support team for help.\"\r\n        />\r\n      }\r\n    />\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/date-range-picker/error-message": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/date-range-picker/error-message")),
      code : [{"title":"error-message.tsx","code":"\"use client\";\r\n\r\nimport React from \"react\";\r\nimport { DateRangePicker } from \"@/lib/components/core/default/date-range-picker\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <DateRangePicker\r\n      label=\"Trip dates\"\r\n      isInvalid\r\n      errorMessage=\"Trip dates can't be scheduled in the past.\"\r\n    />\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/date-range-picker/time-zones": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/date-range-picker/time-zones")),
      code : [{"title":"time-zones.tsx","code":"\"use client\";\r\n\r\nimport { parseAbsoluteToLocal } from \"@internationalized/date\";\r\nimport { DateRangePicker } from \"@/lib/components/core/default/date-range-picker\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <DateRangePicker\r\n      defaultValue={{\r\n        start: parseAbsoluteToLocal(\"2021-04-07T18:45:22Z\"),\r\n        end: parseAbsoluteToLocal(\"2021-04-08T20:00:00Z\"),\r\n      }}\r\n    />\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/date-range-picker/granularity": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/date-range-picker/granularity")),
      code : [{"title":"granularity.tsx","code":"\"use client\";\r\n\r\nimport { parseAbsoluteToLocal } from \"@internationalized/date\";\r\nimport { DateRangePicker } from \"@/lib/components/core/default/date-range-picker\";\r\n\r\nexport default function Demo() {\r\n  const dates = {\r\n    start: parseAbsoluteToLocal(\"2021-04-07T18:45:22Z\"),\r\n    end: parseAbsoluteToLocal(\"2021-04-08T20:00:00Z\"),\r\n  };\r\n  return (\r\n    <div className=\"flex flex-col gap-4\">\r\n      <DateRangePicker label=\"Hour\" granularity=\"hour\" defaultValue={dates} />\r\n      <DateRangePicker label=\"Minute\" granularity=\"minute\" defaultValue={dates} />\r\n      <DateRangePicker label=\"Second\" granularity=\"second\" defaultValue={dates} />\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/date-range-picker/placeholder": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/date-range-picker/placeholder")),
      code : [{"title":"placeholder.tsx","code":"\"use client\";\r\n\r\nimport { CalendarDate } from \"@internationalized/date\";\r\nimport { DateRangePicker } from \"@/lib/components/core/default/date-range-picker\";\r\n\r\nexport default function Demo() {\r\n  return <DateRangePicker label=\"Meeting date\" placeholderValue={new CalendarDate(1980, 1, 1)} />;\r\n}\r\n"}]
    },
    "demos/components/core/date-range-picker/hide-time-zone": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/date-range-picker/hide-time-zone")),
      code : [{"title":"hide-time-zone.tsx","code":"\"use client\";\r\n\r\nimport { parseAbsoluteToLocal } from \"@internationalized/date\";\r\nimport { DateRangePicker } from \"@/lib/components/core/default/date-range-picker\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <DateRangePicker\r\n      label=\"Appointment time\"\r\n      granularity=\"minute\"\r\n      defaultValue={{\r\n        start: parseAbsoluteToLocal(\"2021-04-07T18:45:22Z\"),\r\n        end: parseAbsoluteToLocal(\"2021-04-08T20:00:00Z\"),\r\n      }}\r\n      hideTimeZone\r\n    />\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/date-range-picker/hour-cycle": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/date-range-picker/hour-cycle")),
      code : [{"title":"hour-cycle.tsx","code":"\"use client\";\r\n\r\nimport { DateRangePicker } from \"@/lib/components/core/default/date-range-picker\";\r\n\r\nexport default function Demo() {\r\n  return <DateRangePicker aria-label=\"Appointment date\" granularity=\"minute\" hourCycle={24} />;\r\n}\r\n"}]
    },
    "demos/components/core/date-range-picker/loading": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/date-range-picker/loading")),
      code : [{"title":"loading.tsx","code":"\"use client\";\r\n\r\nimport React from \"react\";\r\nimport { DateRangePicker } from \"@/lib/components/core/default/date-range-picker\";\r\n\r\nexport default function Demo() {\r\n  return <DateRangePicker aria-label=\"Meeting date\" isLoading />;\r\n}\r\n"}]
    },
    "demos/components/core/date-range-picker/disabled": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/date-range-picker/disabled")),
      code : [{"title":"disabled.tsx","code":"import { DateRangePicker } from \"@/lib/components/core/default/date-range-picker\";\r\n\r\nexport default function Demo() {\r\n  return <DateRangePicker label=\"Trip dates\" isDisabled />;\r\n}\r\n"}]
    },
    "demos/components/core/date-range-picker/read-only": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/date-range-picker/read-only")),
      code : [{"title":"read-only.tsx","code":"\"use client\";\r\n\r\nimport React from \"react\";\r\nimport { parseAbsoluteToLocal } from \"@internationalized/date\";\r\nimport { DateRangePicker } from \"@/lib/components/core/default/date-range-picker\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <DateRangePicker\r\n      label=\"Event date\"\r\n      value={{\r\n        start: parseAbsoluteToLocal(\"2021-04-07T18:45:22Z\"),\r\n        end: parseAbsoluteToLocal(\"2021-04-08T20:00:00Z\"),\r\n      }}\r\n      isReadOnly\r\n    />\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/date-range-picker/required": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/date-range-picker/required")),
      code : [{"title":"required.tsx","code":"\"use client\";\r\n\r\nimport React from \"react\";\r\nimport { DateRangePicker } from \"@/lib/components/core/default/date-range-picker\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <div className=\"grid grid-cols-2 gap-4\">\r\n      <DateRangePicker label=\"Event date\" isRequired />\r\n      <DateRangePicker label=\"Event date\" isRequired necessityIndicator=\"icon\" />\r\n      <DateRangePicker label=\"Event date\" isRequired necessityIndicator=\"label\" />\r\n      <DateRangePicker label=\"Event date\" necessityIndicator=\"label\" />\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/date-range-picker/uncontrolled": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/date-range-picker/uncontrolled")),
      code : [{"title":"uncontrolled.tsx","code":"\"use client\";\r\n\r\nimport React from \"react\";\r\nimport { parseDate } from \"@internationalized/date\";\r\nimport { DateRangePicker } from \"@/lib/components/core/default/date-range-picker\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <DateRangePicker\r\n      label=\"Controlled\"\r\n      defaultValue={{\r\n        start: parseDate(\"2020-02-03\"),\r\n        end: parseDate(\"2020-02-08\"),\r\n      }}\r\n    />\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/date-range-picker/controlled": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/date-range-picker/controlled")),
      code : [{"title":"controlled.tsx","code":"\"use client\";\r\n\r\nimport React from \"react\";\r\nimport { getLocalTimeZone, parseDate } from \"@internationalized/date\";\r\nimport { useDateFormatter } from \"react-aria\";\r\nimport { DateRangePicker } from \"@/lib/components/core/default/date-range-picker\";\r\n\r\nexport default function Demo() {\r\n  const [value, setValue] = React.useState({\r\n    start: parseDate(\"2024-02-03\"),\r\n    end: parseDate(\"2024-02-08\"),\r\n  });\r\n  const formatter = useDateFormatter({ dateStyle: \"long\" });\r\n\r\n  return (\r\n    <div className=\"flex flex-col items-center gap-4\">\r\n      <DateRangePicker label=\"Controlled\" value={value} onChange={setValue} />\r\n      <p className=\"text-sm text-fg-muted\">\r\n        Selected date:{\" \"}\r\n        {value\r\n          ? formatter.formatRange(\r\n              value.start.toDate(getLocalTimeZone()),\r\n              value.end.toDate(getLocalTimeZone())\r\n            )\r\n          : \"--\"}\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/date-range-picker/composition": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/date-range-picker/composition")),
      code : [{"title":"composition.tsx","code":"\"use client\";\r\n\r\nimport React from \"react\";\r\nimport { Button } from \"@/lib/components/core/default/button\";\r\nimport { DateInput, DateSegment } from \"@/lib/components/core/default/date-input\";\r\nimport { DatePickerRoot } from \"@/lib/components/core/default/date-picker\";\r\nimport { DialogContent } from \"@/lib/components/core/default/dialog\";\r\nimport { Description, FieldError, Label } from \"@/lib/components/core/default/field\";\r\nimport { InputRoot } from \"@/lib/components/core/default/input\";\r\nimport { Overlay } from \"@/lib/components/core/default/overlay\";\r\nimport { RangeCalendar } from \"@/lib/components/core/default/range-calendar\";\r\nimport { CalendarIcon } from \"@/lib/icons\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <DatePickerRoot>\r\n      <Label>Meeting date</Label>\r\n      <InputRoot\r\n        suffix={\r\n          <Button variant=\"default\" size=\"sm\" shape=\"square\" className=\"size-7\">\r\n            <CalendarIcon />\r\n          </Button>\r\n        }\r\n        className=\"pr-1\"\r\n      >\r\n        <DateInput slot=\"start\">{(segment) => <DateSegment segment={segment} />}</DateInput>\r\n        <span aria-hidden=\"true\">–</span>\r\n        <DateInput slot=\"end\" className=\"flex-1\">\r\n          {(segment) => <DateSegment segment={segment} />}\r\n        </DateInput>\r\n      </InputRoot>\r\n      <Description>Please select a date.</Description>\r\n      <FieldError />\r\n      <Overlay type=\"popover\" mobileType=\"drawer\">\r\n        <DialogContent>\r\n          <RangeCalendar />\r\n        </DialogContent>\r\n      </Overlay>\r\n    </DatePickerRoot>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/range-calendar/default": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/range-calendar/default")),
      code : [{"title":"default.tsx","code":"import { RangeCalendar } from \"@/lib/components/core/default/range-calendar\";\r\n\r\nexport default function Demo() {\r\n  return <RangeCalendar />;\r\n}\r\n"}]
    },
    "demos/components/core/range-calendar/label": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/range-calendar/label")),
      code : [{"title":"label.tsx","code":"import { RangeCalendar } from \"@/lib/components/core/default/range-calendar\";\r\n\r\nexport default function Demo() {\r\n  return <RangeCalendar aria-label=\"Event date\" />;\r\n}\r\n"}]
    },
    "demos/components/core/range-calendar/error-message": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/range-calendar/error-message")),
      code : [{"title":"error-message.tsx","code":"\"use client\";\r\n\r\nimport React from \"react\";\r\nimport { today, getLocalTimeZone } from \"@internationalized/date\";\r\nimport { RangeCalendar } from \"@/lib/components/core/default/range-calendar\";\r\n\r\nexport default function Demo() {\r\n  const [range, setRange] = React.useState({\r\n    start: today(getLocalTimeZone()),\r\n    end: today(getLocalTimeZone()).add({ weeks: 1, days: 3 }),\r\n  });\r\n  const isInvalid = range.end.compare(range.start) > 7;\r\n  return (\r\n    <RangeCalendar\r\n      aria-label=\"Trip dates\"\r\n      value={range}\r\n      onChange={setRange}\r\n      isInvalid={isInvalid}\r\n      errorMessage={isInvalid ? \"Maximum stay duration is 1 week\" : undefined}\r\n    />\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/range-calendar/validation": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/range-calendar/validation")),
      code : [{"title":"validation.tsx","code":"\"use client\";\r\n\r\nimport { getLocalTimeZone, today } from \"@internationalized/date\";\r\nimport { RangeCalendar } from \"@/lib/components/core/default/range-calendar\";\r\n\r\nexport default function Demo() {\r\n  return <RangeCalendar aria-label=\"Appointment date\" minValue={today(getLocalTimeZone())} />;\r\n}\r\n"}]
    },
    "demos/components/core/range-calendar/unvailable-dates": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/range-calendar/unvailable-dates")),
      code : [{"title":"unvailable-dates.tsx","code":"\"use client\";\r\n\r\nimport { type DateValue, getLocalTimeZone, today } from \"@internationalized/date\";\r\nimport { RangeCalendar } from \"@/lib/components/core/default/range-calendar\";\r\n\r\nexport default function Demo() {\r\n  const now = today(getLocalTimeZone());\r\n  const disabledRanges = [\r\n    [now, now.add({ days: 5 })],\r\n    [now.add({ days: 14 }), now.add({ days: 16 })],\r\n    [now.add({ days: 23 }), now.add({ days: 24 })],\r\n  ];\r\n\r\n  const isDateUnavailable = (date: DateValue) =>\r\n    disabledRanges.some(\r\n      (interval) => date.compare(interval[0]) >= 0 && date.compare(interval[1]) <= 0\r\n    );\r\n\r\n  return (\r\n    <RangeCalendar\r\n      aria-label=\"Trip dates\"\r\n      minValue={today(getLocalTimeZone())}\r\n      isDateUnavailable={isDateUnavailable}\r\n    />\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/range-calendar/non-contiguous-ranges": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/range-calendar/non-contiguous-ranges")),
      code : [{"title":"non-contiguous-ranges.tsx","code":"\"use client\";\r\n\r\nimport { type DateValue, getLocalTimeZone, today } from \"@internationalized/date\";\r\nimport { RangeCalendar } from \"@/lib/components/core/default/range-calendar\";\r\n\r\nexport default function Demo() {\r\n  const now = today(getLocalTimeZone());\r\n  const disabledRanges = [\r\n    [now, now.add({ days: 5 })],\r\n    [now.add({ days: 14 }), now.add({ days: 16 })],\r\n    [now.add({ days: 23 }), now.add({ days: 24 })],\r\n  ];\r\n\r\n  const isDateUnavailable = (date: DateValue) =>\r\n    disabledRanges.some(\r\n      (interval) => date.compare(interval[0]) >= 0 && date.compare(interval[1]) <= 0\r\n    );\r\n\r\n  return (\r\n    <RangeCalendar\r\n      aria-label=\"Trip dates\"\r\n      minValue={today(getLocalTimeZone())}\r\n      isDateUnavailable={isDateUnavailable}\r\n      allowsNonContiguousRanges\r\n    />\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/range-calendar/visible-months": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/range-calendar/visible-months")),
      code : [{"title":"visible-months.tsx","code":"import { RangeCalendar } from \"@/lib/components/core/default/range-calendar\";\r\n\r\nexport default function Demo() {\r\n  return <RangeCalendar visibleMonths={2} />;\r\n}\r\n"}]
    },
    "demos/components/core/range-calendar/page-behaviour": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/range-calendar/page-behaviour")),
      code : [{"title":"page-behaviour.tsx","code":"import { RangeCalendar } from \"@/lib/components/core/default/range-calendar\";\r\n\r\nexport default function Demo() {\r\n  return <RangeCalendar visibleMonths={2} pageBehavior=\"single\" />;\r\n}\r\n"}]
    },
    "demos/components/core/range-calendar/disabled": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/range-calendar/disabled")),
      code : [{"title":"disabled.tsx","code":"import { RangeCalendar } from \"@/lib/components/core/default/range-calendar\";\r\n\r\nexport default function Demo() {\r\n  return <RangeCalendar aria-label=\"Appointment date\" isDisabled />;\r\n}\r\n"}]
    },
    "demos/components/core/range-calendar/read-only": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/range-calendar/read-only")),
      code : [{"title":"read-only.tsx","code":"\"use client\";\r\n\r\nimport { getLocalTimeZone, today } from \"@internationalized/date\";\r\nimport { RangeCalendar } from \"@/lib/components/core/default/range-calendar\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <RangeCalendar\r\n      aria-label=\"Appointment date\"\r\n      isReadOnly\r\n      value={{\r\n        start: today(getLocalTimeZone()),\r\n        end: today(getLocalTimeZone()).add({ weeks: 1 }),\r\n      }}\r\n    />\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/range-calendar/uncontrolled": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/range-calendar/uncontrolled")),
      code : [{"title":"uncontrolled.tsx","code":"\"use client\";\r\n\r\nimport React from \"react\";\r\nimport { getLocalTimeZone, today } from \"@internationalized/date\";\r\nimport { RangeCalendar } from \"@/lib/components/core/default/range-calendar\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <RangeCalendar\r\n      aria-label=\"Date (controlled)\"\r\n      defaultValue={{\r\n        start: today(getLocalTimeZone()),\r\n        end: today(getLocalTimeZone()).add({ weeks: 1 }),\r\n      }}\r\n    />\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/range-calendar/controlled": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/range-calendar/controlled")),
      code : [{"title":"controlled.tsx","code":"\"use client\";\r\n\r\nimport React from \"react\";\r\nimport { getLocalTimeZone, today } from \"@internationalized/date\";\r\nimport { type DateRange } from \"react-aria-components\";\r\nimport { RangeCalendar } from \"@/lib/components/core/default/range-calendar\";\r\n\r\nexport default function Demo() {\r\n  const [range, setRange] = React.useState<DateRange>({\r\n    start: today(getLocalTimeZone()),\r\n    end: today(getLocalTimeZone()).add({ weeks: 1 }),\r\n  });\r\n  return (\r\n    <div className=\"flex flex-col items-center gap-6\">\r\n      <RangeCalendar aria-label=\"Date (controlled)\" value={range} onChange={setRange} />\r\n      <p className=\"text-sm text-fg-muted\">\r\n        Start date: {range?.start.toString()}\r\n        <br />\r\n        End date: {range?.end.toString()}\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/range-calendar/composition": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/range-calendar/composition")),
      code : [{"title":"composition.tsx","code":"\"use client\";\r\n\r\nimport { Button } from \"@/lib/components/core/default/button\";\r\nimport {\r\n  CalendarHeader,\r\n  CalendarGrid,\r\n  CalendarGridHeader,\r\n  CalendarHeaderCell,\r\n  CalendarGridBody,\r\n  CalendarCell,\r\n} from \"@/lib/components/core/default/calendar\";\r\nimport { Heading } from \"@/lib/components/core/default/heading\";\r\nimport { RangeCalendarRoot } from \"@/lib/components/core/default/range-calendar\";\r\nimport { ChevronLeftIcon, ChevronRightIcon } from \"@/lib/icons\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <RangeCalendarRoot>\r\n      <CalendarHeader>\r\n        <Button slot=\"previous\" variant=\"outline\" shape=\"square\" size=\"sm\">\r\n          <ChevronLeftIcon />\r\n        </Button>\r\n        <Heading className=\"text-sm\" />\r\n        <Button slot=\"next\" variant=\"outline\" shape=\"square\" size=\"sm\">\r\n          <ChevronRightIcon />\r\n        </Button>\r\n      </CalendarHeader>\r\n      <CalendarGrid>\r\n        <CalendarGridHeader>\r\n          {(day) => <CalendarHeaderCell>{day}</CalendarHeaderCell>}\r\n        </CalendarGridHeader>\r\n        <CalendarGridBody>\r\n          {(date) => (\r\n            <CalendarCell date={date} range>\r\n              {({ formattedDate }) => <span className=\"z-20\">{formattedDate}</span>}\r\n            </CalendarCell>\r\n          )}\r\n        </CalendarGridBody>\r\n      </CalendarGrid>\r\n    </RangeCalendarRoot>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/time-field/default": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/time-field/default")),
      code : [{"title":"default.tsx","code":"import { TimeField } from \"@/lib/components/core/default/time-field\";\r\n\r\nexport default function Demo() {\r\n  return <TimeField />;\r\n}\r\n"}]
    },
    "demos/components/core/time-field/label": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/time-field/label")),
      code : [{"title":"label.tsx","code":"import { TimeField } from \"@/lib/components/core/default/time-field\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <div className=\"space-y-4\">\r\n      <TimeField label=\"Event time\" />\r\n      <TimeField aria-label=\"Event time\" />\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/time-field/sizes": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/time-field/sizes")),
      code : [{"title":"sizes.tsx","code":"import { TimeField } from \"@/lib/components/core/default/time-field\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <div className=\"flex items-center gap-4\">\r\n      <TimeField label=\"small (sm)\" size=\"sm\" />\r\n      <TimeField label=\"medium (md)\" size=\"md\" />\r\n      <TimeField label=\"large (lg)\" size=\"lg\" />\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/time-field/prefix-and-suffix": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/time-field/prefix-and-suffix")),
      code : [{"title":"prefix-and-suffix.tsx","code":"import { TimeField } from \"@/lib/components/core/default/time-field\";\r\nimport { TimerIcon } from \"@/lib/icons\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <div className=\"space-y-2\">\r\n      <TimeField prefix={<TimerIcon />} />\r\n      <TimeField suffix={<TimerIcon />} />\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/time-field/description": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/time-field/description")),
      code : [{"title":"description.tsx","code":"\"use client\";\r\n\r\nimport React from \"react\";\r\nimport { TimeField } from \"@/lib/components/core/default/time-field\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <TimeField label=\"Appointment\" description=\"Please select a time between 9 AM and 5 PM.\" />\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/time-field/contextual-help": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/time-field/contextual-help")),
      code : [{"title":"contextual-help.tsx","code":"\"use client\";\r\n\r\nimport React from \"react\";\r\nimport { ContextualHelp } from \"@/lib/components/core/default/contextual-help\";\r\nimport { TimeField } from \"@/lib/components/core/default/time-field\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <TimeField\r\n      label=\"Appointment\"\r\n      contextualHelp={\r\n        <ContextualHelp\r\n          title=\"Need help?\"\r\n          description=\"If you're having trouble accessing your account, contact our customer\r\n      support team for help.\"\r\n        />\r\n      }\r\n    />\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/time-field/error-message": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/time-field/error-message")),
      code : [{"title":"error-message.tsx","code":"\"use client\";\r\n\r\nimport React from \"react\";\r\nimport { TimeField } from \"@/lib/components/core/default/time-field\";\r\n\r\nexport default function Demo() {\r\n  return <TimeField label=\"Meeting\" isInvalid errorMessage=\"Meetings start every 15 minutes.\" />;\r\n}\r\n"}]
    },
    "demos/components/core/time-field/time-zones": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/time-field/time-zones")),
      code : [{"title":"time-zones.tsx","code":"\"use client\";\r\n\r\nimport { parseAbsoluteToLocal } from \"@internationalized/date\";\r\nimport { TimeField } from \"@/lib/components/core/default/time-field\";\r\n\r\nexport default function Demo() {\r\n  return <TimeField defaultValue={parseAbsoluteToLocal(\"2021-11-07T07:45:00Z\")} />;\r\n}\r\n"}]
    },
    "demos/components/core/time-field/granularity": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/time-field/granularity")),
      code : [{"title":"granularity.tsx","code":"\"use client\";\r\n\r\nimport { parseAbsoluteToLocal } from \"@internationalized/date\";\r\nimport { TimeField } from \"@/lib/components/core/default/time-field\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <TimeField granularity=\"second\" defaultValue={parseAbsoluteToLocal(\"2021-04-07T18:45:22Z\")} />\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/time-field/placeholder": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/time-field/placeholder")),
      code : [{"title":"placeholder.tsx","code":"\"use client\";\r\n\r\nimport { Time } from \"@internationalized/date\";\r\nimport { TimeField } from \"@/lib/components/core/default/time-field\";\r\n\r\nexport default function Demo() {\r\n  return <TimeField placeholderValue={new Time(9)} />;\r\n}\r\n"}]
    },
    "demos/components/core/time-field/hide-time-zone": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/time-field/hide-time-zone")),
      code : [{"title":"hide-time-zone.tsx","code":"\"use client\";\r\n\r\nimport { parseZonedDateTime } from \"@internationalized/date\";\r\nimport { TimeField } from \"@/lib/components/core/default/time-field\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <TimeField\r\n      defaultValue={parseZonedDateTime(\"2022-11-07T10:45[America/Los_Angeles]\")}\r\n      hideTimeZone\r\n    />\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/time-field/hour-cycle": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/time-field/hour-cycle")),
      code : [{"title":"hour-cycle.tsx","code":"\"use client\";\r\n\r\nimport { TimeField } from \"@/lib/components/core/default/time-field\";\r\n\r\nexport default function Demo() {\r\n  return <TimeField aria-label=\"Appointment time\" hourCycle={24} />;\r\n}\r\n"}]
    },
    "demos/components/core/time-field/loading": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/time-field/loading")),
      code : [{"title":"loading.tsx","code":"\"use client\";\r\n\r\nimport React from \"react\";\r\nimport { TimeField } from \"@/lib/components/core/default/time-field\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <div className=\"grid grid-cols-2 gap-2\">\r\n      <TimeField isLoading loaderPosition=\"prefix\" />\r\n      <TimeField isLoading loaderPosition=\"suffix\" />\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/time-field/disabled": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/time-field/disabled")),
      code : [{"title":"disabled.tsx","code":"import { TimeField } from \"@/lib/components/core/default/time-field\";\r\n\r\nexport default function Demo() {\r\n  return <TimeField label=\"Event time\" isDisabled />;\r\n}\r\n"}]
    },
    "demos/components/core/time-field/read-only": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/time-field/read-only")),
      code : [{"title":"read-only.tsx","code":"\"use client\";\r\n\r\nimport React from \"react\";\r\nimport { Time } from \"@internationalized/date\";\r\nimport { TimeField } from \"@/lib/components/core/default/time-field\";\r\n\r\nexport default function Demo() {\r\n  return <TimeField label=\"Event time\" value={new Time(11)} isReadOnly />;\r\n}\r\n"}]
    },
    "demos/components/core/time-field/required": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/time-field/required")),
      code : [{"title":"required.tsx","code":"\"use client\";\r\n\r\nimport React from \"react\";\r\nimport { TimeField } from \"@/lib/components/core/default/time-field\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <div className=\"grid grid-cols-2 gap-4\">\r\n      <TimeField label=\"Event time\" isRequired />\r\n      <TimeField label=\"Event time\" isRequired necessityIndicator=\"icon\" />\r\n      <TimeField label=\"Event time\" isRequired necessityIndicator=\"label\" />\r\n      <TimeField label=\"Event time\" necessityIndicator=\"label\" />\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/time-field/uncontrolled": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/time-field/uncontrolled")),
      code : [{"title":"uncontrolled.tsx","code":"\"use client\";\r\n\r\nimport { Time } from \"@internationalized/date\";\r\nimport { TimeField } from \"@/lib/components/core/default/time-field\";\r\n\r\nexport default function Demo() {\r\n  return <TimeField defaultValue={new Time(11, 45)} />;\r\n}\r\n"}]
    },
    "demos/components/core/time-field/controlled": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/time-field/controlled")),
      code : [{"title":"controlled.tsx","code":"\"use client\";\r\n\r\nimport React from \"react\";\r\nimport { Time } from \"@internationalized/date\";\r\nimport { TimeField } from \"@/lib/components/core/default/time-field\";\r\n\r\nexport default function Demo() {\r\n  const [time, setTime] = React.useState(new Time(11, 45));\r\n  return (\r\n    <div className=\"flex flex-col items-center gap-4\">\r\n      <TimeField value={time} onChange={setTime} />\r\n      <p className=\"text-sm text-fg-muted\">selected time: {time.toString()}</p>\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/time-field/composition": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/time-field/composition")),
      code : [{"title":"composition.tsx","code":"\"use client\";\r\n\r\nimport React from \"react\";\r\nimport { DateInput, DateSegment } from \"@/lib/components/core/default/date-input\";\r\nimport { Description, Label } from \"@/lib/components/core/default/field\";\r\nimport { InputRoot } from \"@/lib/components/core/default/input\";\r\nimport { TimeFieldRoot } from \"@/lib/components/core/default/time-field\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <TimeFieldRoot>\r\n      <Label>Meeting time</Label>\r\n      <InputRoot>\r\n        <DateInput>{(segment) => <DateSegment segment={segment} />}</DateInput>\r\n      </InputRoot>\r\n      <Description>Please select a time between 9 AM and 5 PM.</Description>\r\n    </TimeFieldRoot>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/drop-zone/default": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/drop-zone/default")),
      code : [{"title":"default.tsx","code":"import React from \"react\";\r\nimport { DropZone } from \"@/lib/components/core/default/drop-zone\";\r\nimport { UploadIcon } from \"@/lib/icons\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <DropZone>\r\n      <UploadIcon />\r\n    </DropZone>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/drop-zone/label": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/drop-zone/label")),
      code : [{"title":"label.tsx","code":"\"use client\";\r\n\r\nimport React from \"react\";\r\nimport { DropZone } from \"@/lib/components/core/default/drop-zone\";\r\nimport { Text } from \"@/lib/components/core/default/text\";\r\nimport { UploadIcon } from \"@/lib/icons\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <div className=\"flex flex-col gap-4\">\r\n      <DropZone aria-label=\"drag and drop files here\">\r\n        <UploadIcon />\r\n      </DropZone>\r\n      <DropZone>\r\n        <UploadIcon />\r\n        <Text slot=\"label\">Drag and drop files here</Text>\r\n      </DropZone>\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/drop-zone/disabled": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/drop-zone/disabled")),
      code : [{"title":"disabled.tsx","code":"import React from \"react\";\r\nimport { DropZone } from \"@/lib/components/core/default/drop-zone\";\r\nimport { Text } from \"@/lib/components/core/default/text\";\r\nimport { UploadIcon } from \"@/lib/icons\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <DropZone isDisabled>\r\n      <UploadIcon />\r\n      <Text slot=\"label\">Drag and drop files here</Text>\r\n    </DropZone>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/drop-zone/file-trigger": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/drop-zone/file-trigger")),
      code : [{"title":"file-trigger.tsx","code":"import React from \"react\";\r\nimport { Button } from \"@/lib/components/core/default/button\";\r\nimport { DropZone } from \"@/lib/components/core/default/drop-zone\";\r\nimport { FileTrigger } from \"@/lib/components/core/default/file-trigger\";\r\nimport { Text } from \"@/lib/components/core/default/text\";\r\nimport { UploadIcon } from \"@/lib/icons\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <DropZone className=\"space-y-1\">\r\n      <UploadIcon />\r\n      <Text slot=\"label\">Drag and drop files here</Text>\r\n      <FileTrigger>\r\n        <Button>Select files</Button>\r\n      </FileTrigger>\r\n    </DropZone>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/alert/default": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/alert/default")),
      code : [{"title":"default.tsx","code":"import { Alert } from \"@/lib/components/core/default/alert\";\r\n\r\nexport default function AlertDemo() {\r\n  return <Alert>You can add components to your app using the cli.</Alert>;\r\n}\r\n"}]
    },
    "demos/components/core/alert/variants": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/alert/variants")),
      code : [{"title":"variants.tsx","code":"\"use client\";\r\n\r\nimport React from \"react\";\r\nimport { Alert, type AlertProps } from \"@/lib/components/core/default/alert\";\r\nimport { RadioGroup, Radio } from \"@/lib/components/core/default/radio-group\";\r\nimport { Switch } from \"@/lib/components/core/default/switch\";\r\n\r\ntype Variant = AlertProps[\"variant\"];\r\n\r\nexport default function Demo() {\r\n  const [variant, setVariant] = React.useState<Variant>(\"default\");\r\n  const [fill, setFill] = React.useState(true);\r\n\r\n  return (\r\n    <div className=\"flex items-center gap-8\">\r\n      <Alert variant={variant} fill={fill}>\r\n        You can add components to your app using the cli.\r\n      </Alert>\r\n      <Switch isSelected={fill} onChange={setFill}>\r\n        Fill\r\n      </Switch>\r\n      <RadioGroup\r\n        label=\"Variant\"\r\n        value={variant}\r\n        onChange={(newVal) => setVariant(newVal as Variant)}\r\n      >\r\n        <Radio value=\"default\">Default</Radio>\r\n        <Radio value=\"success\">Success</Radio>\r\n        <Radio value=\"danger\">Danger</Radio>\r\n        <Radio value=\"warning\">Warning</Radio>\r\n        <Radio value=\"info\">Info</Radio>\r\n      </RadioGroup>\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/alert/title": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/alert/title")),
      code : [{"title":"title.tsx","code":"import { Alert } from \"@/lib/components/core/default/alert\";\r\n\r\nexport default function AlertDemo() {\r\n  return <Alert variant=\"warning\" fill title=\"Your account has been suspended.\" />;\r\n}\r\n"}]
    },
    "demos/components/core/alert/content": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/alert/content")),
      code : [{"title":"content.tsx","code":"import { Alert } from \"@/lib/components/core/default/alert\";\r\n\r\nexport default function AlertDemo() {\r\n  return (\r\n    <Alert title=\"Payment Information\">Enter your payment method to complete your purchase.</Alert>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/alert/custom-icon": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/alert/custom-icon")),
      code : [{"title":"custom-icon.tsx","code":"import { Alert } from \"@/lib/components/core/default/alert\";\r\nimport { GlobeIcon } from \"@/lib/icons\";\r\n\r\nexport default function AlertDemo() {\r\n  return <Alert icon={<GlobeIcon />}>Hello world!</Alert>;\r\n}\r\n"}]
    },
    "demos/components/core/alert/action": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/alert/action")),
      code : [{"title":"action.tsx","code":"import { Alert } from \"@/lib/components/core/default/alert\";\r\nimport { Button } from \"@/lib/components/core/default/button\";\r\n\r\nexport default function AlertDemo() {\r\n  return (\r\n    <Alert\r\n      action={\r\n        <Button variant=\"primary\" size=\"sm\">\r\n          Upgrade\r\n        </Button>\r\n      }\r\n    >\r\n      You are currently on the free plan. Upgrade to unlock more features.\r\n    </Alert>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/alert/composition": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/alert/composition")),
      code : [{"title":"composition.tsx","code":"import { AlertContent, AlertRoot, AlertTitle } from \"@/lib/components/core/default/alert\";\r\nimport { Button } from \"@/lib/components/core/default/button\";\r\nimport { WalletIcon } from \"@/lib/icons\";\r\n\r\nexport default function AlertDemo() {\r\n  return (\r\n    <AlertRoot>\r\n      <WalletIcon />\r\n      <div className=\"flex-1\">\r\n        <AlertTitle>Payment Information</AlertTitle>\r\n        <AlertContent>Enter your payment method to complete your purchase.</AlertContent>\r\n      </div>\r\n      <Button variant=\"primary\" size=\"sm\">\r\n        Upgrade\r\n      </Button>\r\n    </AlertRoot>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/progress/default": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/progress/default")),
      code : [{"title":"default.tsx","code":"\"use client\";\r\n\r\nimport * as React from \"react\";\r\nimport { Progress } from \"@/lib/components/core/default/progress\";\r\n\r\nexport default function Demo() {\r\n  return <Progress aria-label=\"loading\" value={75} />;\r\n}\r\n"}]
    },
    "demos/components/core/progress/variants": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/progress/variants")),
      code : [{"title":"variants.tsx","code":"import * as React from \"react\";\r\nimport { Progress } from \"@/lib/components/core/default/progress\";\r\n\r\nconst variants = [\"default\", \"success\", \"accent\", \"danger\", \"warning\"] as const;\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <div className=\"space-y-4\">\r\n      {variants.map((variant) => (\r\n        <Progress key={variant} value={75} label={variant} variant={variant} />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/progress/sizes": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/progress/sizes")),
      code : [{"title":"sizes.tsx","code":"\"use client\";\r\n\r\nimport * as React from \"react\";\r\nimport { Progress } from \"@/lib/components/core/default/progress\";\r\n\r\nconst sizes = [\"sm\", \"md\", \"lg\"] as const;\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <div className=\"space-y-4\">\r\n      {sizes.map((size) => (\r\n        <Progress key={size} value={75} size={size} label={size} />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/progress/label": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/progress/label")),
      code : [{"title":"label.tsx","code":"\"use client\";\r\n\r\nimport * as React from \"react\";\r\nimport { Progress } from \"@/lib/components/core/default/progress\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <div className=\"space-y-4\">\r\n      <Progress aria-label=\"Loading\" value={75} />\r\n      <Progress label=\"Loading...\" value={75} />\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/progress/value-label": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/progress/value-label")),
      code : [{"title":"value-label.tsx","code":"\"use client\";\r\n\r\nimport * as React from \"react\";\r\nimport { Progress } from \"@/lib/components/core/default/progress\";\r\n\r\nexport default function Demo() {\r\n  return <Progress label=\"Loading\" showValueLabel value={75} />;\r\n}\r\n"}]
    },
    "demos/components/core/progress/format-options": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/progress/format-options")),
      code : [{"title":"format-options.tsx","code":"\"use client\";\r\n\r\nimport * as React from \"react\";\r\nimport { Progress } from \"@/lib/components/core/default/progress\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <Progress\r\n      label=\"Sending…\"\r\n      showValueLabel\r\n      formatOptions={{ style: \"currency\", currency: \"JPY\" }}\r\n      value={60}\r\n    />\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/progress/custom-value-label": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/progress/custom-value-label")),
      code : [{"title":"custom-value-label.tsx","code":"\"use client\";\r\n\r\nimport * as React from \"react\";\r\nimport { Progress } from \"@/lib/components/core/default/progress\";\r\n\r\nexport default function Demo() {\r\n  return <Progress label=\"Feeding…\" showValueLabel valueLabel=\"30 of 100 dogs\" value={30} />;\r\n}\r\n"}]
    },
    "demos/components/core/progress/indeterminate": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/progress/indeterminate")),
      code : [{"title":"indeterminate.tsx","code":"\"use client\";\r\n\r\nimport * as React from \"react\";\r\nimport { Progress } from \"@/lib/components/core/default/progress\";\r\n\r\nexport default function Demo() {\r\n  return <Progress isIndeterminate />;\r\n}\r\n"}]
    },
    "demos/components/core/progress/duration": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/progress/duration")),
      code : [{"title":"duration.tsx","code":"\"use client\";\r\n\r\nimport * as React from \"react\";\r\nimport { Button } from \"@/lib/components/core/default/button\";\r\nimport { Progress } from \"@/lib/components/core/default/progress\";\r\nimport { RotateCwIcon } from \"@/lib/icons\";\r\n\r\nexport default function Demo() {\r\n  const [key, setKey] = React.useState(0);\r\n  const restart = () => setKey((prev) => prev + 1);\r\n  return (\r\n    <div className=\"flex w-full flex-col items-center gap-6\">\r\n      <Button prefix={<RotateCwIcon />} onPress={restart}>\r\n        Restart animation\r\n      </Button>\r\n      <Progress key={key} duration=\"30s\" />\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/progress/min-max-values": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/progress/min-max-values")),
      code : [{"title":"min-max-values.tsx","code":"\"use client\";\r\n\r\nimport * as React from \"react\";\r\nimport { Progress } from \"@/lib/components/core/default/progress\";\r\n\r\nexport default function Demo() {\r\n  return <Progress minValue={50} maxValue={150} value={100} />;\r\n}\r\n"}]
    },
    "demos/components/core/progress/composition": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/progress/composition")),
      code : [{"title":"composition.tsx","code":"\"use client\";\r\n\r\nimport * as React from \"react\";\r\nimport { Label } from \"react-aria-components\";\r\nimport {\r\n  ProgressIndicator,\r\n  ProgressRoot,\r\n  ProgressValueLabel,\r\n} from \"@/lib/components/core/default/progress\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <ProgressRoot value={50} className=\"flex-row items-center gap-4\">\r\n      <Label>Progress</Label>\r\n      <ProgressIndicator />\r\n      <ProgressValueLabel />\r\n    </ProgressRoot>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/progress/custom-color": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/progress/custom-color")),
      code : [{"title":"custom-color.tsx","code":"\"use client\";\r\n\r\nimport * as React from \"react\";\r\nimport { Progress } from \"@/lib/components/core/default/progress\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <Progress\r\n      value={75}\r\n      classNames={{\r\n        indicator: \"bg-slate-300 dark:bg-slate-800\",\r\n        filler: \"bg-slate-800 dark:bg-slate-300\",\r\n      }}\r\n    />\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/progress/toolbar": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/progress/toolbar")),
      code : [{"title":"toolbar.tsx","code":"\"use client\";\r\n\r\nimport * as React from \"react\";\r\nimport { Button } from \"@/lib/components/core/default/button\";\r\nimport { Input, InputRoot } from \"@/lib/components/core/default/input\";\r\nimport { Progress } from \"@/lib/components/core/default/progress\";\r\nimport { TextFieldRoot } from \"@/lib/components/core/default/text-field\";\r\nimport { ALargeSmallIcon, RotateCwIcon } from \"@/lib/icons\";\r\n\r\nexport default function Demo() {\r\n  const [key, setKey] = React.useState(0);\r\n  const refresh = () => setKey((key) => key + 1);\r\n  return (\r\n    <TextFieldRoot key={key} defaultValue=\"https://dotui.org\">\r\n      <InputRoot className=\"relative h-10 overflow-hidden px-1 pb-0.5\">\r\n        <Button size=\"sm\" variant=\"quiet\" shape=\"square\" className=\"size-7\">\r\n          <ALargeSmallIcon />\r\n        </Button>\r\n        <Input className=\"text-center\" />\r\n        <Button onPress={refresh} size=\"sm\" variant=\"quiet\" shape=\"square\" className=\"size-7\">\r\n          <RotateCwIcon />\r\n        </Button>\r\n        <Progress\r\n          value={50}\r\n          size=\"sm\"\r\n          variant=\"accent\"\r\n          duration=\"5s\"\r\n          className=\"absolute bottom-0 left-0 right-0\"\r\n        />\r\n      </InputRoot>\r\n    </TextFieldRoot>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/skeleton/card": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/skeleton/card")),
      code : [{"title":"card.tsx","code":"import { Skeleton } from \"@/lib/components/core/default/skeleton\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <div className=\"space-y-4\">\r\n      <Skeleton className=\"h-44 w-64\" />\r\n      <div className=\"flex items-center space-x-4\">\r\n        <Skeleton className=\"size-10 rounded-full\" />\r\n        <div className=\"space-y-2\">\r\n          <Skeleton className=\"h-4 w-44\" />\r\n          <Skeleton className=\"h-4 w-36\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/skeleton/children": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/skeleton/children")),
      code : [{"title":"children.tsx","code":"import { Button } from \"@/lib/components/core/default/button\";\r\nimport { Skeleton } from \"@/lib/components/core/default/skeleton\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <Skeleton>\r\n      <Button>Button</Button>\r\n    </Skeleton>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/skeleton/show": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/skeleton/show")),
      code : [{"title":"show.tsx","code":"import { Button } from \"@/lib/components/core/default/button\";\r\nimport { Skeleton } from \"@/lib/components/core/default/skeleton\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <div className=\"flex flex-col items-center gap-4\">\r\n      <Skeleton>\r\n        <Button>Button</Button>\r\n      </Skeleton>\r\n      <Skeleton show={false}>\r\n        <Button>Button</Button>\r\n      </Skeleton>\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/skeleton/api-simulation": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/skeleton/api-simulation")),
      code : [{"title":"api-simulation.tsx","code":"\"use client\";\r\n\r\nimport React from \"react\";\r\nimport { Button } from \"@/lib/components/core/default/button\";\r\nimport { Skeleton } from \"@/lib/components/core/default/skeleton\";\r\n\r\nexport default function Demo() {\r\n  const [status, setStatus] = React.useState<\"idle\" | \"loading\" | \"error\" | \"success\">(\"idle\");\r\n  const apiCall = () => {\r\n    setStatus(\"loading\");\r\n    setTimeout(() => {\r\n      setStatus(\"success\");\r\n    }, 4000);\r\n  };\r\n  return (\r\n    <div className=\"flex flex-col items-center gap-4\">\r\n      <Button isLoading={status === \"loading\"} onPress={apiCall}>\r\n        Simulate API Call\r\n      </Button>\r\n      <Skeleton show={status === \"loading\"}>\r\n        <p>Some text loaded from API.</p>\r\n      </Skeleton>\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/skeleton/fixed-size-children": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/skeleton/fixed-size-children")),
      code : [{"title":"fixed-size-children.tsx","code":"import { Button } from \"@/lib/components/core/default/button\";\r\nimport { Skeleton } from \"@/lib/components/core/default/skeleton\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <Skeleton className=\"size-20\">\r\n      <Button>Button</Button>\r\n    </Skeleton>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/checkbox-group/default": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/checkbox-group/default")),
      code : [{"title":"default.tsx","code":"import { Checkbox } from \"@/lib/components/core/default/checkbox\";\r\nimport { CheckboxGroup } from \"@/lib/components/core/default/checkbox-group\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <CheckboxGroup label=\"React frameworks\" defaultValue={[\"nextjs\"]}>\r\n      <Checkbox value=\"nextjs\">Next.js</Checkbox>\r\n      <Checkbox value=\"remix\">Remix</Checkbox>\r\n      <Checkbox value=\"gatsby\">Gatsby</Checkbox>\r\n    </CheckboxGroup>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/checkbox-group/cards": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/checkbox-group/cards")),
      code : [{"title":"cards.tsx","code":"import { Checkbox } from \"@/lib/components/core/default/checkbox\";\r\nimport { CheckboxGroup } from \"@/lib/components/core/default/checkbox-group\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <CheckboxGroup label=\"React frameworks\" defaultValue={[\"nextjs\"]} variant=\"card\">\r\n      <Checkbox value=\"nextjs\">Next.js</Checkbox>\r\n      <Checkbox value=\"remix\">Remix</Checkbox>\r\n      <Checkbox value=\"gatsby\">Gatsby</Checkbox>\r\n    </CheckboxGroup>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/checkbox-group/label": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/checkbox-group/label")),
      code : [{"title":"label.tsx","code":"import { Checkbox } from \"@/lib/components/core/default/checkbox\";\r\nimport { CheckboxGroup } from \"@/lib/components/core/default/checkbox-group\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <div className=\"flex items-center gap-10\">\r\n      <CheckboxGroup label=\"React frameworks\" defaultValue={[\"nextjs\"]}>\r\n        <Checkbox value=\"nextjs\">Next.js</Checkbox>\r\n        <Checkbox value=\"remix\">Remix</Checkbox>\r\n      </CheckboxGroup>\r\n      <CheckboxGroup aria-label=\"React frameworks\" defaultValue={[\"nextjs\"]}>\r\n        <Checkbox value=\"nextjs\">Next.js</Checkbox>\r\n        <Checkbox value=\"remix\">Remix</Checkbox>\r\n      </CheckboxGroup>\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/checkbox-group/description": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/checkbox-group/description")),
      code : [{"title":"description.tsx","code":"import { Checkbox } from \"@/lib/components/core/default/checkbox\";\r\nimport { CheckboxGroup } from \"@/lib/components/core/default/checkbox-group\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <CheckboxGroup\r\n      label=\"React frameworks\"\r\n      defaultValue={[\"nextjs\"]}\r\n      description=\"You can pick any frameworks.\"\r\n    >\r\n      <Checkbox value=\"nextjs\">Next.js</Checkbox>\r\n      <Checkbox value=\"remix\">Remix</Checkbox>\r\n      <Checkbox value=\"gatsby\">Gatsby</Checkbox>\r\n    </CheckboxGroup>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/checkbox-group/contextual-help": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/checkbox-group/contextual-help")),
      code : [{"title":"contextual-help.tsx","code":"import { Checkbox } from \"@/lib/components/core/default/checkbox\";\r\nimport { CheckboxGroup } from \"@/lib/components/core/default/checkbox-group\";\r\nimport { ContextualHelp } from \"@/lib/components/core/default/contextual-help\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <CheckboxGroup\r\n      label=\"React frameworks\"\r\n      defaultValue={[\"nextjs\"]}\r\n      contextualHelp={\r\n        <ContextualHelp\r\n          title=\"Need help?\"\r\n          description=\"If you need help, please contact support.\"\r\n        />\r\n      }\r\n    >\r\n      <Checkbox value=\"nextjs\">Next.js</Checkbox>\r\n      <Checkbox value=\"remix\">Remix</Checkbox>\r\n      <Checkbox value=\"gatsby\">Gatsby</Checkbox>\r\n    </CheckboxGroup>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/checkbox-group/error-message": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/checkbox-group/error-message")),
      code : [{"title":"error-message.tsx","code":"import { Checkbox } from \"@/lib/components/core/default/checkbox\";\r\nimport { CheckboxGroup } from \"@/lib/components/core/default/checkbox-group\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <CheckboxGroup label=\"React frameworks\" isInvalid errorMessage=\"Please select a framework.\">\r\n      <Checkbox value=\"nextjs\">Next.js</Checkbox>\r\n      <Checkbox value=\"remix\">Remix</Checkbox>\r\n      <Checkbox value=\"gatsby\">Gatsby</Checkbox>\r\n    </CheckboxGroup>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/checkbox-group/disabled": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/checkbox-group/disabled")),
      code : [{"title":"disabled.tsx","code":"import { Checkbox } from \"@/lib/components/core/default/checkbox\";\r\nimport { CheckboxGroup } from \"@/lib/components/core/default/checkbox-group\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <CheckboxGroup label=\"React frameworks\" isDisabled defaultValue={[\"nextjs\"]}>\r\n      <Checkbox value=\"nextjs\">Next.js</Checkbox>\r\n      <Checkbox value=\"remix\">Remix</Checkbox>\r\n      <Checkbox value=\"gatsby\">Gatsby</Checkbox>\r\n    </CheckboxGroup>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/checkbox-group/read-only": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/checkbox-group/read-only")),
      code : [{"title":"read-only.tsx","code":"import { Checkbox } from \"@/lib/components/core/default/checkbox\";\r\nimport { CheckboxGroup } from \"@/lib/components/core/default/checkbox-group\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <CheckboxGroup label=\"React frameworks\" isReadOnly defaultValue={[\"nextjs\"]}>\r\n      <Checkbox value=\"nextjs\">Next.js</Checkbox>\r\n      <Checkbox value=\"remix\">Remix</Checkbox>\r\n      <Checkbox value=\"gatsby\">Gatsby</Checkbox>\r\n    </CheckboxGroup>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/checkbox-group/required": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/checkbox-group/required")),
      code : [{"title":"required.tsx","code":"import React from \"react\";\r\nimport { Checkbox } from \"@/lib/components/core/default/checkbox\";\r\nimport { CheckboxGroup } from \"@/lib/components/core/default/checkbox-group\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <div className=\"grid grid-cols-2 gap-4\">\r\n      <CheckboxGroup label=\"React frameworks\" isRequired>\r\n        <Checkbox value=\"nextjs\">Next.js</Checkbox>\r\n        <Checkbox value=\"remix\">Remix</Checkbox>\r\n      </CheckboxGroup>\r\n      <CheckboxGroup label=\"React frameworks\" isRequired necessityIndicator=\"icon\">\r\n        <Checkbox value=\"nextjs\">Next.js</Checkbox>\r\n        <Checkbox value=\"remix\">Remix</Checkbox>\r\n      </CheckboxGroup>\r\n      <CheckboxGroup label=\"React frameworks\" isRequired necessityIndicator=\"label\">\r\n        <Checkbox value=\"nextjs\">Next.js</Checkbox>\r\n        <Checkbox value=\"remix\">Remix</Checkbox>\r\n      </CheckboxGroup>\r\n      <CheckboxGroup label=\"React frameworks\" necessityIndicator=\"label\">\r\n        <Checkbox value=\"nextjs\">Next.js</Checkbox>\r\n        <Checkbox value=\"remix\">Remix</Checkbox>\r\n      </CheckboxGroup>\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/checkbox-group/uncontrolled": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/checkbox-group/uncontrolled")),
      code : [{"title":"uncontrolled.tsx","code":"import { Checkbox } from \"@/lib/components/core/default/checkbox\";\r\nimport { CheckboxGroup } from \"@/lib/components/core/default/checkbox-group\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <CheckboxGroup label=\"React frameworks\" defaultValue={[\"nextjs\"]}>\r\n      <Checkbox value=\"nextjs\">Next.js</Checkbox>\r\n      <Checkbox value=\"remix\">Remix</Checkbox>\r\n      <Checkbox value=\"gatsby\">Gatsby</Checkbox>\r\n    </CheckboxGroup>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/checkbox-group/controlled": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/checkbox-group/controlled")),
      code : [{"title":"controlled.tsx","code":"\"use client\";\r\n\r\nimport React from \"react\";\r\nimport { Checkbox } from \"@/lib/components/core/default/checkbox\";\r\nimport { CheckboxGroup } from \"@/lib/components/core/default/checkbox-group\";\r\n\r\nexport default function Demo() {\r\n  const [frameworks, setFrameworks] = React.useState([\"nextjs\"]);\r\n  return (\r\n    <div className=\"flex flex-col items-center gap-4\">\r\n      <CheckboxGroup\r\n        label=\"React frameworks\"\r\n        value={frameworks}\r\n        onChange={(value) => setFrameworks(value)}\r\n      >\r\n        <Checkbox value=\"nextjs\">Next.js</Checkbox>\r\n        <Checkbox value=\"remix\">Remix</Checkbox>\r\n        <Checkbox value=\"gatsby\">Gatsby</Checkbox>\r\n      </CheckboxGroup>\r\n      <p className=\"text-xs text-fg-muted\">\r\n        {frameworks.length === 0\r\n          ? \"You haven't selected any frameworks.\"\r\n          : `You selected ${frameworks.join(\", \")}.`}\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/checkbox-group/composition": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/checkbox-group/composition")),
      code : [{"title":"composition.tsx","code":"import { Checkbox } from \"@/lib/components/core/default/checkbox\";\r\nimport { CheckboxGroupRoot } from \"@/lib/components/core/default/checkbox-group\";\r\nimport { Description, FieldError, Label } from \"@/lib/components/core/default/field\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <CheckboxGroupRoot defaultValue={[\"nextjs\"]}>\r\n      <Label>React frameworks</Label>\r\n      <Description>You can pick any frameworks.</Description>\r\n      <div className=\"flex items-center gap-4\">\r\n        <Checkbox value=\"nextjs\">Next.js</Checkbox>\r\n        <Checkbox value=\"remix\">Remix</Checkbox>\r\n        <Checkbox value=\"gatsby\">Gatsby</Checkbox>\r\n      </div>\r\n      <FieldError />\r\n    </CheckboxGroupRoot>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/checkbox/default": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/checkbox/default")),
      code : [{"title":"default.tsx","code":"\"use client\";\r\n\r\nimport { Checkbox } from \"@/lib/components/core/default/checkbox\";\r\nimport { Link } from \"@/lib/components/core/default/link\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <Checkbox>\r\n      I accept the{\" \"}\r\n      <Link variant=\"accent\" href=\"#\">\r\n        terms and conditions\r\n      </Link>\r\n    </Checkbox>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/checkbox/card": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/checkbox/card")),
      code : [{"title":"card.tsx","code":"import { Checkbox } from \"@/lib/components/core/default/checkbox\";\r\n\r\nexport default function Demo() {\r\n  return <Checkbox variant=\"card\">I agree to the terms and conditions</Checkbox>;\r\n}\r\n"}]
    },
    "demos/components/core/checkbox/indeterminate": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/checkbox/indeterminate")),
      code : [{"title":"indeterminate.tsx","code":"\"use client\";\r\n\r\nimport { Checkbox } from \"@/lib/components/core/default/checkbox\";\r\n\r\nexport default function Demo() {\r\n  return <Checkbox isIndeterminate>Select all</Checkbox>;\r\n}\r\n"}]
    },
    "demos/components/core/checkbox/disabled": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/checkbox/disabled")),
      code : [{"title":"disabled.tsx","code":"\"use client\";\r\n\r\nimport { Checkbox } from \"@/lib/components/core/default/checkbox\";\r\n\r\nexport default function Demo() {\r\n  return <Checkbox isDisabled>I accept the terms and conditions</Checkbox>;\r\n}\r\n"}]
    },
    "demos/components/core/checkbox/read-only": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/checkbox/read-only")),
      code : [{"title":"read-only.tsx","code":"import { Checkbox } from \"@/lib/components/core/default/checkbox\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <Checkbox defaultSelected isReadOnly>\r\n      I accept the terms and conditions\r\n    </Checkbox>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/checkbox/uncontrolled": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/checkbox/uncontrolled")),
      code : [{"title":"uncontrolled.tsx","code":"import { Checkbox } from \"@/lib/components/core/default/checkbox\";\r\n\r\nexport default function Demo() {\r\n  return <Checkbox defaultSelected>I accept the terms and conditions</Checkbox>;\r\n}\r\n"}]
    },
    "demos/components/core/checkbox/controlled": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/checkbox/controlled")),
      code : [{"title":"controlled.tsx","code":"\"use client\";\r\n\r\nimport React from \"react\";\r\nimport { Checkbox } from \"@/lib/components/core/default/checkbox\";\r\n\r\nexport default function Demo() {\r\n  const [checked, setChecked] = React.useState(false);\r\n  return (\r\n    <div className=\"flex flex-col items-center gap-4\">\r\n      <Checkbox isSelected={checked} onChange={setChecked}>\r\n        I accept the terms and conditions\r\n      </Checkbox>\r\n      <p className=\"text-xs text-fg-muted\">\r\n        <span className=\"font-bold\">Checked:</span> {checked ? \"true\" : \"false\"}\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/number-field/default": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/number-field/default")),
      code : [{"title":"default.tsx","code":"import React from \"react\";\r\nimport { NumberField } from \"@/lib/components/core/default/number-field\";\r\n\r\nexport default function Demo() {\r\n  return <NumberField label=\"Width\" defaultValue={1024} />;\r\n}\r\n"}]
    },
    "demos/components/core/number-field/format-options": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/number-field/format-options")),
      code : [{"title":"format-options.tsx","code":"import React from \"react\";\r\nimport { NumberField } from \"@/lib/components/core/default/number-field\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <div className=\"grid grid-cols-2 gap-4\">\r\n      <NumberField\r\n        label=\"Decimal\"\r\n        defaultValue={0}\r\n        formatOptions={{\r\n          signDisplay: \"exceptZero\",\r\n          minimumFractionDigits: 1,\r\n          maximumFractionDigits: 2,\r\n        }}\r\n      />\r\n      <NumberField\r\n        label=\"Percentage\"\r\n        defaultValue={0.05}\r\n        formatOptions={{\r\n          style: \"percent\",\r\n        }}\r\n      />\r\n      <NumberField\r\n        label=\"Currency\"\r\n        defaultValue={45}\r\n        formatOptions={{\r\n          style: \"currency\",\r\n          currency: \"EUR\",\r\n          currencyDisplay: \"code\",\r\n          currencySign: \"accounting\",\r\n        }}\r\n      />\r\n      <NumberField\r\n        label=\"Unit\"\r\n        defaultValue={4}\r\n        formatOptions={{\r\n          style: \"unit\",\r\n          unit: \"inch\",\r\n          unitDisplay: \"long\",\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/number-field/sizes": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/number-field/sizes")),
      code : [{"title":"sizes.tsx","code":"import { NumberField } from \"@/lib/components/core/default/number-field\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <div className=\"flex items-center gap-4\">\r\n      <NumberField placeholder=\"small (sm)\" size=\"sm\" />\r\n      <NumberField placeholder=\"medium (md)\" size=\"md\" />\r\n      <NumberField placeholder=\"large (lg)\" size=\"lg\" />\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/number-field/label": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/number-field/label")),
      code : [{"title":"label.tsx","code":"import { NumberField } from \"@/lib/components/core/default/number-field\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <div className=\"space-y-4\">\r\n      <NumberField label=\"Width\" placeholder=\"Visible label\" />\r\n      <NumberField aria-label=\"Width\" placeholder=\"Hidden label\" />\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/number-field/description": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/number-field/description")),
      code : [{"title":"description.tsx","code":"import React from \"react\";\r\nimport { NumberField } from \"@/lib/components/core/default/number-field\";\r\n\r\nexport default function Demo() {\r\n  return <NumberField label=\"Width\" description=\"Enter the desired width.\" />;\r\n}\r\n"}]
    },
    "demos/components/core/number-field/contextual-help": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/number-field/contextual-help")),
      code : [{"title":"contextual-help.tsx","code":"import React from \"react\";\r\nimport { ContextualHelp } from \"@/lib/components/core/default/contextual-help\";\r\nimport { NumberField } from \"@/lib/components/core/default/number-field\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <NumberField\r\n      label=\"Width\"\r\n      defaultValue={1024}\r\n      contextualHelp={\r\n        <ContextualHelp\r\n          title=\"Need help?\"\r\n          description=\"If you need help, please contact support.\"\r\n        />\r\n      }\r\n    />\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/number-field/error-message": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/number-field/error-message")),
      code : [{"title":"error-message.tsx","code":"import React from \"react\";\r\nimport { NumberField } from \"@/lib/components/core/default/number-field\";\r\n\r\nexport default function Demo() {\r\n  return <NumberField label=\"Width\" isInvalid errorMessage=\"Please fill out this field.\" />;\r\n}\r\n"}]
    },
    "demos/components/core/number-field/disabled": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/number-field/disabled")),
      code : [{"title":"disabled.tsx","code":"import { NumberField } from \"@/lib/components/core/default/number-field\";\r\n\r\nexport default function Demo() {\r\n  return <NumberField defaultValue={20} isDisabled />;\r\n}\r\n"}]
    },
    "demos/components/core/number-field/read-only": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/number-field/read-only")),
      code : [{"title":"read-only.tsx","code":"import React from \"react\";\r\nimport { NumberField } from \"@/lib/components/core/default/number-field\";\r\n\r\nexport default function Demo() {\r\n  return <NumberField aria-label=\"Width\" isReadOnly value={69} />;\r\n}\r\n"}]
    },
    "demos/components/core/number-field/required": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/number-field/required")),
      code : [{"title":"required.tsx","code":"import React from \"react\";\r\nimport { NumberField } from \"@/lib/components/core/default/number-field\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <div className=\"grid grid-cols-2 gap-4\">\r\n      <NumberField label=\"Width\" isRequired />\r\n      <NumberField label=\"Width\" isRequired necessityIndicator=\"icon\" />\r\n      <NumberField label=\"Width\" isRequired necessityIndicator=\"label\" />\r\n      <NumberField label=\"Width\" necessityIndicator=\"label\" />\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/number-field/uncontrolled": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/number-field/uncontrolled")),
      code : [{"title":"uncontrolled.tsx","code":"import React from \"react\";\r\nimport { NumberField } from \"@/lib/components/core/default/number-field\";\r\n\r\nexport default function Demo() {\r\n  return <NumberField aria-label=\"Width\" defaultValue={80} />;\r\n}\r\n"}]
    },
    "demos/components/core/number-field/controlled": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/number-field/controlled")),
      code : [{"title":"controlled.tsx","code":"\"use client\";\r\n\r\nimport React from \"react\";\r\nimport { NumberField } from \"@/lib/components/core/default/number-field\";\r\n\r\nexport default function Demo() {\r\n  const [inputValue, setInputValue] = React.useState(69);\r\n  return (\r\n    <div className=\"flex flex-col items-center gap-4\">\r\n      <NumberField\r\n        aria-label=\"Width\"\r\n        value={inputValue}\r\n        onChange={(value) => {\r\n          setInputValue(value);\r\n        }}\r\n      />\r\n      <p className=\"text-sm text-fg-muted\">mirrored number: {inputValue}</p>\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/number-field/composition": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/number-field/composition")),
      code : [{"title":"composition.tsx","code":"import React from \"react\";\r\nimport { Button } from \"@/lib/components/core/default/button\";\r\nimport { Description, Label } from \"@/lib/components/core/default/field\";\r\nimport { Group } from \"@/lib/components/core/default/group\";\r\nimport { Input, InputRoot } from \"@/lib/components/core/default/input\";\r\nimport { NumberFieldRoot } from \"@/lib/components/core/default/number-field\";\r\nimport { MinusIcon, PlusIcon } from \"@/lib/icons\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <NumberFieldRoot>\r\n      <Label>Quantity</Label>\r\n      <Group className=\"flex items-center gap-2\">\r\n        <Button slot=\"decrement\" shape=\"square\">\r\n          <MinusIcon />\r\n        </Button>\r\n        <InputRoot>\r\n          <Input />\r\n        </InputRoot>\r\n        <Button slot=\"increment\" shape=\"square\">\r\n          <PlusIcon />\r\n        </Button>\r\n      </Group>\r\n      <Description>Enter the disired quantity.</Description>\r\n    </NumberFieldRoot>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/radio-group/default": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/radio-group/default")),
      code : [{"title":"default.tsx","code":"import { RadioGroup, Radio } from \"@/lib/components/core/default/radio-group\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <RadioGroup defaultValue=\"sm\" label=\"Size\">\r\n      <Radio value=\"sm\">Small</Radio>\r\n      <Radio value=\"md\">Medium</Radio>\r\n      <Radio value=\"lg\">Large</Radio>\r\n    </RadioGroup>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/radio-group/orientation": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/radio-group/orientation")),
      code : [{"title":"orientation.tsx","code":"import { RadioGroup, Radio } from \"@/lib/components/core/default/radio-group\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <RadioGroup defaultValue=\"sm\" label=\"Size\" orientation=\"horizontal\">\r\n      <Radio value=\"sm\">Small</Radio>\r\n      <Radio value=\"md\">Medium</Radio>\r\n      <Radio value=\"lg\">Large</Radio>\r\n    </RadioGroup>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/radio-group/cards": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/radio-group/cards")),
      code : [{"title":"cards.tsx","code":"import { RadioGroup, Radio } from \"@/lib/components/core/default/radio-group\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <RadioGroup defaultValue=\"sm\" label=\"Size\" orientation=\"horizontal\" variant=\"card\">\r\n      <Radio value=\"sm\">\r\n        <div className=\"flex flex-col gap-1\">\r\n          <span className=\"font-bold\">Small</span>\r\n          <span className=\"text-xs text-fg-muted\">Dimension: 128 x 128</span>\r\n        </div>\r\n      </Radio>\r\n      <Radio value=\"md\">\r\n        <div className=\"flex flex-col gap-1\">\r\n          <span className=\"font-bold\">Medium</span>\r\n          <span className=\"text-xs text-fg-muted\">Dimension: 256 x 256</span>\r\n        </div>\r\n      </Radio>\r\n      <Radio value=\"lg\">\r\n        <div className=\"flex flex-col gap-1\">\r\n          <span className=\"font-bold\">Large</span>\r\n          <span className=\"text-xs text-fg-muted\">Dimension: 512 x 512</span>\r\n        </div>\r\n      </Radio>\r\n    </RadioGroup>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/radio-group/label": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/radio-group/label")),
      code : [{"title":"label.tsx","code":"import { RadioGroup, Radio } from \"@/lib/components/core/default/radio-group\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <div className=\"flex items-center gap-10\">\r\n      <RadioGroup defaultValue=\"sm\" label=\"Size\">\r\n        <Radio value=\"sm\">Small</Radio>\r\n        <Radio value=\"md\">Medium</Radio>\r\n        <Radio value=\"lg\">Large</Radio>\r\n      </RadioGroup>\r\n      <RadioGroup defaultValue=\"sm\" aria-label=\"Size\">\r\n        <Radio value=\"sm\">Small</Radio>\r\n        <Radio value=\"md\">Medium</Radio>\r\n        <Radio value=\"lg\">Large</Radio>\r\n      </RadioGroup>\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/radio-group/description": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/radio-group/description")),
      code : [{"title":"description.tsx","code":"import { RadioGroup, Radio } from \"@/lib/components/core/default/radio-group\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <RadioGroup defaultValue=\"sm\" label=\"Size\" description=\"Select a product size.\">\r\n      <Radio value=\"sm\">Small</Radio>\r\n      <Radio value=\"md\">Medium</Radio>\r\n      <Radio value=\"lg\">Large</Radio>\r\n    </RadioGroup>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/radio-group/contextual-help": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/radio-group/contextual-help")),
      code : [{"title":"contextual-help.tsx","code":"import { ContextualHelp } from \"@/lib/components/core/default/contextual-help\";\r\nimport { RadioGroup, Radio } from \"@/lib/components/core/default/radio-group\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <RadioGroup\r\n      defaultValue=\"sm\"\r\n      label=\"Size\"\r\n      contextualHelp={\r\n        <ContextualHelp\r\n          title=\"Need help?\"\r\n          description=\"If you need help, please contact support.\"\r\n        />\r\n      }\r\n    >\r\n      <Radio value=\"sm\">Small</Radio>\r\n      <Radio value=\"md\">Medium</Radio>\r\n      <Radio value=\"lg\">Large</Radio>\r\n    </RadioGroup>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/radio-group/error-message": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/radio-group/error-message")),
      code : [{"title":"error-message.tsx","code":"import { RadioGroup, Radio } from \"@/lib/components/core/default/radio-group\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <RadioGroup\r\n      defaultValue={null}\r\n      label=\"Size\"\r\n      isInvalid\r\n      errorMessage=\"Please select a product size.\"\r\n    >\r\n      <Radio value=\"sm\">Small</Radio>\r\n      <Radio value=\"md\">Medium</Radio>\r\n      <Radio value=\"lg\">Large</Radio>\r\n    </RadioGroup>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/radio-group/disabled": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/radio-group/disabled")),
      code : [{"title":"disabled.tsx","code":"import { RadioGroup, Radio } from \"@/lib/components/core/default/radio-group\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <div className=\"flex gap-10\">\r\n      <RadioGroup defaultValue=\"sm\" label=\"Size\" isDisabled>\r\n        <Radio value=\"sm\">Small</Radio>\r\n        <Radio value=\"md\">Medium</Radio>\r\n        <Radio value=\"lg\">Large</Radio>\r\n      </RadioGroup>\r\n      <RadioGroup label=\"Size\" defaultValue=\"sm\">\r\n        <Radio value=\"sm\">Small</Radio>\r\n        <Radio value=\"md\" isDisabled>\r\n          Medium\r\n        </Radio>\r\n        <Radio value=\"lg\">Large</Radio>\r\n      </RadioGroup>\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/radio-group/read-only": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/radio-group/read-only")),
      code : [{"title":"read-only.tsx","code":"import { RadioGroup, Radio } from \"@/lib/components/core/default/radio-group\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <RadioGroup defaultValue=\"sm\" label=\"Size\" isReadOnly>\r\n      <Radio value=\"sm\">Small</Radio>\r\n      <Radio value=\"md\">Medium</Radio>\r\n      <Radio value=\"lg\">Large</Radio>\r\n    </RadioGroup>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/radio-group/required": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/radio-group/required")),
      code : [{"title":"required.tsx","code":"import React from \"react\";\r\nimport { RadioGroup, Radio } from \"@/lib/components/core/default/radio-group\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <div className=\"grid grid-cols-2 gap-4\">\r\n      <RadioGroup defaultValue=\"sm\" label=\"Size\" isRequired>\r\n        <Radio value=\"sm\">Small</Radio>\r\n        <Radio value=\"lg\">Large</Radio>\r\n      </RadioGroup>\r\n      <RadioGroup defaultValue=\"sm\" label=\"Size\" isRequired necessityIndicator=\"icon\">\r\n        <Radio value=\"sm\">Small</Radio>\r\n        <Radio value=\"lg\">Large</Radio>\r\n      </RadioGroup>\r\n      <RadioGroup defaultValue=\"sm\" label=\"Size\" isRequired necessityIndicator=\"label\">\r\n        <Radio value=\"sm\">Small</Radio>\r\n        <Radio value=\"lg\">Large</Radio>\r\n      </RadioGroup>\r\n      <RadioGroup defaultValue=\"sm\" label=\"Size\" necessityIndicator=\"label\">\r\n        <Radio value=\"sm\">Small</Radio>\r\n        <Radio value=\"lg\">Large</Radio>\r\n      </RadioGroup>\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/radio-group/uncontrolled": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/radio-group/uncontrolled")),
      code : [{"title":"uncontrolled.tsx","code":"import React from \"react\";\r\nimport { RadioGroup, Radio } from \"@/lib/components/core/default/radio-group\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <RadioGroup defaultValue=\"sm\" label=\"Size\">\r\n      <Radio value=\"sm\">Small</Radio>\r\n      <Radio value=\"md\">Medium</Radio>\r\n      <Radio value=\"lg\">Large</Radio>\r\n    </RadioGroup>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/radio-group/controlled": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/radio-group/controlled")),
      code : [{"title":"controlled.tsx","code":"\"use client\";\r\n\r\nimport React from \"react\";\r\nimport { RadioGroup, Radio } from \"@/lib/components/core/default/radio-group\";\r\n\r\nexport default function Demo() {\r\n  const [size, setSize] = React.useState(\"sm\");\r\n  return (\r\n    <div className=\"flex flex-col items-center gap-4\">\r\n      <RadioGroup label=\"Size\" value={size} onChange={(value) => setSize(value)}>\r\n        <Radio value=\"sm\">Small</Radio>\r\n        <Radio value=\"md\">Medium</Radio>\r\n        <Radio value=\"lg\">Large</Radio>\r\n      </RadioGroup>\r\n      <p className=\"text-xs text-fg-muted\">{`You selected: ${size}`}</p>\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/radio-group/composition": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/radio-group/composition")),
      code : [{"title":"composition.tsx","code":"import { Description, FieldError, Label } from \"@/lib/components/core/default/field\";\r\nimport { RadioGroupRoot, Radio } from \"@/lib/components/core/default/radio-group\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <RadioGroupRoot defaultValue=\"sm\">\r\n      <Label>Size</Label>\r\n      <Description>Please select a size.</Description>\r\n      <div className=\"flex gap-2\">\r\n        <Radio value=\"sm\">Small</Radio>\r\n        <Radio value=\"md\">Medium</Radio>\r\n        <Radio value=\"lg\">Large</Radio>\r\n      </div>\r\n      <FieldError />\r\n    </RadioGroupRoot>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/search-field/default": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/search-field/default")),
      code : [{"title":"default.tsx","code":"import React from \"react\";\r\nimport { SearchField } from \"@/lib/components/core/default/search-field\";\r\n\r\nexport default function Demo() {\r\n  return <SearchField aria-label=\"Search\" />;\r\n}\r\n"}]
    },
    "demos/components/core/search-field/sizes": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/search-field/sizes")),
      code : [{"title":"sizes.tsx","code":"import { SearchField } from \"@/lib/components/core/default/search-field\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <div className=\"flex items-center gap-4\">\r\n      <SearchField placeholder=\"small (sm)\" size=\"sm\" />\r\n      <SearchField placeholder=\"medium (md)\" size=\"md\" />\r\n      <SearchField placeholder=\"large (lg)\" size=\"lg\" />\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/search-field/prefix-and-suffix": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/search-field/prefix-and-suffix")),
      code : [{"title":"prefix-and-suffix.tsx","code":"\"use client\";\r\n\r\nimport { Button } from \"@/lib/components/core/default/button\";\r\nimport { SearchField } from \"@/lib/components/core/default/search-field\";\r\nimport { Tooltip } from \"@/lib/components/core/default/tooltip\";\r\nimport { XCircleIcon } from \"@/lib/icons\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <SearchField\r\n      defaultValue=\"Hello world!\"\r\n      prefix=\"🔍\"\r\n      suffix={({ isEmpty, isDisabled }) => {\r\n        if (isEmpty || isDisabled) return null;\r\n        return (\r\n          <Tooltip content=\"Clear input\" className=\"text-xs\">\r\n            <Button variant=\"quiet\" shape=\"square\" size=\"sm\" className=\"size-6\">\r\n              <XCircleIcon />\r\n            </Button>\r\n          </Tooltip>\r\n        );\r\n      }}\r\n    />\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/search-field/label": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/search-field/label")),
      code : [{"title":"label.tsx","code":"import { SearchField } from \"@/lib/components/core/default/search-field\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <div className=\"space-y-4\">\r\n      <SearchField label=\"Search\" placeholder=\"Visible label\" />\r\n      <SearchField aria-label=\"Search\" placeholder=\"Hidden label\" />\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/search-field/description": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/search-field/description")),
      code : [{"title":"description.tsx","code":"import React from \"react\";\r\nimport { SearchField } from \"@/lib/components/core/default/search-field\";\r\n\r\nexport default function Demo() {\r\n  return <SearchField label=\"Search\" description=\"Enter your search query\" />;\r\n}\r\n"}]
    },
    "demos/components/core/search-field/contextual-help": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/search-field/contextual-help")),
      code : [{"title":"contextual-help.tsx","code":"import React from \"react\";\r\nimport { ContextualHelp } from \"@/lib/components/core/default/contextual-help\";\r\nimport { SearchField } from \"@/lib/components/core/default/search-field\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <SearchField\r\n      label=\"Search\"\r\n      contextualHelp={\r\n        <ContextualHelp\r\n          title=\"Need help?\"\r\n          description=\"If you need help, please contact support.\"\r\n        />\r\n      }\r\n    />\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/search-field/error-message": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/search-field/error-message")),
      code : [{"title":"error-message.tsx","code":"import React from \"react\";\r\nimport { SearchField } from \"@/lib/components/core/default/search-field\";\r\n\r\nexport default function Demo() {\r\n  return <SearchField label=\"Search\" isInvalid errorMessage=\"Please fill out this field.\" />;\r\n}\r\n"}]
    },
    "demos/components/core/search-field/loading": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/search-field/loading")),
      code : [{"title":"loading.tsx","code":"import React from \"react\";\r\nimport { SearchField } from \"@/lib/components/core/default/search-field\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <div className=\"flex items-center gap-4\">\r\n      <SearchField isLoading loaderPosition=\"prefix\" />\r\n      <SearchField isLoading loaderPosition=\"suffix\" />\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/search-field/disabled": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/search-field/disabled")),
      code : [{"title":"disabled.tsx","code":"import { SearchField } from \"@/lib/components/core/default/search-field\";\r\n\r\nexport default function Demo() {\r\n  return <SearchField defaultValue=\"Is dotUI the next-gen ui lib?\" isDisabled />;\r\n}\r\n"}]
    },
    "demos/components/core/search-field/read-only": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/search-field/read-only")),
      code : [{"title":"read-only.tsx","code":"import React from \"react\";\r\nimport { SearchField } from \"@/lib/components/core/default/search-field\";\r\n\r\nexport default function Demo() {\r\n  return <SearchField label=\"Search\" isReadOnly value=\"Marvel movies\" />;\r\n}\r\n"}]
    },
    "demos/components/core/search-field/required": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/search-field/required")),
      code : [{"title":"required.tsx","code":"import React from \"react\";\r\nimport { SearchField } from \"@/lib/components/core/default/search-field\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <div className=\"grid grid-cols-2 gap-4\">\r\n      <SearchField label=\"Search\" isRequired />\r\n      <SearchField label=\"Search\" isRequired necessityIndicator=\"icon\" />\r\n      <SearchField label=\"Search\" isRequired necessityIndicator=\"label\" />\r\n      <SearchField label=\"Search\" necessityIndicator=\"label\" />\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/search-field/uncontrolled": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/search-field/uncontrolled")),
      code : [{"title":"uncontrolled.tsx","code":"import React from \"react\";\r\nimport { SearchField } from \"@/lib/components/core/default/search-field\";\r\n\r\nexport default function Demo() {\r\n  return <SearchField aria-label=\"Search\" defaultValue=\"Marvel movies\" />;\r\n}\r\n"}]
    },
    "demos/components/core/search-field/controlled": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/search-field/controlled")),
      code : [{"title":"controlled.tsx","code":"\"use client\";\r\n\r\nimport React from \"react\";\r\nimport { SearchField } from \"@/lib/components/core/default/search-field\";\r\n\r\nexport default function Demo() {\r\n  const [inputValue, setInputValue] = React.useState(\"Is dotUI the next-gen ui lib?\");\r\n  return (\r\n    <div className=\"flex flex-col items-center gap-4\">\r\n      <SearchField value={inputValue} onChange={setInputValue} />\r\n      <p className=\"text-sm text-fg-muted\">mirrored search text: {inputValue}</p>\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/search-field/composition": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/search-field/composition")),
      code : [{"title":"composition.tsx","code":"import React from \"react\";\r\nimport { Description, Label } from \"@/lib/components/core/default/field\";\r\nimport { Input, InputRoot } from \"@/lib/components/core/default/input\";\r\nimport { SearchFieldRoot } from \"@/lib/components/core/default/search-field\";\r\nimport { SearchIcon } from \"@/lib/icons\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <SearchFieldRoot>\r\n      <Label>Search</Label>\r\n      <InputRoot prefix={<SearchIcon />}>\r\n        <Input />\r\n      </InputRoot>\r\n      <Description>Enter your search query.</Description>\r\n    </SearchFieldRoot>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/slider/default": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/slider/default")),
      code : [{"title":"default.tsx","code":"import { Slider } from \"@/lib/components/core/default/slider\";\r\n\r\nexport default function Demo() {\r\n  return <Slider aria-label=\"Opacity\" defaultValue={50} />;\r\n}\r\n"}]
    },
    "demos/components/core/slider/sizes": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/slider/sizes")),
      code : [{"title":"sizes.tsx","code":"import { Slider } from \"@/lib/components/core/default/slider\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <div className=\"space-y-4\">\r\n      <Slider aria-label=\"Opacity\" defaultValue={50} size=\"sm\" />\r\n      <Slider aria-label=\"Opacity\" defaultValue={50} size=\"md\" />\r\n      <Slider aria-label=\"Opacity\" defaultValue={50} size=\"lg\" />\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/slider/vertical": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/slider/vertical")),
      code : [{"title":"vertical.tsx","code":"import { Slider } from \"@/lib/components/core/default/slider\";\r\n\r\nexport default function Demo() {\r\n  return <Slider defaultValue={50} aria-label=\"Opacity\" orientation=\"vertical\" />;\r\n}\r\n"}]
    },
    "demos/components/core/slider/label": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/slider/label")),
      code : [{"title":"label.tsx","code":"import { Slider } from \"@/lib/components/core/default/slider\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <div className=\"space-y-4\">\r\n      <Slider defaultValue={50} label=\"Opacity\" />\r\n      <Slider defaultValue={50} aria-label=\"Opacity\" />\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/slider/description": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/slider/description")),
      code : [{"title":"description.tsx","code":"import { Slider } from \"@/lib/components/core/default/slider\";\r\n\r\nexport default function Demo() {\r\n  return <Slider defaultValue={50} label=\"Opacity\" description=\"Adjust the background opacity.\" />;\r\n}\r\n"}]
    },
    "demos/components/core/slider/value-label": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/slider/value-label")),
      code : [{"title":"value-label.tsx","code":"\"use client\";\r\n\r\nimport { Slider } from \"@/lib/components/core/default/slider\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      <Slider defaultValue={50} label=\"Donuts to buy\" valueLabel className=\"!w-60\" />\r\n      <Slider\r\n        defaultValue={50}\r\n        label=\"Donuts to buy\"\r\n        valueLabel={(donuts) => `${donuts[0]} of 100 Donuts`}\r\n        className=\"!w-60\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/slider/value-scale": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/slider/value-scale")),
      code : [{"title":"value-scale.tsx","code":"import { Slider } from \"@/lib/components/core/default/slider\";\r\n\r\nexport default function Demo() {\r\n  return <Slider label=\"Cookies to buy\" minValue={1} maxValue={50} defaultValue={25} valueLabel />;\r\n}\r\n"}]
    },
    "demos/components/core/slider/step": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/slider/step")),
      code : [{"title":"step.tsx","code":"import { Slider } from \"@/lib/components/core/default/slider\";\r\n\r\nexport default function Demo() {\r\n  return <Slider label=\"Opacity\" valueLabel minValue={0} maxValue={100} step={5} />;\r\n}\r\n"}]
    },
    "demos/components/core/slider/format-options": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/slider/format-options")),
      code : [{"title":"format-options.tsx","code":"import { Slider } from \"@/lib/components/core/default/slider\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <Slider\r\n      label=\"Price\"\r\n      formatOptions={{ style: \"currency\", currency: \"JPY\" }}\r\n      defaultValue={60}\r\n      valueLabel\r\n    />\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/slider/range": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/slider/range")),
      code : [{"title":"range.tsx","code":"import { Slider } from \"@/lib/components/core/default/slider\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <Slider\r\n      label=\"Price Range\"\r\n      valueLabel\r\n      defaultValue={[200, 300]}\r\n      minValue={100}\r\n      maxValue={500}\r\n    />\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/slider/disabled": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/slider/disabled")),
      code : [{"title":"disabled.tsx","code":"import { Slider } from \"@/lib/components/core/default/slider\";\r\n\r\nexport default function Demo() {\r\n  return <Slider label=\"Opacity\" defaultValue={50} isDisabled />;\r\n}\r\n"}]
    },
    "demos/components/core/slider/composition": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/slider/composition")),
      code : [{"title":"composition.tsx","code":"import { Description, Label } from \"@/lib/components/core/default/field\";\r\nimport { SliderControls, SliderRoot, SliderValueLabel } from \"@/lib/components/core/default/slider\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <SliderRoot defaultValue={50}>\r\n      <div className=\"flex items-center justify-between\">\r\n        <Label>Volume</Label>\r\n        <SliderValueLabel />\r\n      </div>\r\n      <SliderControls />\r\n      <Description>Adjust the volume.</Description>\r\n    </SliderRoot>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/slider/advanced-composition": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/slider/advanced-composition")),
      code : [{"title":"advanced-composition.tsx","code":"import { Label, Description } from \"@/lib/components/core/default/field\";\r\nimport {\r\n  SliderFiller,\r\n  SliderRoot,\r\n  SliderThumb,\r\n  SliderTrack,\r\n  SliderValueLabel,\r\n} from \"@/lib/components/core/default/slider\";\r\nimport { Volume1Icon, Volume2Icon } from \"@/lib/icons\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <SliderRoot defaultValue={50}>\r\n      <div className=\"flex items-center justify-between\">\r\n        <Label>Volume</Label>\r\n        <SliderValueLabel />\r\n      </div>\r\n      <div className=\"flex items-center gap-2\">\r\n        <Volume1Icon />\r\n        <SliderTrack>\r\n          <SliderFiller />\r\n          <SliderThumb />\r\n        </SliderTrack>\r\n        <Volume2Icon />\r\n      </div>\r\n      <Description>Adjust the volume.</Description>\r\n    </SliderRoot>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/slider/uncontrolled": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/slider/uncontrolled")),
      code : [{"title":"uncontrolled.tsx","code":"import { Slider } from \"@/lib/components/core/default/slider\";\r\n\r\nexport default function Demo() {\r\n  return <Slider aria-label=\"Opacity\" defaultValue={50} />;\r\n}\r\n"}]
    },
    "demos/components/core/slider/controlled": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/slider/controlled")),
      code : [{"title":"controlled.tsx","code":"\"use client\";\r\n\r\nimport React from \"react\";\r\nimport { Slider } from \"@/lib/components/core/default/slider\";\r\n\r\nexport default function Demo() {\r\n  const [value, setValue] = React.useState(50);\r\n  return (\r\n    <div className=\"flex flex-col items-center gap-4\">\r\n      <Slider label=\"Opacity\" value={value} onChange={(value) => setValue(value as number)} />\r\n      <span className=\"text-sm text-fg-muted\">\r\n        Value: <span className=\"font-semibold text-fg\">{value}</span>\r\n      </span>\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/switch/default": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/switch/default")),
      code : [{"title":"default.tsx","code":"import React from \"react\";\r\nimport { Switch } from \"@/lib/components/core/default/switch\";\r\n\r\nexport default function Demo() {\r\n  return <Switch>Focus mode</Switch>;\r\n}\r\n"}]
    },
    "demos/components/core/switch/sizes": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/switch/sizes")),
      code : [{"title":"sizes.tsx","code":"import { Switch } from \"@/lib/components/core/default/switch\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <div className=\"flex items-center gap-4\">\r\n      <Switch size=\"sm\" defaultSelected />\r\n      <Switch size=\"md\" defaultSelected />\r\n      <Switch size=\"lg\" defaultSelected />\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/switch/label": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/switch/label")),
      code : [{"title":"label.tsx","code":"import React from \"react\";\r\nimport { Switch } from \"@/lib/components/core/default/switch\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <div className=\"flex items-center gap-10\">\r\n      <Switch>Focus mode</Switch>\r\n      <Switch aria-label=\"Focus mode\" />\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/switch/disabled": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/switch/disabled")),
      code : [{"title":"disabled.tsx","code":"import { Switch } from \"@/lib/components/core/default/switch\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <div className=\"flex items-center gap-10\">\r\n      <Switch isDisabled defaultSelected>\r\n        Focus Mode\r\n      </Switch>\r\n      <Switch isDisabled>Focus Mode</Switch>\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/switch/uncontrolled": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/switch/uncontrolled")),
      code : [{"title":"uncontrolled.tsx","code":"import React from \"react\";\r\nimport { Switch } from \"@/lib/components/core/default/switch\";\r\n\r\nexport default function Demo() {\r\n  return <Switch defaultSelected>Airplane Mode</Switch>;\r\n}\r\n"}]
    },
    "demos/components/core/switch/controlled": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/switch/controlled")),
      code : [{"title":"controlled.tsx","code":"\"use client\";\r\n\r\nimport React from \"react\";\r\nimport { Switch } from \"@/lib/components/core/default/switch\";\r\n\r\nexport default function Demo() {\r\n  const [isSelected, setSelected] = React.useState(true);\r\n  return (\r\n    <div className=\"flex flex-col items-center gap-4\">\r\n      <Switch isSelected={isSelected} onChange={setSelected}>\r\n        Airplane Mode\r\n      </Switch>\r\n      <p className=\"text-xs text-fg-muted\">\r\n        You are {isSelected && \"not\"} on <span className=\"font-bold\">focus mode</span>.\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/text-area/default": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/text-area/default")),
      code : [{"title":"default.tsx","code":"\"use client\";\r\n\r\nimport React from \"react\";\r\nimport { TextArea } from \"@/lib/components/core/default/text-area\";\r\n\r\nexport default function Demo() {\r\n  return <TextArea label=\"Description\" placeholder=\"Type your message here\" />;\r\n}\r\n"}]
    },
    "demos/components/core/text-area/prefix-and-suffix": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/text-area/prefix-and-suffix")),
      code : [{"title":"prefix-and-suffix.tsx","code":"\"use client\";\r\n\r\nimport React from \"react\";\r\nimport { Button } from \"@/lib/components/core/default/button\";\r\nimport { TextArea } from \"@/lib/components/core/default/text-area\";\r\nimport { ToggleButton } from \"@/lib/components/core/default/toggle-button\";\r\nimport { BoldIcon, ItalicIcon } from \"@/lib/icons\";\r\n\r\nexport default function Demo() {\r\n  const [inputValue, setInputValue] = React.useState(\"\");\r\n  return (\r\n    <TextArea\r\n      label=\"Comment\"\r\n      placeholder=\"type something here\"\r\n      value={inputValue}\r\n      onChange={setInputValue}\r\n      prefix={\r\n        <div className=\"flex items-center gap-1\">\r\n          <Button\r\n            variant=\"quiet\"\r\n            shape=\"square\"\r\n            size=\"sm\"\r\n            className=\"size-7\"\r\n            onPress={() => {\r\n              setInputValue(`${inputValue}👍`);\r\n            }}\r\n          >\r\n            👍\r\n          </Button>\r\n          <Button\r\n            variant=\"quiet\"\r\n            shape=\"square\"\r\n            size=\"sm\"\r\n            className=\"size-7\"\r\n            onPress={() => {\r\n              setInputValue(`${inputValue}❤️`);\r\n            }}\r\n          >\r\n            ❤️\r\n          </Button>\r\n        </div>\r\n      }\r\n      suffix={\r\n        <div className=\"flex items-center justify-between\">\r\n          <div className=\"flex items-center gap-0.5\">\r\n            <ToggleButton size=\"sm\" className=\"size-7\">\r\n              <BoldIcon />\r\n            </ToggleButton>\r\n            <ToggleButton size=\"sm\" className=\"size-7\">\r\n              <ItalicIcon />\r\n            </ToggleButton>\r\n          </div>\r\n          <Button variant=\"primary\" size=\"sm\" className=\"h-7\">\r\n            Comment\r\n          </Button>\r\n        </div>\r\n      }\r\n    />\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/text-area/label": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/text-area/label")),
      code : [{"title":"label.tsx","code":"import { TextArea } from \"@/lib/components/core/default/text-area\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <div className=\"space-y-4\">\r\n      <TextArea label=\"Description\" placeholder=\"Visible label\" />\r\n      <TextArea aria-label=\"Description\" placeholder=\"Hidden label\" />\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/text-area/description": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/text-area/description")),
      code : [{"title":"description.tsx","code":"\"use client\";\r\n\r\nimport React from \"react\";\r\nimport { TextArea } from \"@/lib/components/core/default/text-area\";\r\n\r\nexport default function Demo() {\r\n  return <TextArea label=\"Description\" description=\"Type your description\" />;\r\n}\r\n"}]
    },
    "demos/components/core/text-area/contextual-help": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/text-area/contextual-help")),
      code : [{"title":"contextual-help.tsx","code":"import React from \"react\";\r\nimport { ContextualHelp } from \"@/lib/components/core/default/contextual-help\";\r\nimport { TextArea } from \"@/lib/components/core/default/text-area\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <TextArea\r\n      label=\"Bio\"\r\n      contextualHelp={\r\n        <ContextualHelp\r\n          title=\"Need help?\"\r\n          description=\"If you're having trouble writing your bio, get assisted by our AI.\"\r\n        />\r\n      }\r\n    />\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/text-area/error-message": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/text-area/error-message")),
      code : [{"title":"error-message.tsx","code":"\"use client\";\r\n\r\nimport React from \"react\";\r\nimport { TextArea } from \"@/lib/components/core/default/text-area\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <TextArea\r\n      label=\"Comment\"\r\n      isInvalid\r\n      errorMessage=\"You have exceeded the comment limit for one hour.\"\r\n    />\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/text-area/loading": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/text-area/loading")),
      code : [{"title":"loading.tsx","code":"import React from \"react\";\r\nimport { TextArea } from \"@/lib/components/core/default/text-area\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <div className=\"flex items-center gap-4\">\r\n      <TextArea isLoading loaderPosition=\"prefix\" />\r\n      <TextArea isLoading loaderPosition=\"suffix\" />\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/text-area/disabled": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/text-area/disabled")),
      code : [{"title":"disabled.tsx","code":"import { TextArea } from \"@/lib/components/core/default/text-area\";\r\n\r\nexport default function Demo() {\r\n  return <TextArea value=\"This is a comment\" isDisabled />;\r\n}\r\n"}]
    },
    "demos/components/core/text-area/read-only": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/text-area/read-only")),
      code : [{"title":"read-only.tsx","code":"\"use client\";\r\n\r\nimport React from \"react\";\r\nimport { TextArea } from \"@/lib/components/core/default/text-area\";\r\n\r\nexport default function Demo() {\r\n  return <TextArea label=\"Email\" isReadOnly value=\"This is a readonly comment\" />;\r\n}\r\n"}]
    },
    "demos/components/core/text-area/required": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/text-area/required")),
      code : [{"title":"required.tsx","code":"\"use client\";\r\n\r\nimport React from \"react\";\r\nimport { TextArea } from \"@/lib/components/core/default/text-area\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <TextArea\r\n      isRequired\r\n      necessityIndicator=\"icon\"\r\n      label=\"Description\"\r\n      placeholder=\"Type your message here\"\r\n    />\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/text-area/uncontrolled": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/text-area/uncontrolled")),
      code : [{"title":"uncontrolled.tsx","code":"import React from \"react\";\r\nimport { TextArea } from \"@/lib/components/core/default/text-area\";\r\n\r\nexport default function Demo() {\r\n  return <TextArea label=\"Essay\" defaultValue=\"Roses are red, violets are blue.\" />;\r\n}\r\n"}]
    },
    "demos/components/core/text-area/controlled": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/text-area/controlled")),
      code : [{"title":"controlled.tsx","code":"\"use client\";\r\n\r\nimport React from \"react\";\r\nimport { TextArea } from \"@/lib/components/core/default/text-area\";\r\n\r\nexport default function Demo() {\r\n  const [inputValue, setInputValue] = React.useState(\"Roses are red, violets are blue.\");\r\n  return (\r\n    <div className=\"flex flex-col items-center gap-4\">\r\n      <TextArea\r\n        label=\"Essay\"\r\n        value={inputValue}\r\n        onChange={(text) => {\r\n          setInputValue(text);\r\n        }}\r\n      />\r\n      <p className=\"text-sm text-fg-muted\">mirrored text: {inputValue}</p>\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/text-area/composition": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/text-area/composition")),
      code : [{"title":"composition.tsx","code":"import React from \"react\";\r\nimport { Description, Label } from \"@/lib/components/core/default/field\";\r\nimport { TextAreaInput, InputRoot } from \"@/lib/components/core/default/input\";\r\nimport { TextFieldRoot } from \"@/lib/components/core/default/text-field\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <TextFieldRoot>\r\n      <Label>Comment</Label>\r\n      <InputRoot multiline>\r\n        <TextAreaInput />\r\n      </InputRoot>\r\n      <Description>Enter your comment.</Description>\r\n    </TextFieldRoot>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/text-field/default": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/text-field/default")),
      code : [{"title":"default.tsx","code":"import React from \"react\";\r\nimport { TextField } from \"@/lib/components/core/default/text-field\";\r\n\r\nexport default function Demo() {\r\n  return <TextField label=\"Email\" placeholder=\"hello@mehdibha.com\" />;\r\n}\r\n"}]
    },
    "demos/components/core/text-field/sizes": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/text-field/sizes")),
      code : [{"title":"sizes.tsx","code":"import { TextField } from \"@/lib/components/core/default/text-field\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <div className=\"flex items-center gap-4\">\r\n      <TextField placeholder=\"small (sm)\" size=\"sm\" />\r\n      <TextField placeholder=\"medium (md)\" size=\"md\" />\r\n      <TextField placeholder=\"large (lg)\" size=\"lg\" />\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/text-field/prefix-and-suffix": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/text-field/prefix-and-suffix")),
      code : [{"title":"prefix-and-suffix.tsx","code":"\"use client\";\r\n\r\nimport React from \"react\";\r\nimport { Button } from \"@/lib/components/core/default/button\";\r\nimport { TextField } from \"@/lib/components/core/default/text-field\";\r\nimport { Tooltip } from \"@/lib/components/core/default/tooltip\";\r\nimport { XCircleIcon } from \"@/lib/icons\";\r\n\r\nexport default function Demo() {\r\n  const [inputValue, setInputValue] = React.useState(\"Hello world!\");\r\n  const inputRef = React.useRef<HTMLInputElement>(null);\r\n  return (\r\n    <div className=\"space-y-2\">\r\n      <TextField prefix={<span>https://</span>} />\r\n      <TextField suffix={<span>@dotui.org</span>} />\r\n      <TextField\r\n        ref={inputRef}\r\n        value={inputValue}\r\n        onChange={setInputValue}\r\n        suffix={\r\n          <Tooltip content=\"Clear input\" placement=\"bottom\" className=\"text-xs\">\r\n            <Button\r\n              variant=\"quiet\"\r\n              shape=\"square\"\r\n              size=\"sm\"\r\n              className=\"size-6\"\r\n              onPress={() => {\r\n                setInputValue(\"\");\r\n                inputRef.current?.focus();\r\n              }}\r\n            >\r\n              <XCircleIcon />\r\n            </Button>\r\n          </Tooltip>\r\n        }\r\n      />\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/text-field/label": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/text-field/label")),
      code : [{"title":"label.tsx","code":"import { TextField } from \"@/lib/components/core/default/text-field\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <div className=\"space-y-4\">\r\n      <TextField label=\"Email\" placeholder=\"Visible label\" />\r\n      <TextField aria-label=\"Email\" placeholder=\"Hidden label\" />\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/text-field/description": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/text-field/description")),
      code : [{"title":"description.tsx","code":"\"use client\";\r\n\r\nimport React from \"react\";\r\nimport { TextField } from \"@/lib/components/core/default/text-field\";\r\n\r\nexport default function Demo() {\r\n  return <TextField label=\"Email\" description=\"Enter your email.\" />;\r\n}\r\n"}]
    },
    "demos/components/core/text-field/contextual-help": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/text-field/contextual-help")),
      code : [{"title":"contextual-help.tsx","code":"\"use client\";\r\n\r\nimport React from \"react\";\r\nimport { ContextualHelp } from \"@/lib/components/core/default/contextual-help\";\r\nimport { TextField } from \"@/lib/components/core/default/text-field\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <TextField\r\n      label=\"Password\"\r\n      contextualHelp={\r\n        <ContextualHelp\r\n          title=\"Need help?\"\r\n          description=\"If you're having trouble accessing your account, contact our customer\r\n      support team for help.\"\r\n        />\r\n      }\r\n    />\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/text-field/error-message": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/text-field/error-message")),
      code : [{"title":"error-message.tsx","code":"\"use client\";\r\n\r\nimport React from \"react\";\r\nimport { TextField } from \"@/lib/components/core/default/text-field\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <TextField\r\n      defaultValue=\"support@copyui.dev\"\r\n      label=\"Email\"\r\n      isInvalid\r\n      errorMessage=\"This email is already taken.\"\r\n    />\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/text-field/loading": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/text-field/loading")),
      code : [{"title":"loading.tsx","code":"\"use client\";\r\n\r\nimport React from \"react\";\r\nimport { TextField } from \"@/lib/components/core/default/text-field\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <div className=\"grid grid-cols-2 gap-2\">\r\n      <TextField isLoading loaderPosition=\"prefix\" />\r\n      <TextField isLoading loaderPosition=\"suffix\" />\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/text-field/disabled": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/text-field/disabled")),
      code : [{"title":"disabled.tsx","code":"import { TextField } from \"@/lib/components/core/default/text-field\";\r\n\r\nexport default function Demo() {\r\n  return <TextField value=\"hello@dotui.org\" isDisabled />;\r\n}\r\n"}]
    },
    "demos/components/core/text-field/read-only": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/text-field/read-only")),
      code : [{"title":"read-only.tsx","code":"\"use client\";\r\n\r\nimport React from \"react\";\r\nimport { TextField } from \"@/lib/components/core/default/text-field\";\r\n\r\nexport default function Demo() {\r\n  return <TextField label=\"Email\" isReadOnly value=\"hello@copyui.dev\" />;\r\n}\r\n"}]
    },
    "demos/components/core/text-field/required": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/text-field/required")),
      code : [{"title":"required.tsx","code":"\"use client\";\r\n\r\nimport React from \"react\";\r\nimport { TextField } from \"@/lib/components/core/default/text-field\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <div className=\"grid grid-cols-2 gap-4\">\r\n      <TextField label=\"Email\" isRequired />\r\n      <TextField label=\"Email\" isRequired necessityIndicator=\"icon\" />\r\n      <TextField label=\"Email\" isRequired necessityIndicator=\"label\" />\r\n      <TextField label=\"Email\" necessityIndicator=\"label\" />\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/text-field/uncontrolled": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/text-field/uncontrolled")),
      code : [{"title":"uncontrolled.tsx","code":"import React from \"react\";\r\nimport { TextField } from \"@/lib/components/core/default/text-field\";\r\n\r\nexport default function Demo() {\r\n  return <TextField label=\"Name\" defaultValue=\"Mehdi\" />;\r\n}\r\n"}]
    },
    "demos/components/core/text-field/controlled": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/text-field/controlled")),
      code : [{"title":"controlled.tsx","code":"\"use client\";\r\n\r\nimport React from \"react\";\r\nimport { TextField } from \"@/lib/components/core/default/text-field\";\r\n\r\nexport default function Demo() {\r\n  const [inputValue, setInputValue] = React.useState(\"Hello world!\");\r\n  return (\r\n    <div className=\"flex flex-col items-center gap-4\">\r\n      <TextField\r\n        value={inputValue}\r\n        onChange={(text) => {\r\n          setInputValue(text);\r\n        }}\r\n      />\r\n      <p className=\"text-sm text-fg-muted\">mirrored text: {inputValue}</p>\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/text-field/composition": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/text-field/composition")),
      code : [{"title":"composition.tsx","code":"import React from \"react\";\r\nimport { Description, Label } from \"@/lib/components/core/default/field\";\r\nimport { Input, InputRoot } from \"@/lib/components/core/default/input\";\r\nimport { TextFieldRoot } from \"@/lib/components/core/default/text-field\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <TextFieldRoot>\r\n      <Label>Email</Label>\r\n      <InputRoot>\r\n        <Input />\r\n      </InputRoot>\r\n      <Description>Enter your email.</Description>\r\n    </TextFieldRoot>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/aspect-ratio/default": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/aspect-ratio/default")),
      code : [{"title":"default.tsx","code":"import Image from \"next/image\";\r\nimport { AspectRatio } from \"@/lib/components/core/default/aspect-ratio\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <AspectRatio ratio={16 / 9}>\r\n      <Image\r\n        src=\"https://images.unsplash.com/photo-1588345921523-c2dcdb7f1dcd?w=800&dpr=2&q=80\"\r\n        alt=\"Photo by Drew Beamer\"\r\n        fill\r\n        className=\"rounded-md object-cover\"\r\n      />\r\n    </AspectRatio>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/aspect-ratio/as-child": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/aspect-ratio/as-child")),
      code : [{"title":"as-child.tsx","code":"import Image from \"next/image\";\r\nimport { AspectRatio } from \"@/lib/components/core/default/aspect-ratio\";\r\n\r\nexport default function AspectRatioDemo() {\r\n  return (\r\n    <AspectRatio ratio={16 / 9} asChild>\r\n      <Image\r\n        src=\"https://images.unsplash.com/photo-1588345921523-c2dcdb7f1dcd?w=800&dpr=2&q=80\"\r\n        alt=\"Photo by Drew Beamer\"\r\n        fill\r\n        className=\"rounded-md object-cover\"\r\n      />\r\n    </AspectRatio>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/scroll-area/default": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/scroll-area/default")),
      code : [{"title":"default.tsx","code":"import * as React from \"react\";\r\nimport { ScrollArea } from \"@/lib/components/core/default/scroll-area\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <div className=\"rounded-md border p-6\">\r\n      <ScrollArea className=\"h-72 w-full max-w-sm\" type=\"always\">\r\n        <div className=\"space-y-4 p-4 pr-8\">\r\n          <h4 className=\"text-md font-bold\">Principles of the typographic craft</h4>\r\n          <p>\r\n            Three fundamental aspects of typography are legibility, readability, and aesthetics.\r\n            Although in a non-technical sense “legible” and “readable” are often used synonymously,\r\n            typographically they are separate but related concepts.\r\n          </p>\r\n          <p>\r\n            Legibility describes how easily individual characters can be distinguished from one\r\n            another. It is described by Walter Tracy as “the quality of being decipherable and\r\n            recognisable”. For instance, if a “b” and an “h”, or a “3” and an “8”, are difficult to\r\n            distinguish at small sizes, this is a problem of legibility.\r\n          </p>\r\n          <p>\r\n            Typographers are concerned with legibility insofar as it is their job to select the\r\n            correct font to use. Brush Script is an example of a font containing many characters\r\n            that might be difficult to distinguish. The selection of cases influences the legibility\r\n            of typography because using only uppercase letters (all-caps) reduces legibility.\r\n          </p>\r\n        </div>\r\n      </ScrollArea>\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/scroll-area/sizes": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/scroll-area/sizes")),
      code : [{"title":"sizes.tsx","code":"import * as React from \"react\";\r\nimport { ScrollArea } from \"@/lib/components/core/default/scroll-area\";\r\n\r\nconst sizes = [\"sm\", \"md\", \"lg\"] as const;\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <div className=\"grid grid-cols-3 gap-10\">\r\n      {sizes.map((size) => (\r\n        <div key={size} className=\"rounded-md border p-3\">\r\n          <ScrollArea size={size} className=\"h-72\" type=\"always\">\r\n            <div className=\"space-y-4 p-4 pr-8\">\r\n              <h4 className=\"text-md font-bold\">Principles of the typographic craft</h4>\r\n              <p>\r\n                Three fundamental aspects of typography are legibility, readability, and aesthetics.\r\n                Although in a non-technical sense “legible” and “readable” are often used\r\n                synonymously, typographically they are separate but related concepts.\r\n              </p>\r\n              <p>\r\n                Legibility describes how easily individual characters can be distinguished from one\r\n                another. It is described by Walter Tracy as “the quality of being decipherable and\r\n                recognisable”. For instance, if a “b” and an “h”, or a “3” and an “8”, are difficult\r\n                to distinguish at small sizes, this is a problem of legibility.\r\n              </p>\r\n              <p>\r\n                Typographers are concerned with legibility insofar as it is their job to select the\r\n                correct font to use. Brush Script is an example of a font containing many characters\r\n                that might be difficult to distinguish. The selection of cases influences the\r\n                legibility of typography because using only uppercase letters (all-caps) reduces\r\n                legibility.\r\n              </p>\r\n            </div>\r\n          </ScrollArea>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/scroll-area/scrollbars": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/scroll-area/scrollbars")),
      code : [{"title":"scrollbars.tsx","code":"\"use client\";\r\n\r\nimport * as React from \"react\";\r\nimport { Radio, RadioGroup } from \"@/lib/components/core/default/radio-group\";\r\nimport { ScrollArea, type ScrollAreaProps } from \"@/lib/components/core/default/scroll-area\";\r\n\r\nexport default function Demo() {\r\n  const [scrollbars, setScrollbars] = React.useState(\"vertical\");\r\n  return (\r\n    <div className=\"flex items-center gap-10\">\r\n      <div className=\"rounded-md border p-6\">\r\n        <ScrollArea\r\n          scrollbars={scrollbars as ScrollAreaProps[\"scrollbars\"]}\r\n          className=\"h-44 w-full max-w-sm\"\r\n          type=\"always\"\r\n        >\r\n          <div className=\"flex w-[500px] items-start gap-4\">\r\n            <div className=\"space-y-4 p-4 pr-8\">\r\n              <h4 className=\"text-md font-bold\">Principles of the typographic craft</h4>\r\n              <p>\r\n                Three fundamental aspects of typography are legibility, readability, and aesthetics.\r\n                Although in a non-technical sense “legible” and “readable” are often used\r\n                synonymously, typographically they are separate but related concepts.\r\n              </p>\r\n              <p>\r\n                Legibility describes how easily individual characters can be distinguished from one\r\n                another. It is described by Walter Tracy as “the quality of being decipherable and\r\n                recognisable”. For instance, if a “b” and an “h”, or a “3” and an “8”, are difficult\r\n                to distinguish at small sizes, this is a problem of legibility.\r\n              </p>\r\n              <p>\r\n                Typographers are concerned with legibility insofar as it is their job to select the\r\n                correct font to use. Brush Script is an example of a font containing many characters\r\n                that might be difficult to distinguish. The selection of cases influences the\r\n                legibility of typography because using only uppercase letters (all-caps) reduces\r\n                legibility.\r\n              </p>\r\n            </div>\r\n            <div className=\"space-y-4 p-4 pr-8\">\r\n              <h4 className=\"text-md font-bold\">Principles of the typographic craft</h4>\r\n              <p>\r\n                Three fundamental aspects of typography are legibility, readability, and aesthetics.\r\n                Although in a non-technical sense “legible” and “readable” are often used\r\n                synonymously, typographically they are separate but related concepts.\r\n              </p>\r\n              <p>\r\n                Legibility describes how easily individual characters can be distinguished from one\r\n                another. It is described by Walter Tracy as “the quality of being decipherable and\r\n                recognisable”. For instance, if a “b” and an “h”, or a “3” and an “8”, are difficult\r\n                to distinguish at small sizes, this is a problem of legibility.\r\n              </p>\r\n              <p>\r\n                Typographers are concerned with legibility insofar as it is their job to select the\r\n                correct font to use. Brush Script is an example of a font containing many characters\r\n                that might be difficult to distinguish. The selection of cases influences the\r\n                legibility of typography because using only uppercase letters (all-caps) reduces\r\n                legibility.\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </ScrollArea>\r\n      </div>\r\n      <RadioGroup label=\"Scrollbars\" value={scrollbars} onChange={setScrollbars}>\r\n        <Radio value=\"vertical\">Vertical</Radio>\r\n        <Radio value=\"horizontal\">Horizontal</Radio>\r\n        <Radio value=\"both\">Both</Radio>\r\n      </RadioGroup>\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/combobox/basic": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/combobox/basic")),
      code : [{"title":"basic.tsx","code":"import React from \"react\";\r\nimport { Combobox } from \"@/lib/components/core/default/combobox\";\r\nimport { Item } from \"@/lib/components/core/default/list-box\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <Combobox aria-label=\"country\">\r\n      <Item>Canada</Item>\r\n      <Item>France</Item>\r\n      <Item>Germany</Item>\r\n      <Item>Spain</Item>\r\n      <Item>Tunisia</Item>\r\n      <Item>United states</Item>\r\n      <Item>United Kingdom</Item>\r\n    </Combobox>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/combobox/label": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/combobox/label")),
      code : [{"title":"label.tsx","code":"import React from \"react\";\r\nimport { Combobox } from \"@/lib/components/core/default/combobox\";\r\nimport { Item } from \"@/lib/components/core/default/list-box\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <Combobox label=\"Country\">\r\n      <Item>Canada</Item>\r\n      <Item>France</Item>\r\n      <Item>Germany</Item>\r\n      <Item>Spain</Item>\r\n      <Item>Tunisia</Item>\r\n      <Item>United states</Item>\r\n      <Item>United Kingdom</Item>\r\n    </Combobox>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/combobox/description": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/combobox/description")),
      code : [{"title":"description.tsx","code":"import React from \"react\";\r\nimport { Combobox } from \"@/lib/components/core/default/combobox\";\r\nimport { Item } from \"@/lib/components/core/default/list-box\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <Combobox label=\"Country\" description=\"Please select a country.\">\r\n      <Item>Canada</Item>\r\n      <Item>France</Item>\r\n      <Item>Germany</Item>\r\n      <Item>Spain</Item>\r\n      <Item>Tunisia</Item>\r\n      <Item>United states</Item>\r\n      <Item>United Kingdom</Item>\r\n    </Combobox>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/combobox/contextual-help": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/combobox/contextual-help")),
      code : [{"title":"contextual-help.tsx","code":"import React from \"react\";\r\nimport { Combobox } from \"@/lib/components/core/default/combobox\";\r\nimport { ContextualHelp } from \"@/lib/components/core/default/contextual-help\";\r\nimport { Item } from \"@/lib/components/core/default/list-box\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <Combobox\r\n      label=\"Country\"\r\n      contextualHelp={\r\n        <ContextualHelp\r\n          title=\"Need help?\"\r\n          description=\"If you're having trouble, get assisted by our AI.\"\r\n        />\r\n      }\r\n    >\r\n      <Item>Canada</Item>\r\n      <Item>France</Item>\r\n      <Item>Germany</Item>\r\n      <Item>Spain</Item>\r\n      <Item>Tunisia</Item>\r\n      <Item>United states</Item>\r\n      <Item>United Kingdom</Item>\r\n    </Combobox>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/combobox/validation": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/combobox/validation")),
      code : [{"title":"validation.tsx","code":"import React from \"react\";\r\nimport { Combobox } from \"@/lib/components/core/default/combobox\";\r\nimport { Item } from \"@/lib/components/core/default/list-box\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <Combobox aria-label=\"Country\" isInvalid errorMessage=\"Please select a country in the list.\">\r\n      <Item>Canada</Item>\r\n      <Item>France</Item>\r\n      <Item>Germany</Item>\r\n      <Item>Spain</Item>\r\n      <Item>Tunisia</Item>\r\n      <Item>United states</Item>\r\n      <Item>United Kingdom</Item>\r\n    </Combobox>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/combobox/custom-value": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/combobox/custom-value")),
      code : [{"title":"custom-value.tsx","code":"import React from \"react\";\r\nimport { Combobox } from \"@/lib/components/core/default/combobox\";\r\nimport { Item } from \"@/lib/components/core/default/list-box\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <Combobox aria-label=\"country\" allowsCustomValue>\r\n      <Item>Canada</Item>\r\n      <Item>France</Item>\r\n      <Item>Germany</Item>\r\n      <Item>Spain</Item>\r\n      <Item>Tunisia</Item>\r\n      <Item>United states</Item>\r\n      <Item>United Kingdom</Item>\r\n    </Combobox>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/combobox/disabled": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/combobox/disabled")),
      code : [{"title":"disabled.tsx","code":"import React from \"react\";\r\nimport { Combobox } from \"@/lib/components/core/default/combobox\";\r\nimport { Item } from \"@/lib/components/core/default/list-box\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <Combobox label=\"Favorite Animal\" isDisabled>\r\n      <Item id=\"red panda\">Red Panda</Item>\r\n      <Item id=\"cat\">Cat</Item>\r\n      <Item id=\"dog\">Dog</Item>\r\n      <Item id=\"aardvark\">Aardvark</Item>\r\n      <Item id=\"kangaroo\">Kangaroo</Item>\r\n      <Item id=\"snake\">Snake</Item>\r\n    </Combobox>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/combobox/loading": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/combobox/loading")),
      code : [{"title":"loading.tsx","code":"import React from \"react\";\r\nimport { Combobox } from \"@/lib/components/core/default/combobox\";\r\nimport { Item } from \"@/lib/components/core/default/list-box\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <Combobox label=\"Favorite Animal\" isLoading>\r\n      <Item>Red Panda</Item>\r\n      <Item>Cat</Item>\r\n      <Item>Dog</Item>\r\n      <Item>Aardvark</Item>\r\n      <Item>Kangaroo</Item>\r\n      <Item>Snake</Item>\r\n    </Combobox>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/combobox/required": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/combobox/required")),
      code : [{"title":"required.tsx","code":"import React from \"react\";\r\nimport { Combobox } from \"@/lib/components/core/default/combobox\";\r\nimport { Item } from \"@/lib/components/core/default/list-box\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <Combobox label=\"Country\" isRequired necessityIndicator=\"icon\">\r\n      <Item>Canada</Item>\r\n      <Item>France</Item>\r\n      <Item>Germany</Item>\r\n      <Item>Spain</Item>\r\n      <Item>Tunisia</Item>\r\n      <Item>United states</Item>\r\n      <Item>United Kingdom</Item>\r\n    </Combobox>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/combobox/sections": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/combobox/sections")),
      code : [{"title":"sections.tsx","code":"import React from \"react\";\r\nimport { Combobox } from \"@/lib/components/core/default/combobox\";\r\nimport { Item } from \"@/lib/components/core/default/list-box\";\r\nimport { Section } from \"@/lib/components/core/default/section\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <Combobox aria-label=\"Country\">\r\n      <Section title=\"Africa\">\r\n        <Item>Tunisia</Item>\r\n        <Item>Algeria</Item>\r\n        <Item>Morocco</Item>\r\n      </Section>\r\n      <Section title=\"America\">\r\n        <Item>Canada</Item>\r\n        <Item>United states</Item>\r\n      </Section>\r\n      <Section title=\"Asia\">\r\n        <Item>India</Item>\r\n        <Item>Japan</Item>\r\n        <Item>Korea</Item>\r\n      </Section>\r\n      <Section title=\"Europe\">\r\n        <Item>France</Item>\r\n        <Item>Germany</Item>\r\n        <Item>Spain</Item>\r\n        <Item>United Kingdom</Item>\r\n      </Section>\r\n    </Combobox>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/combobox/uncontrolled": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/combobox/uncontrolled")),
      code : [{"title":"uncontrolled.tsx","code":"import React from \"react\";\r\nimport { Combobox } from \"@/lib/components/core/default/combobox\";\r\nimport { Item } from \"@/lib/components/core/default/list-box\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <Combobox aria-label=\"country\" defaultSelectedKey=\"tn\">\r\n      <Item id=\"ca\">Canada</Item>\r\n      <Item id=\"fr\">France</Item>\r\n      <Item id=\"de\">Germany</Item>\r\n      <Item id=\"es\">Spain</Item>\r\n      <Item id=\"tn\">Tunisia</Item>\r\n      <Item id=\"us\">United States</Item>\r\n      <Item id=\"uk\">United Kingdom</Item>\r\n    </Combobox>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/combobox/controlled": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/combobox/controlled")),
      code : [{"title":"controlled.tsx","code":"\"use client\";\r\n\r\nimport React from \"react\";\r\nimport type { Key } from \"react-aria-components\";\r\nimport { Combobox } from \"@/lib/components/core/default/combobox\";\r\nimport { Item } from \"@/lib/components/core/default/list-box\";\r\n\r\nexport default function Demo() {\r\n  const [country, setCountry] = React.useState<Key | null>(\"tn\");\r\n  return (\r\n    <div className=\"flex flex-col items-center gap-6\">\r\n      <Combobox aria-label=\"country\" selectedKey={country} onSelectionChange={setCountry}>\r\n        <Item id=\"ca\">Canada</Item>\r\n        <Item id=\"fr\">France</Item>\r\n        <Item id=\"de\">Germany</Item>\r\n        <Item id=\"es\">Spain</Item>\r\n        <Item id=\"tn\">Tunisia</Item>\r\n        <Item id=\"us\">United States</Item>\r\n        <Item id=\"uk\">United Kingdom</Item>\r\n      </Combobox>\r\n      <p className=\"text-sm text-fg-muted\">\r\n        {country ? (\r\n          <>\r\n            You selected: <span className=\"font-bold text-fg\">{country}</span>\r\n          </>\r\n        ) : (\r\n          \"Select a country.\"\r\n        )}\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/combobox/composition": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/combobox/composition")),
      code : [{"title":"composition.tsx","code":"import React from \"react\";\r\nimport { ComboboxRoot, ComboboxTrigger } from \"@/lib/components/core/default/combobox\";\r\nimport { Description, FieldError, Label } from \"@/lib/components/core/default/field\";\r\nimport { Item, ListBox } from \"@/lib/components/core/default/list-box\";\r\nimport { Overlay } from \"@/lib/components/core/default/overlay\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <ComboboxRoot>\r\n      <Label>Framework</Label>\r\n      <ComboboxTrigger />\r\n      <Description>Please choose a framework.</Description>\r\n      <FieldError />\r\n      <Overlay type=\"popover\">\r\n        <ListBox>\r\n          <Item>Next.js</Item>\r\n          <Item>Remix</Item>\r\n          <Item>Gatsby</Item>\r\n          <Item></Item>\r\n        </ListBox>\r\n      </Overlay>\r\n    </ComboboxRoot>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/combobox/async-loading": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/combobox/async-loading")),
      code : [{"title":"async-loading.tsx","code":"\"use client\";\r\n\r\nimport { useAsyncList } from \"react-stately\";\r\nimport { Combobox } from \"@/lib/components/core/default/combobox\";\r\nimport { Item } from \"@/lib/components/core/default/list-box\";\r\n\r\ninterface Character {\r\n  name: string;\r\n}\r\n\r\nexport default function Demo() {\r\n  const list = useAsyncList<Character>({\r\n    async load({ signal }) {\r\n      const res = await fetch(`https://pokeapi.co/api/v2/pokemon`, { signal });\r\n      const json = (await res.json()) as { results: Character[] };\r\n      return {\r\n        items: json.results,\r\n      };\r\n    },\r\n  });\r\n\r\n  return (\r\n    <Combobox label=\"Pokemon\" items={list.items} isLoading={list.isLoading}>\r\n      {(item) => <Item id={item.name}>{item.name}</Item>}\r\n    </Combobox>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/list-box/basic": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/list-box/basic")),
      code : [{"title":"basic.tsx","code":"import { ListBox, Item } from \"@/lib/components/core/default/list-box\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <ListBox aria-label=\"Framework\">\r\n      <Item>Next.js</Item>\r\n      <Item>Remix</Item>\r\n      <Item>Astro</Item>\r\n      <Item>Gatsby</Item>\r\n    </ListBox>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/list-box/horizontal": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/list-box/horizontal")),
      code : [{"title":"horizontal.tsx","code":"import { ListBox, Item } from \"@/lib/components/core/default/list-box\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <ListBox aria-label=\"Options\" orientation=\"horizontal\" selectionMode=\"single\">\r\n      <Item textValue=\"Read\" label=\"Read\" description=\"Read Only\" />\r\n      <Item textValue=\"Write\" label=\"Write\" description=\"Read and Write Only\" />\r\n      <Item textValue=\"Admin\" label=\"Admin\" description=\"Full access\" />\r\n    </ListBox>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/list-box/grid": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/list-box/grid")),
      code : [{"title":"grid.tsx","code":"import { ListBox, Item } from \"@/lib/components/core/default/list-box\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <ListBox aria-label=\"Framework\" layout=\"grid\">\r\n      <Item>Next.js</Item>\r\n      <Item>Remix</Item>\r\n      <Item>Astro</Item>\r\n      <Item>Gatsby</Item>\r\n    </ListBox>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/list-box/selection-mode": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/list-box/selection-mode")),
      code : [{"title":"selection-mode.tsx","code":"import { ListBox, Item } from \"@/lib/components/core/default/list-box\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <div className=\"flex items-start gap-10\">\r\n      <ListBox aria-label=\"Framework\" selectionMode=\"single\">\r\n        <Item>Next.js</Item>\r\n        <Item>Remix</Item>\r\n        <Item>Astro</Item>\r\n        <Item>Gatsby</Item>\r\n      </ListBox>\r\n      <ListBox aria-label=\"Framework\" selectionMode=\"multiple\">\r\n        <Item>Next.js</Item>\r\n        <Item>Remix</Item>\r\n        <Item>Astro</Item>\r\n        <Item>Gatsby</Item>\r\n      </ListBox>\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/list-box/selection-behavior": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/list-box/selection-behavior")),
      code : [{"title":"selection-behavior.tsx","code":"import { ListBox, Item } from \"@/lib/components/core/default/list-box\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <ListBox aria-label=\"Framework\" selectionMode=\"multiple\" selectionBehavior=\"replace\">\r\n      <Item>Next.js</Item>\r\n      <Item>Remix</Item>\r\n      <Item>Astro</Item>\r\n      <Item>Gatsby</Item>\r\n    </ListBox>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/list-box/loading": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/list-box/loading")),
      code : [{"title":"loading.tsx","code":"import { ListBox, Item } from \"@/lib/components/core/default/list-box\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <ListBox isLoading>\r\n      <Item>User 1</Item>\r\n      <Item>User 2</Item>\r\n      <Item>User 3</Item>\r\n    </ListBox>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/list-box/empty-state": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/list-box/empty-state")),
      code : [{"title":"empty-state.tsx","code":"\"use client\";\r\n\r\nimport { ListBox } from \"@/lib/components/core/default/list-box\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <ListBox aria-label=\"Search results\" renderEmptyState={() => \"No results found.\"}></ListBox>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/list-box/item-variant": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/list-box/item-variant")),
      code : [{"title":"item-variant.tsx","code":"import { Item, ListBox } from \"@/lib/components/core/default/list-box\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <ListBox aria-label=\"project\">\r\n      <Item>View logs</Item>\r\n      <Item>Manage domains</Item>\r\n      <Item>Transfer project</Item>\r\n      <Item variant=\"danger\">Delete project</Item>\r\n    </ListBox>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/list-box/label-and-description": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/list-box/label-and-description")),
      code : [{"title":"label-and-description.tsx","code":"import { ListBox, Item } from \"@/lib/components/core/default/list-box\";\r\nimport { Section } from \"@/lib/components/core/default/section\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <ListBox aria-label=\"Options\" selectionMode=\"single\">\r\n      <Section title=\"Permissions\">\r\n        <Item textValue=\"Read\" label=\"Read\" description=\"Read Only\" />\r\n        <Item textValue=\"Write\" label=\"Write\" description=\"Read and Write Only\" />\r\n        <Item textValue=\"Admin\" label=\"Admin\" description=\"Full access\" />\r\n      </Section>\r\n    </ListBox>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/list-box/prefix-and-suffix": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/list-box/prefix-and-suffix")),
      code : [{"title":"prefix-and-suffix.tsx","code":"import { ListBox, Item } from \"@/lib/components/core/default/list-box\";\r\nimport { SquarePenIcon, PlusSquareIcon, CopyIcon } from \"@/lib/icons\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <ListBox aria-label=\"Framework\" className=\"w-60\">\r\n      <Item label=\"New file\" description=\"Create a new file\" prefix={<PlusSquareIcon />} />\r\n      <Item label=\"Copy link\" description=\"Copy the file link\" prefix={<CopyIcon />} />\r\n      <Item\r\n        label=\"Edit file\"\r\n        description=\"Allows you to edit the file\"\r\n        prefix={<SquarePenIcon />}\r\n      />\r\n    </ListBox>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/list-box/links": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/list-box/links")),
      code : [{"title":"links.tsx","code":"import { DiscordIcon, GitHubIcon, TwitterIcon } from \"@/components/icons\";\r\nimport { ListBox, Item } from \"@/lib/components/core/default/list-box\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <ListBox aria-label=\"Links\" className=\"w-auto\">\r\n      <Item href=\"https://github.com/mehdibha\" target=\"_blank\" prefix={<GitHubIcon />}>\r\n        GitHub\r\n      </Item>\r\n      <Item href=\"https://discord.com/invite/DXpj5V2fU8\" target=\"_blank\" prefix={<DiscordIcon />}>\r\n        Discord\r\n      </Item>\r\n      <Item href=\"https://x.com/mehdibha_\" target=\"_blank\" prefix={<TwitterIcon />}>\r\n        X\r\n      </Item>\r\n    </ListBox>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/list-box/disabled-items": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/list-box/disabled-items")),
      code : [{"title":"disabled-items.tsx","code":"import { ListBox, Item } from \"@/lib/components/core/default/list-box\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <ListBox aria-label=\"Favorite framework\" selectionMode=\"single\">\r\n      <Item>Next.js</Item>\r\n      <Item>Remix</Item>\r\n      <Item isDisabled>Gatsby</Item>\r\n      <Item>Astro</Item>\r\n    </ListBox>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/list-box/sections": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/list-box/sections")),
      code : [{"title":"sections.tsx","code":"import { ListBox, Item } from \"@/lib/components/core/default/list-box\";\r\nimport { Section } from \"@/lib/components/core/default/section\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <ListBox aria-label=\"Burger contents\" selectionMode=\"multiple\">\r\n      <Section title=\"Sauces\">\r\n        <Item id=\"signature-sauce\">Signature sauce</Item>\r\n        <Item id=\"bbq-sauce\">BBQ sauce</Item>\r\n        <Item id=\"honey-mustard\">Honey mustard</Item>\r\n        <Item id=\"tartar-sauce\">Tartar sauce</Item>\r\n      </Section>\r\n      <Section title=\"Cheese\">\r\n        <Item id=\"pepperjack\">Pepperjack</Item>\r\n        <Item id=\"mozzarella\">Mozzarella</Item>\r\n        <Item id=\"blue-cheese\">Blue cheese</Item>\r\n      </Section>\r\n      <Section title=\"Extras\">\r\n        <Item id=\"bacon\">Bacon</Item>\r\n        <Item id=\"sauteed-onions\">Sauteed onions</Item>\r\n        <Item id=\"green-pepper\">Green pepper</Item>\r\n      </Section>\r\n    </ListBox>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/list-box/separator": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/list-box/separator")),
      code : [{"title":"separator.tsx","code":"import { ListBox, Item } from \"@/lib/components/core/default/list-box\";\r\nimport { Separator } from \"@/lib/components/core/default/separator\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <ListBox aria-label=\"File\">\r\n      <Item>New...</Item>\r\n      <Item>Badges</Item>\r\n      <Separator />\r\n      <Item>Save</Item>\r\n      <Item>Save as...</Item>\r\n      <Item>Rename...</Item>\r\n      <Separator />\r\n      <Item>Page setup…</Item>\r\n      <Item>Print…</Item>\r\n    </ListBox>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/list-box/uncontrolled": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/list-box/uncontrolled")),
      code : [{"title":"uncontrolled.tsx","code":"import { ListBox, Item } from \"@/lib/components/core/default/list-box\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <ListBox\r\n      aria-label=\"Framework\"\r\n      selectionMode=\"multiple\"\r\n      defaultSelectedKeys={[\"nextjs\", \"remix\", \"astro\"]}\r\n    >\r\n      <Item id=\"nextjs\">Next.js</Item>\r\n      <Item id=\"remix\">Remix</Item>\r\n      <Item id=\"astro\">Astro</Item>\r\n      <Item id=\"gatsby\">Gatsby</Item>\r\n    </ListBox>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/list-box/controlled": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/list-box/controlled")),
      code : [{"title":"controlled.tsx","code":"\"use client\";\r\n\r\nimport React from \"react\";\r\nimport type { Selection } from \"react-aria-components\";\r\nimport { ListBox, Item } from \"@/lib/components/core/default/list-box\";\r\n\r\nexport default function Demo() {\r\n  const [selected, setSelected] = React.useState<Selection>(new Set([\"nextjs\", \"remix\", \"astro\"]));\r\n  return (\r\n    <div className=\"flex flex-col items-center gap-6\">\r\n      <ListBox\r\n        aria-label=\"Framework\"\r\n        selectionMode=\"multiple\"\r\n        selectedKeys={selected}\r\n        onSelectionChange={setSelected}\r\n      >\r\n        <Item id=\"nextjs\">Next.js</Item>\r\n        <Item id=\"remix\">Remix</Item>\r\n        <Item id=\"astro\">Astro</Item>\r\n        <Item id=\"gatsby\">Gatsby</Item>\r\n      </ListBox>\r\n      <p className=\"text-sm text-fg-muted\">\r\n        Selected items:{\" \"}\r\n        <span className=\"font-semibold\">\r\n          {selected === \"all\" ? \"all\" : [...selected].join(\", \")}\r\n        </span>\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/list-box/composition": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/list-box/composition")),
      code : [{"title":"composition.tsx","code":"import { ListBox, Item } from \"@/lib/components/core/default/list-box\";\r\nimport { Text } from \"@/lib/components/core/default/text\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <ListBox aria-label=\"Framework\" selectionMode=\"multiple\" className=\"w-60\">\r\n      <Item>\r\n        <Text slot=\"label\">Next.js</Text>\r\n        <Text slot=\"description\">React-based SSR and static site framework.</Text>\r\n      </Item>\r\n      <Item>\r\n        <Text slot=\"label\">Remix</Text>\r\n        <Text slot=\"description\">Full-stack framework with efficient data loading.</Text>\r\n      </Item>\r\n      <Item>\r\n        <Text slot=\"label\">Astro</Text>\r\n        <Text slot=\"description\">Lightweight static site builder for performance.</Text>\r\n      </Item>\r\n    </ListBox>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/list-box/async-loading": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/list-box/async-loading")),
      code : [{"title":"async-loading.tsx","code":"\"use client\";\r\n\r\nimport { useAsyncList } from \"react-stately\";\r\nimport { ListBox, Item } from \"@/lib/components/core/default/list-box\";\r\n\r\ninterface Character {\r\n  name: string;\r\n}\r\n\r\nexport default function Demo() {\r\n  const list = useAsyncList<Character>({\r\n    async load({ signal }) {\r\n      const res = await fetch(`https://pokeapi.co/api/v2/pokemon`, { signal });\r\n      const json = (await res.json()) as { results: Character[] };\r\n      return {\r\n        items: json.results,\r\n      };\r\n    },\r\n  });\r\n\r\n  return (\r\n    <ListBox\r\n      aria-label=\"Pick a Pokemon\"\r\n      items={list.items}\r\n      isLoading={list.isLoading}\r\n      selectionMode=\"single\"\r\n    >\r\n      {(item) => <Item id={item.name}>{item.name}</Item>}\r\n    </ListBox>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/menu/basic": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/menu/basic")),
      code : [{"title":"basic.tsx","code":"import { Button } from \"@/lib/components/core/default/button\";\r\nimport { Menu, MenuItem, MenuRoot } from \"@/lib/components/core/default/menu\";\r\nimport { MenuIcon } from \"@/lib/icons\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <MenuRoot>\r\n      <Button variant=\"outline\" shape=\"square\">\r\n        <MenuIcon />\r\n      </Button>\r\n      <Menu>\r\n        <MenuItem>Account settings</MenuItem>\r\n        <MenuItem>Create team</MenuItem>\r\n        <MenuItem>Command menu</MenuItem>\r\n        <MenuItem>Log out</MenuItem>\r\n      </Menu>\r\n    </MenuRoot>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/menu/overlay-type": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/menu/overlay-type")),
      code : [{"title":"overlay-type.tsx","code":"\"use client\";\r\n\r\nimport React from \"react\";\r\nimport { Button } from \"@/lib/components/core/default/button\";\r\nimport { Menu, MenuItem, MenuRoot } from \"@/lib/components/core/default/menu\";\r\nimport { type OverlayProps } from \"@/lib/components/core/default/overlay\";\r\nimport { Radio, RadioGroup } from \"@/lib/components/core/default/radio-group\";\r\nimport { MenuIcon } from \"@/lib/icons\";\r\n\r\nexport default function Demo() {\r\n  const [type, setType] = React.useState(\"popover\");\r\n  const [mobileType, setMobileType] = React.useState(\"drawer\");\r\n  return (\r\n    <div className=\"flex items-center gap-14\">\r\n      <MenuRoot>\r\n        <Button variant=\"outline\" shape=\"square\">\r\n          <MenuIcon />\r\n        </Button>\r\n        <Menu type={type as OverlayProps[\"type\"]} mobileType={mobileType as OverlayProps[\"type\"]}>\r\n          <MenuItem>Account settings</MenuItem>\r\n          <MenuItem>Create team</MenuItem>\r\n          <MenuItem>Command menu</MenuItem>\r\n          <MenuItem>Log out</MenuItem>\r\n        </Menu>\r\n      </MenuRoot>\r\n      <div className=\"flex items-center gap-6\">\r\n        <RadioGroup label=\"Type\" value={type} onChange={setType}>\r\n          <Radio value=\"popover\">Popover</Radio>\r\n          <Radio value=\"modal\">Modal</Radio>\r\n          <Radio value=\"drawer\">Drawer</Radio>\r\n        </RadioGroup>\r\n        <RadioGroup label=\"MobileType\" value={mobileType} onChange={setMobileType}>\r\n          <Radio value=\"popover\">Popover</Radio>\r\n          <Radio value=\"modal\">Modal</Radio>\r\n          <Radio value=\"drawer\">Drawer</Radio>\r\n        </RadioGroup>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/menu/placement": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/menu/placement")),
      code : [{"title":"placement.tsx","code":"\"use client\";\r\n\r\nimport React from \"react\";\r\nimport { Button } from \"@/lib/components/core/default/button\";\r\nimport { Item } from \"@/lib/components/core/default/list-box\";\r\nimport { Menu, MenuItem, MenuRoot, type MenuProps } from \"@/lib/components/core/default/menu\";\r\nimport { Select } from \"@/lib/components/core/default/select\";\r\nimport { MenuIcon } from \"@/lib/icons\";\r\n\r\ntype Placement = MenuProps<object>[\"placement\"];\r\n\r\nexport default function Demo() {\r\n  const [placement, setPlacement] = React.useState<Placement>(\"top\");\r\n  return (\r\n    <div className=\"flex items-center gap-10\">\r\n      <MenuRoot>\r\n        <Button variant=\"outline\" shape=\"square\" size=\"sm\">\r\n          <MenuIcon />\r\n        </Button>\r\n        <Menu placement={placement}>\r\n          <MenuItem>Account settings</MenuItem>\r\n          <MenuItem>Create team</MenuItem>\r\n          <MenuItem>Log out</MenuItem>\r\n        </Menu>\r\n      </MenuRoot>\r\n      <Select\r\n        label=\"Placement\"\r\n        selectedKey={placement}\r\n        onSelectionChange={(key) => setPlacement(key as Placement)}\r\n      >\r\n        {[\r\n          \"bottom\",\r\n          \"bottom left\",\r\n          \"bottom right\",\r\n          \"bottom start\",\r\n          \"bottom end\",\r\n          \"top\",\r\n          \"top left\",\r\n          \"top right\",\r\n          \"top start\",\r\n          \"top end\",\r\n          \"left\",\r\n          \"left top\",\r\n          \"left\",\r\n          \"bottom\",\r\n          \"start\",\r\n          \"start top\",\r\n          \"start bottom\",\r\n          \"right\",\r\n          \"right top\",\r\n          \"right\",\r\n          \"bottom\",\r\n          \"end\",\r\n          \"end top\",\r\n          \"end bottom\",\r\n        ].map((pos, index) => (\r\n          <Item key={index} id={pos.replace(\" \", \"\")}>\r\n            {pos}\r\n          </Item>\r\n        ))}\r\n      </Select>\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/menu/single-selection": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/menu/single-selection")),
      code : [{"title":"single-selection.tsx","code":"\"use client\";\r\n\r\nimport React from \"react\";\r\nimport type { Selection } from \"react-aria-components\";\r\nimport { Button } from \"@/lib/components/core/default/button\";\r\nimport { Menu, MenuItem, MenuRoot } from \"@/lib/components/core/default/menu\";\r\n\r\nexport default function Demo() {\r\n  const [selected, setSelected] = React.useState<Selection>(new Set([\"center\"]));\r\n  return (\r\n    <MenuRoot>\r\n      <Button variant=\"outline\" size=\"sm\">\r\n        Align\r\n      </Button>\r\n      <Menu selectionMode=\"single\" selectedKeys={selected} onSelectionChange={setSelected}>\r\n        <MenuItem id=\"start\">Start</MenuItem>\r\n        <MenuItem id=\"center\">Center</MenuItem>\r\n        <MenuItem id=\"end\">End</MenuItem>\r\n      </Menu>\r\n    </MenuRoot>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/menu/multiple-selection": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/menu/multiple-selection")),
      code : [{"title":"multiple-selection.tsx","code":"import React from \"react\";\r\nimport { Button } from \"@/lib/components/core/default/button\";\r\nimport { Menu, MenuItem, MenuRoot } from \"@/lib/components/core/default/menu\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <MenuRoot>\r\n      <Button variant=\"outline\" size=\"sm\">\r\n        Panels\r\n      </Button>\r\n      <Menu selectionMode=\"multiple\" defaultSelectedKeys={[\"sidebar\", \"searchbar\", \"console\"]}>\r\n        <MenuItem id=\"sidebar\">Sidebar</MenuItem>\r\n        <MenuItem id=\"searchbar\">Searchbar</MenuItem>\r\n        <MenuItem id=\"tools\">Tools</MenuItem>\r\n        <MenuItem id=\"console\">Console</MenuItem>\r\n      </Menu>\r\n    </MenuRoot>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/menu/item-variant": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/menu/item-variant")),
      code : [{"title":"item-variant.tsx","code":"import { Button } from \"@/lib/components/core/default/button\";\r\nimport { Menu, MenuItem, MenuRoot } from \"@/lib/components/core/default/menu\";\r\nimport { MenuIcon } from \"@/lib/icons\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <MenuRoot>\r\n      <Button variant=\"outline\" shape=\"square\">\r\n        <MenuIcon />\r\n      </Button>\r\n      <Menu>\r\n        <MenuItem>Account settings</MenuItem>\r\n        <MenuItem>Create team</MenuItem>\r\n        <MenuItem>Command menu</MenuItem>\r\n        <MenuItem variant=\"danger\">Delete</MenuItem>\r\n      </Menu>\r\n    </MenuRoot>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/menu/label-and-description": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/menu/label-and-description")),
      code : [{"title":"label-and-description.tsx","code":"import { Button } from \"@/lib/components/core/default/button\";\r\nimport { Menu, MenuItem, MenuRoot } from \"@/lib/components/core/default/menu\";\r\nimport { MenuIcon } from \"@/lib/icons\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <MenuRoot>\r\n      <Button variant=\"outline\" shape=\"square\">\r\n        <MenuIcon />\r\n      </Button>\r\n      <Menu>\r\n        <MenuItem label=\"New file\" description=\"Create a new file\" />\r\n        <MenuItem label=\"Copy link\" description=\"Copy the file link\" />\r\n        <MenuItem label=\"Edit file\" description=\"Allows you to edit the file\" />\r\n      </Menu>\r\n    </MenuRoot>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/menu/prefix-and-suffix": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/menu/prefix-and-suffix")),
      code : [{"title":"prefix-and-suffix.tsx","code":"import { Button } from \"@/lib/components/core/default/button\";\r\nimport { Menu, MenuItem, MenuRoot } from \"@/lib/components/core/default/menu\";\r\nimport { CopyIcon, MenuIcon, PlusSquareIcon, SquarePenIcon } from \"@/lib/icons\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <MenuRoot>\r\n      <Button variant=\"outline\" shape=\"square\" size=\"sm\">\r\n        <MenuIcon />\r\n      </Button>\r\n      <Menu>\r\n        <MenuItem label=\"New file\" description=\"Create a new file\" prefix={<PlusSquareIcon />} />\r\n        <MenuItem label=\"Copy link\" description=\"Copy the file link\" prefix={<CopyIcon />} />\r\n        <MenuItem\r\n          label=\"Edit file\"\r\n          description=\"Allows you to edit the file\"\r\n          prefix={<SquarePenIcon />}\r\n        />\r\n      </Menu>\r\n    </MenuRoot>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/menu/shortcut": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/menu/shortcut")),
      code : [{"title":"shortcut.tsx","code":"import { Button } from \"@/lib/components/core/default/button\";\r\nimport { Menu, MenuItem, MenuRoot } from \"@/lib/components/core/default/menu\";\r\nimport { MenuIcon } from \"@/lib/icons\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <MenuRoot>\r\n      <Button variant=\"outline\" shape=\"square\">\r\n        <MenuIcon />\r\n      </Button>\r\n      <Menu>\r\n        <MenuItem shortcut=\"⌘N\">New file</MenuItem>\r\n        <MenuItem shortcut=\"⌘C\">Copy link</MenuItem>\r\n        <MenuItem shortcut=\"⌘⇧E\">Edit file</MenuItem>\r\n      </Menu>\r\n    </MenuRoot>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/menu/link-items": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/menu/link-items")),
      code : [{"title":"link-items.tsx","code":"import { DiscordIcon, GitHubIcon, TwitterIcon } from \"@/components/icons\";\r\nimport { Button } from \"@/lib/components/core/default/button\";\r\nimport { Menu, MenuItem, MenuRoot } from \"@/lib/components/core/default/menu\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <MenuRoot>\r\n      <Button variant=\"outline\" size=\"sm\">\r\n        Social\r\n      </Button>\r\n      <Menu>\r\n        <MenuItem prefix={<GitHubIcon />} href=\"https://github.com/mehdibha/dotUI\" target=\"_blank\">\r\n          Github\r\n        </MenuItem>\r\n        <MenuItem prefix={<TwitterIcon />} href=\"https://twitter.com/mehdibha_\" target=\"_blank\">\r\n          X\r\n        </MenuItem>\r\n        <MenuItem\r\n          prefix={<DiscordIcon />}\r\n          href=\"https://discord.com/invite/DXpj5V2fU8\"\r\n          target=\"_blank\"\r\n        >\r\n          Discord\r\n        </MenuItem>\r\n      </Menu>\r\n    </MenuRoot>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/menu/disabled-items": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/menu/disabled-items")),
      code : [{"title":"disabled-items.tsx","code":"import { Button } from \"@/lib/components/core/default/button\";\r\nimport { Menu, MenuItem, MenuRoot } from \"@/lib/components/core/default/menu\";\r\nimport { MenuIcon, PlusSquareIcon } from \"@/lib/icons\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <MenuRoot>\r\n      <Button variant=\"outline\" shape=\"square\">\r\n        <MenuIcon />\r\n      </Button>\r\n      <Menu>\r\n        <MenuItem>Account settings</MenuItem>\r\n        <MenuItem prefix={<PlusSquareIcon />} isDisabled>\r\n          Create team\r\n        </MenuItem>\r\n        <MenuItem>Log out</MenuItem>\r\n      </Menu>\r\n    </MenuRoot>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/menu/long-press": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/menu/long-press")),
      code : [{"title":"long-press.tsx","code":"import { Button } from \"@/lib/components/core/default/button\";\r\nimport { Menu, MenuItem, MenuRoot } from \"@/lib/components/core/default/menu\";\r\nimport { MenuIcon } from \"@/lib/icons\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <MenuRoot trigger=\"longPress\">\r\n      <Button variant=\"outline\" shape=\"square\">\r\n        <MenuIcon />\r\n      </Button>\r\n      <Menu>\r\n        <MenuItem>Account settings</MenuItem>\r\n        <MenuItem>Create team</MenuItem>\r\n        <MenuItem>Log out</MenuItem>\r\n      </Menu>\r\n    </MenuRoot>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/menu/section": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/menu/section")),
      code : [{"title":"section.tsx","code":"import { Button } from \"@/lib/components/core/default/button\";\r\nimport { Menu, MenuItem, MenuRoot } from \"@/lib/components/core/default/menu\";\r\nimport { Section } from \"@/lib/components/core/default/section\";\r\nimport { MenuIcon } from \"@/lib/icons\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <MenuRoot>\r\n      <Button variant=\"outline\" shape=\"square\">\r\n        <MenuIcon />\r\n      </Button>\r\n      <Menu>\r\n        <Section title=\"Notifications\">\r\n          <MenuItem>Push notifications</MenuItem>\r\n          <MenuItem>Badges</MenuItem>\r\n        </Section>\r\n        <Section title=\"Panels\">\r\n          <MenuItem id=\"console\">Console</MenuItem>\r\n          <MenuItem>Search</MenuItem>\r\n        </Section>\r\n      </Menu>\r\n    </MenuRoot>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/menu/separator": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/menu/separator")),
      code : [{"title":"separator.tsx","code":"import { Button } from \"@/lib/components/core/default/button\";\r\nimport { Menu, MenuItem, MenuRoot } from \"@/lib/components/core/default/menu\";\r\nimport { Separator } from \"@/lib/components/core/default/separator\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <MenuRoot>\r\n      <Button variant=\"outline\">File</Button>\r\n      <Menu>\r\n        <MenuItem>New...</MenuItem>\r\n        <MenuItem>Badges</MenuItem>\r\n        <Separator />\r\n        <MenuItem>Save</MenuItem>\r\n        <MenuItem>Save as...</MenuItem>\r\n        <MenuItem>Rename...</MenuItem>\r\n        <Separator />\r\n        <MenuItem>Page setup…</MenuItem>\r\n        <MenuItem>Print…</MenuItem>\r\n      </Menu>\r\n    </MenuRoot>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/menu/submenus": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/menu/submenus")),
      code : [{"title":"submenus.tsx","code":"import { Button } from \"@/lib/components/core/default/button\";\r\nimport { Menu, MenuItem, MenuRoot, MenuSub } from \"@/lib/components/core/default/menu\";\r\nimport { MenuIcon } from \"@/lib/icons\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <MenuRoot>\r\n      <Button variant=\"outline\" shape=\"square\">\r\n        <MenuIcon />\r\n      </Button>\r\n      <Menu>\r\n        <MenuItem>Account settings</MenuItem>\r\n        <MenuSub>\r\n          <MenuItem>Invite users</MenuItem>\r\n          <Menu>\r\n            <MenuItem>SMS</MenuItem>\r\n            <MenuItem>Twitter</MenuItem>\r\n            <MenuSub>\r\n              <MenuItem>Email</MenuItem>\r\n              <Menu>\r\n                <MenuItem>Work</MenuItem>\r\n                <MenuItem>Personal</MenuItem>\r\n              </Menu>\r\n            </MenuSub>\r\n          </Menu>\r\n        </MenuSub>\r\n      </Menu>\r\n    </MenuRoot>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/menu/controlled": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/menu/controlled")),
      code : [{"title":"controlled.tsx","code":"\"use client\";\r\n\r\nimport React from \"react\";\r\nimport { Button } from \"@/lib/components/core/default/button\";\r\nimport { Menu, MenuItem, MenuRoot } from \"@/lib/components/core/default/menu\";\r\nimport { MenuIcon } from \"@/lib/icons\";\r\n\r\nexport default function Demo() {\r\n  const [isOpen, setOpen] = React.useState(false);\r\n  return (\r\n    <div className=\"flex flex-col-reverse items-center gap-4\">\r\n      <MenuRoot isOpen={isOpen} onOpenChange={setOpen}>\r\n        <Button variant=\"outline\" shape=\"square\">\r\n          <MenuIcon />\r\n        </Button>\r\n        <Menu>\r\n          <MenuItem>Account settings</MenuItem>\r\n          <MenuItem>Create team</MenuItem>\r\n          <MenuItem>Log out</MenuItem>\r\n        </Menu>\r\n      </MenuRoot>\r\n      <p className=\"text-sm text-fg-muted\">state: {isOpen ? \"open\" : \"closed\"}</p>\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/menu/composition": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/menu/composition")),
      code : [{"title":"composition.tsx","code":"import { Button } from \"@/lib/components/core/default/button\";\r\nimport { MenuContent, MenuItem, MenuRoot } from \"@/lib/components/core/default/menu\";\r\nimport { Overlay } from \"@/lib/components/core/default/overlay\";\r\nimport { MenuIcon } from \"@/lib/icons\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <MenuRoot>\r\n      <Button variant=\"outline\" shape=\"square\">\r\n        <MenuIcon />\r\n      </Button>\r\n      <Overlay type=\"popover\" mobileType=\"drawer\">\r\n        <MenuContent>\r\n          <MenuItem>Account settings</MenuItem>\r\n          <MenuItem>Create team</MenuItem>\r\n          <MenuItem>Command menu</MenuItem>\r\n          <MenuItem>Log out</MenuItem>\r\n        </MenuContent>\r\n      </Overlay>\r\n    </MenuRoot>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/select/basic": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/select/basic")),
      code : [{"title":"basic.tsx","code":"import React from \"react\";\r\nimport { Item } from \"@/lib/components/core/default/list-box\";\r\nimport { Select } from \"@/lib/components/core/default/select\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <Select>\r\n      <Item>Perplexity</Item>\r\n      <Item>Replicate</Item>\r\n      <Item>Together AI</Item>\r\n      <Item>ElevenLabs</Item>\r\n    </Select>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/select/placeholder": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/select/placeholder")),
      code : [{"title":"placeholder.tsx","code":"import React from \"react\";\r\nimport { Item } from \"@/lib/components/core/default/list-box\";\r\nimport { Select } from \"@/lib/components/core/default/select\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <Select placeholder=\"Select a provider\">\r\n      <Item>Perplexity</Item>\r\n      <Item>Replicate</Item>\r\n      <Item>Together AI</Item>\r\n      <Item>ElevenLabs</Item>\r\n    </Select>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/select/label": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/select/label")),
      code : [{"title":"label.tsx","code":"import React from \"react\";\r\nimport { Item } from \"@/lib/components/core/default/list-box\";\r\nimport { Select } from \"@/lib/components/core/default/select\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <Select label=\"Provider\">\r\n      <Item>Perplexity</Item>\r\n      <Item>Replicate</Item>\r\n      <Item>Together AI</Item>\r\n      <Item>ElevenLabs</Item>\r\n    </Select>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/select/description": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/select/description")),
      code : [{"title":"description.tsx","code":"import React from \"react\";\r\nimport { Item } from \"@/lib/components/core/default/list-box\";\r\nimport { Select } from \"@/lib/components/core/default/select\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <Select label=\"Provider\" description=\"Please select a provider.\">\r\n      <Item>Perplexity</Item>\r\n      <Item>Replicate</Item>\r\n      <Item>Together AI</Item>\r\n      <Item>ElevenLabs</Item>\r\n    </Select>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/select/contextual-help": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/select/contextual-help")),
      code : [{"title":"contextual-help.tsx","code":"import React from \"react\";\r\nimport { ContextualHelp } from \"@/lib/components/core/default/contextual-help\";\r\nimport { Item } from \"@/lib/components/core/default/list-box\";\r\nimport { Select } from \"@/lib/components/core/default/select\";\r\n\r\nexport default function SelectDemo() {\r\n  return (\r\n    <Select\r\n      label=\"Provider\"\r\n      contextualHelp={\r\n        <ContextualHelp\r\n          title=\"Need help?\"\r\n          description=\"If you're having trouble, get assisted by our AI.\"\r\n        />\r\n      }\r\n    >\r\n      <Item>Perplexity</Item>\r\n      <Item>Replicate</Item>\r\n      <Item>Together AI</Item>\r\n      <Item>ElevenLabs</Item>\r\n    </Select>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/select/validation": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/select/validation")),
      code : [{"title":"validation.tsx","code":"import React from \"react\";\r\nimport { Item } from \"@/lib/components/core/default/list-box\";\r\nimport { Select } from \"@/lib/components/core/default/select\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <Select label=\"Provider\" isInvalid errorMessage=\"Please select an item in the list.\">\r\n      <Item>Perplexity</Item>\r\n      <Item>Replicate</Item>\r\n      <Item>Together AI</Item>\r\n      <Item>ElevenLabs</Item>\r\n    </Select>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/select/sections": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/select/sections")),
      code : [{"title":"sections.tsx","code":"import React from \"react\";\r\nimport { Item } from \"@/lib/components/core/default/list-box\";\r\nimport { Section } from \"@/lib/components/core/default/section\";\r\nimport { Select } from \"@/lib/components/core/default/select\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <Select label=\"Model\">\r\n      <Section title=\"OpenAI\">\r\n        <Item>GPT-4o</Item>\r\n        <Item>GPT-4 Turbo</Item>\r\n        <Item>GPT-4</Item>\r\n        <Item>GPT-3.5 Turbo</Item>\r\n      </Section>\r\n      <Section title=\"Google\">\r\n        <Item>Gemini 1.5 Flash</Item>\r\n        <Item>Gemini 1.5 Pro</Item>\r\n        <Item>Gemini 1.0 Pro</Item>\r\n      </Section>\r\n      <Section title=\"Meta\">\r\n        <Item>Llama 3 (70B)</Item>\r\n        <Item>Llama 3 (8B)</Item>\r\n        <Item>Code Llama (70B)</Item>\r\n      </Section>\r\n      <Section title=\"Mistral AI\">\r\n        <Item>Mixtral 8x22B</Item>\r\n        <Item>Mistral Large</Item>\r\n        <Item>Mistral 7B</Item>\r\n      </Section>\r\n    </Select>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/select/links": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/select/links")),
      code : [{"title":"links.tsx","code":"import React from \"react\";\r\nimport { Item } from \"@/lib/components/core/default/list-box\";\r\nimport { Select } from \"@/lib/components/core/default/select\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <Select label=\"Project\">\r\n      <Item href=\"/create-project\" target=\"_blank\">\r\n        Create new...\r\n      </Item>\r\n      <Item>DotUI</Item>\r\n      <Item>Palettify</Item>\r\n      <Item>Notionfolio</Item>\r\n    </Select>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/select/disabled": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/select/disabled")),
      code : [{"title":"disabled.tsx","code":"import React from \"react\";\r\nimport { Item } from \"@/lib/components/core/default/list-box\";\r\nimport { Select } from \"@/lib/components/core/default/select\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <Select isDisabled>\r\n      <Item>Perplexity</Item>\r\n      <Item>Replicate</Item>\r\n      <Item>Together AI</Item>\r\n      <Item>ElevenLabs</Item>\r\n    </Select>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/select/loading": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/select/loading")),
      code : [{"title":"loading.tsx","code":"import React from \"react\";\r\nimport { Item } from \"@/lib/components/core/default/list-box\";\r\nimport { Select } from \"@/lib/components/core/default/select\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <Select isLoading>\r\n      <Item>Perplexity</Item>\r\n      <Item>Replicate</Item>\r\n      <Item>Together AI</Item>\r\n      <Item>ElevenLabs</Item>\r\n    </Select>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/select/required": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/select/required")),
      code : [{"title":"required.tsx","code":"import React from \"react\";\r\nimport { Item } from \"@/lib/components/core/default/list-box\";\r\nimport { Select } from \"@/lib/components/core/default/select\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <Select label=\"Provider\" isRequired necessityIndicator=\"icon\">\r\n      <Item>Perplexity</Item>\r\n      <Item>Replicate</Item>\r\n      <Item>Together AI</Item>\r\n      <Item>ElevenLabs</Item>\r\n    </Select>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/select/uncontrolled": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/select/uncontrolled")),
      code : [{"title":"uncontrolled.tsx","code":"import React from \"react\";\r\nimport { Item } from \"@/lib/components/core/default/list-box\";\r\nimport { Select } from \"@/lib/components/core/default/select\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <Select defaultSelectedKey=\"eleven-labs\">\r\n      <Item id=\"perplexity\">Perplexity</Item>\r\n      <Item id=\"replicate\">Replicate</Item>\r\n      <Item id=\"together-ai\">Together AI</Item>\r\n      <Item id=\"eleven-labs\">ElevenLabs</Item>\r\n    </Select>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/select/controlled": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/select/controlled")),
      code : [{"title":"controlled.tsx","code":"\"use client\";\r\n\r\nimport React from \"react\";\r\nimport type { Key } from \"react-aria-components\";\r\nimport { Item } from \"@/lib/components/core/default/list-box\";\r\nimport { Select } from \"@/lib/components/core/default/select\";\r\n\r\nexport default function Demo() {\r\n  const [provider, setProvider] = React.useState<Key>(\"eleven-labs\");\r\n  return (\r\n    <div className=\"flex flex-col items-center gap-6\">\r\n      <Select selectedKey={provider} onSelectionChange={setProvider}>\r\n        <Item id=\"perplexity\">Perplexity</Item>\r\n        <Item id=\"replicate\">Replicate</Item>\r\n        <Item id=\"together-ai\">Together AI</Item>\r\n        <Item id=\"eleven-labs\">ElevenLabs</Item>\r\n      </Select>\r\n      <p className=\"text-sm text-fg-muted\">\r\n        Selected provider: <span className=\"font-bold text-fg\">{provider}</span>\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/select/composition": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/select/composition")),
      code : [{"title":"composition.tsx","code":"import React from \"react\";\r\nimport { Button } from \"@/lib/components/core/default/button\";\r\nimport { Item, ListBox } from \"@/lib/components/core/default/list-box\";\r\nimport { Overlay } from \"@/lib/components/core/default/overlay\";\r\nimport { SelectRoot, SelectValue } from \"@/lib/components/core/default/select\";\r\nimport { ChevronsUpDownIcon } from \"@/lib/icons\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <SelectRoot>\r\n      <Button variant=\"outline\" suffix={<ChevronsUpDownIcon className=\"text-fg-muted\" />}>\r\n        <SelectValue />\r\n      </Button>\r\n      <Overlay type=\"popover\">\r\n        <ListBox>\r\n          <Item>Perplexity</Item>\r\n          <Item>Replicate</Item>\r\n          <Item>Together AI</Item>\r\n          <Item>ElevenLabs</Item>\r\n        </ListBox>\r\n      </Overlay>\r\n    </SelectRoot>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/select/async-loading": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/select/async-loading")),
      code : [{"title":"async-loading.tsx","code":"\"use client\";\r\n\r\nimport React from \"react\";\r\nimport { useAsyncList } from \"react-stately\";\r\nimport { Item } from \"@/lib/components/core/default/list-box\";\r\nimport { Select } from \"@/lib/components/core/default/select\";\r\n\r\ninterface Character {\r\n  name: string;\r\n}\r\n\r\nexport default function Demo() {\r\n  const list = useAsyncList<Character>({\r\n    async load({ signal }) {\r\n      const res = await fetch(`https://pokeapi.co/api/v2/pokemon`, { signal });\r\n      const json = (await res.json()) as { results: Character[] };\r\n\r\n      return {\r\n        items: json.results,\r\n      };\r\n    },\r\n  });\r\n  return (\r\n    <Select isLoading={list.isLoading} items={list.items}>\r\n      {(item) => <Item id={item.name}>{item.name}</Item>}\r\n    </Select>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/breadcrumbs/basic": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/breadcrumbs/basic")),
      code : [{"title":"basic.tsx","code":"import { Breadcrumbs, Breadcrumb } from \"@/lib/components/core/default/breadcrumbs\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <Breadcrumbs>\r\n      <Breadcrumb href=\"#\">Home</Breadcrumb>\r\n      <Breadcrumb href=\"#\">Components</Breadcrumb>\r\n      <Breadcrumb href=\"#\">Breadcrumbs</Breadcrumb>\r\n    </Breadcrumbs>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/breadcrumbs/disabled": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/breadcrumbs/disabled")),
      code : [{"title":"disabled.tsx","code":"import { Breadcrumbs, Breadcrumb } from \"@/lib/components/core/default/breadcrumbs\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <Breadcrumbs isDisabled>\r\n      <Breadcrumb href=\"#\">Home</Breadcrumb>\r\n      <Breadcrumb href=\"#\">Components</Breadcrumb>\r\n      <Breadcrumb>Breadcrumbs</Breadcrumb>\r\n    </Breadcrumbs>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/breadcrumbs/composition": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/breadcrumbs/composition")),
      code : [{"title":"composition.tsx","code":"import {\r\n  Breadcrumbs,\r\n  BreadcrumbItem,\r\n  BreadcrumbLink,\r\n} from \"@/lib/components/core/default/breadcrumbs\";\r\nimport { ChevronRightSquareIcon } from \"@/lib/icons\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <Breadcrumbs>\r\n      <BreadcrumbItem>\r\n        <BreadcrumbLink href=\"#\">Home</BreadcrumbLink>\r\n        <ChevronRightSquareIcon />\r\n      </BreadcrumbItem>\r\n      <BreadcrumbItem>\r\n        <BreadcrumbLink href=\"#\">Components</BreadcrumbLink>\r\n        <ChevronRightSquareIcon />\r\n      </BreadcrumbItem>\r\n      <BreadcrumbItem>\r\n        <BreadcrumbLink>Breadcrumbs</BreadcrumbLink>\r\n        <ChevronRightSquareIcon />\r\n      </BreadcrumbItem>\r\n    </Breadcrumbs>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/breadcrumbs/icon": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/breadcrumbs/icon")),
      code : [{"title":"icon.tsx","code":"import { Breadcrumbs, Breadcrumb } from \"@/lib/components/core/default/breadcrumbs\";\r\nimport { HomeIcon } from \"@/lib/icons\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <Breadcrumbs>\r\n      <Breadcrumb href=\"#\">\r\n        <HomeIcon />\r\n        Home\r\n      </Breadcrumb>\r\n      <Breadcrumb href=\"#\">Components</Breadcrumb>\r\n      <Breadcrumb href=\"#\">Breadcrumbs</Breadcrumb>\r\n    </Breadcrumbs>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/breadcrumbs/router-integration": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/breadcrumbs/router-integration")),
      code : [{"title":"router-integration.tsx","code":"\"use client\";\r\n\r\nimport { usePathname } from \"next/navigation\";\r\nimport { Breadcrumbs, Breadcrumb } from \"@/lib/components/core/default/breadcrumbs\";\r\n\r\nexport default function Demo() {\r\n  const pathname = usePathname();\r\n  const pathnames = pathname.split(\"/\").filter((x) => x);\r\n  return (\r\n    <Breadcrumbs>\r\n      {pathnames.map((elem, index) => {\r\n        const href = `/${pathnames.slice(0, index + 1).join(\"/\")}`;\r\n        return (\r\n          <Breadcrumb key={elem} href={href} className=\"capitalize\">\r\n            {elem}\r\n          </Breadcrumb>\r\n        );\r\n      })}\r\n    </Breadcrumbs>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/link/default": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/link/default")),
      code : [{"title":"default.tsx","code":"import { Link } from \"@/lib/components/core/default/link\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <Link href=\"https://x.com/mehdibha_\" target=\"_blank\">\r\n      @mehdibha_\r\n    </Link>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/link/variants": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/link/variants")),
      code : [{"title":"variants.tsx","code":"import { Link } from \"@/lib/components/core/default/link\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <div className=\"space-y-2\">\r\n      {([\"accent\", \"quiet\"] as const).map((variant, index) => (\r\n        <p key={index}>\r\n          Follow{\" \"}\r\n          <Link variant={variant} href=\"https://x.com/mehdibha_\" target=\"_blank\">\r\n            @mehdibha_\r\n          </Link>{\" \"}\r\n          to stay updated on dotUI latest releases.\r\n        </p>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/link/disabled": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/link/disabled")),
      code : [{"title":"disabled.tsx","code":"import { Link } from \"@/lib/components/core/default/link\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <Link href=\"https://x.com/mehdibha_\" isDisabled>\r\n      @mehdibha_\r\n    </Link>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/link/icon": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/link/icon")),
      code : [{"title":"icon.tsx","code":"import { Link } from \"@/lib/components/core/default/link\";\r\nimport { ExternalLinkIcon } from \"@/lib/icons\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <Link href=\"/docs\" target=\"_blank\">\r\n      Docs{\" \"}\r\n      <span>\r\n        <ExternalLinkIcon className=\"size-4\" />\r\n      </span>\r\n    </Link>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/tabs/basic": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/tabs/basic")),
      code : [{"title":"basic.tsx","code":"import { Tabs, TabList, TabPanel, Tab } from \"@/lib/components/core/default/tabs\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <Tabs>\r\n      <TabList>\r\n        <Tab id=\"overview\">Overview</Tab>\r\n        <Tab id=\"usage\">Usage</Tab>\r\n        <Tab id=\"settings\">Settings</Tab>\r\n      </TabList>\r\n      <TabPanel id=\"overview\"> You can view all your projects here. </TabPanel>\r\n      <TabPanel id=\"usage\"> You can view your usage here. </TabPanel>\r\n      <TabPanel id=\"settings\"> You can view your settings here. </TabPanel>\r\n    </Tabs>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/tabs/vertical": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/tabs/vertical")),
      code : [{"title":"vertical.tsx","code":"import { Tabs, TabList, TabPanel, Tab } from \"@/lib/components/core/default/tabs\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <Tabs orientation=\"vertical\">\r\n      <TabList>\r\n        <Tab id=\"overview\">Overview</Tab>\r\n        <Tab id=\"usage\">Usage</Tab>\r\n        <Tab id=\"settings\">Settings</Tab>\r\n      </TabList>\r\n      <TabPanel id=\"overview\">You can view all your projects here. </TabPanel>\r\n      <TabPanel id=\"usage\"> You can view your usage here. </TabPanel>\r\n      <TabPanel id=\"settings\"> You can view your settings here. </TabPanel>\r\n    </Tabs>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/tabs/disabled": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/tabs/disabled")),
      code : [{"title":"disabled.tsx","code":"import { Tabs, TabList, TabPanel, Tab } from \"@/lib/components/core/default/tabs\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <Tabs isDisabled>\r\n      <TabList>\r\n        <Tab id=\"overview\">Overview</Tab>\r\n        <Tab id=\"usage\">Usage</Tab>\r\n        <Tab id=\"settings\">Settings</Tab>\r\n      </TabList>\r\n      <TabPanel id=\"overview\"> You can view all your projects here. </TabPanel>\r\n      <TabPanel id=\"usage\"> You can view your usage here. </TabPanel>\r\n      <TabPanel id=\"settings\"> You can view your settings here. </TabPanel>\r\n    </Tabs>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/tabs/disabled-item": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/tabs/disabled-item")),
      code : [{"title":"disabled-item.tsx","code":"import { Tabs, TabList, TabPanel, Tab } from \"@/lib/components/core/default/tabs\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <Tabs>\r\n      <TabList>\r\n        <Tab id=\"overview\">Overview</Tab>\r\n        <Tab id=\"usage\">Usage</Tab>\r\n        <Tab id=\"settings\" isDisabled>\r\n          Settings\r\n        </Tab>\r\n      </TabList>\r\n      <TabPanel id=\"overview\"> You can view all your projects here. </TabPanel>\r\n      <TabPanel id=\"usage\"> You can view your usage here. </TabPanel>\r\n      <TabPanel id=\"settings\"> You can view your settings here. </TabPanel>\r\n    </Tabs>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/tabs/keyboard-activation": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/tabs/keyboard-activation")),
      code : [{"title":"keyboard-activation.tsx","code":"import { Tabs, TabList, TabPanel, Tab } from \"@/lib/components/core/default/tabs\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <Tabs keyboardActivation=\"manual\">\r\n      <TabList>\r\n        <Tab id=\"overview\">Overview</Tab>\r\n        <Tab id=\"usage\">Usage</Tab>\r\n        <Tab id=\"settings\">Settings</Tab>\r\n      </TabList>\r\n      <TabPanel id=\"overview\"> You can view all your projects here. </TabPanel>\r\n      <TabPanel id=\"usage\"> You can view your usage here. </TabPanel>\r\n      <TabPanel id=\"settings\"> You can view your settings here. </TabPanel>\r\n    </Tabs>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/tabs/controlled": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/tabs/controlled")),
      code : [{"title":"controlled.tsx","code":"\"use client\";\r\n\r\nimport React from \"react\";\r\nimport type { Key } from \"react-aria-components\";\r\nimport { Tabs, TabList, TabPanel, Tab } from \"@/lib/components/core/default/tabs\";\r\n\r\nexport default function Demo() {\r\n  const [selectedTab, setSelectedTab] = React.useState<Key>(\"overview\");\r\n  return (\r\n    <div className=\"flex flex-col items-center gap-6\">\r\n      <Tabs selectedKey={selectedTab} onSelectionChange={setSelectedTab}>\r\n        <TabList>\r\n          <Tab id=\"overview\">Overview</Tab>\r\n          <Tab id=\"usage\">Usage</Tab>\r\n          <Tab id=\"settings\">Settings</Tab>\r\n        </TabList>\r\n        <TabPanel id=\"overview\"> You can view all your projects here. </TabPanel>\r\n        <TabPanel id=\"usage\"> You can view your usage here. </TabPanel>\r\n        <TabPanel id=\"settings\"> You can view your settings here. </TabPanel>\r\n      </Tabs>\r\n      <p className=\"text-sm text-fg-muted\">\r\n        Selected tab: <span className=\"font-bold text-fg\">{selectedTab}</span>\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/dialog/basic": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/dialog/basic")),
      code : [{"title":"basic.tsx","code":"\"use client\";\r\n\r\nimport React from \"react\";\r\nimport { Button } from \"@/lib/components/core/default/button\";\r\nimport { DialogRoot, Dialog, DialogFooter } from \"@/lib/components/core/default/dialog\";\r\nimport { TextField } from \"@/lib/components/core/default/text-field\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <DialogRoot>\r\n      <Button variant=\"outline\">Edit Profile</Button>\r\n      <Dialog title=\"Edit profile\" description=\"Make changes to your profile.\">\r\n        {({ close }) => (\r\n          <>\r\n            <div className=\"space-y-4\">\r\n              <TextField autoFocus label=\"Name\" defaultValue=\"Mehdi\" className=\"w-full\" />\r\n              <TextField label=\"Username\" defaultValue=\"@mehdibha_\" className=\"w-full\" />\r\n            </div>\r\n            <DialogFooter>\r\n              <Button variant=\"outline\" size={{ initial: \"lg\", sm: \"md\" }} onPress={close}>\r\n                Cancel\r\n              </Button>\r\n              <Button variant=\"primary\" size={{ initial: \"lg\", sm: \"md\" }} onPress={close}>\r\n                Save changes\r\n              </Button>\r\n            </DialogFooter>\r\n          </>\r\n        )}\r\n      </Dialog>\r\n    </DialogRoot>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/dialog/title": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/dialog/title")),
      code : [{"title":"title.tsx","code":"import React from \"react\";\r\nimport { Button } from \"@/lib/components/core/default/button\";\r\nimport { DialogRoot, Dialog } from \"@/lib/components/core/default/dialog\";\r\nimport { TextField } from \"@/lib/components/core/default/text-field\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <DialogRoot>\r\n      <Button variant=\"outline\">Edit username</Button>\r\n      <Dialog title=\"Edit username\">\r\n        <TextField label=\"Username\" defaultValue=\"@mehdibha_\" className=\"w-full\" />\r\n      </Dialog>\r\n    </DialogRoot>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/dialog/description": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/dialog/description")),
      code : [{"title":"description.tsx","code":"import React from \"react\";\r\nimport { Button } from \"@/lib/components/core/default/button\";\r\nimport { DialogRoot, Dialog } from \"@/lib/components/core/default/dialog\";\r\nimport { TextField } from \"@/lib/components/core/default/text-field\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <DialogRoot>\r\n      <Button variant=\"outline\">Edit username</Button>\r\n      <Dialog title=\"Edit username\" description=\"Make changes to your username.\">\r\n        <TextField label=\"Username\" defaultValue=\"@mehdibha_\" className=\"w-full\" />\r\n      </Dialog>\r\n    </DialogRoot>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/dialog/types": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/dialog/types")),
      code : [{"title":"types.tsx","code":"\"use client\";\r\n\r\nimport React from \"react\";\r\nimport { Button } from \"@/lib/components/core/default/button\";\r\nimport { DialogRoot, Dialog, DialogFooter } from \"@/lib/components/core/default/dialog\";\r\nimport { Radio, RadioGroup } from \"@/lib/components/core/default/radio-group\";\r\nimport { TextField } from \"@/lib/components/core/default/text-field\";\r\n\r\ntype Type = \"modal\" | \"drawer\" | \"popover\";\r\n\r\nexport default function Demo() {\r\n  const [type, setType] = React.useState<Type>(\"modal\");\r\n  const [mobileType, setMobileType] = React.useState<Type>(\"drawer\");\r\n  return (\r\n    <div className=\"flex w-full items-center gap-4\">\r\n      <div className=\"flex flex-1 items-center justify-center\">\r\n        <DialogRoot>\r\n          <Button variant=\"outline\">Edit username</Button>\r\n          <Dialog title=\"Edit username\">\r\n            {({ close }) => (\r\n              <>\r\n                <div className=\"space-y-4\">\r\n                  <TextField autoFocus label=\"Name\" defaultValue=\"Mehdi\" className=\"w-full\" />\r\n                  <TextField label=\"Username\" defaultValue=\"@mehdibha_\" className=\"w-full\" />\r\n                </div>\r\n                <DialogFooter>\r\n                  <Button variant=\"outline\" size={{ initial: \"lg\", sm: \"md\" }} onPress={close}>\r\n                    Cancel\r\n                  </Button>\r\n                  <Button variant=\"primary\" size={{ initial: \"lg\", sm: \"md\" }} onPress={close}>\r\n                    Save changes\r\n                  </Button>\r\n                </DialogFooter>\r\n              </>\r\n            )}\r\n          </Dialog>\r\n        </DialogRoot>\r\n      </div>\r\n      <div className=\"flex items-start gap-6 rounded-md border px-10 py-6\">\r\n        <RadioGroup label=\"Type\" value={type} onChange={(value) => setType(value as Type)}>\r\n          <Radio value=\"modal\">Modal</Radio>\r\n          <Radio value=\"drawer\">Drawer</Radio>\r\n          <Radio value=\"popover\">Popover</Radio>\r\n        </RadioGroup>\r\n        <RadioGroup\r\n          label=\"Mobile type\"\r\n          value={mobileType}\r\n          onChange={(value) => setMobileType(value as Type)}\r\n        >\r\n          <Radio value=\"modal\">Modal</Radio>\r\n          <Radio value=\"drawer\">Drawer</Radio>\r\n          <Radio value=\"popover\">Popover</Radio>\r\n        </RadioGroup>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/dialog/dismissable": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/dialog/dismissable")),
      code : [{"title":"dismissable.tsx","code":"\"use client\";\r\n\r\nimport React from \"react\";\r\nimport { Button } from \"@/lib/components/core/default/button\";\r\nimport { DialogRoot, Dialog, DialogFooter } from \"@/lib/components/core/default/dialog\";\r\nimport { TextField } from \"@/lib/components/core/default/text-field\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <DialogRoot>\r\n      <Button variant=\"outline\">Edit Profile</Button>\r\n      <Dialog\r\n        title=\"Edit profile\"\r\n        description=\"Make changes to your profile.\"\r\n        isDismissable={false}\r\n      >\r\n        {({ close }) => (\r\n          <>\r\n            <div className=\"space-y-4\">\r\n              <TextField autoFocus label=\"Name\" defaultValue=\"Mehdi\" className=\"w-full\" />\r\n              <TextField label=\"Username\" defaultValue=\"@mehdibha_\" className=\"w-full\" />\r\n            </div>\r\n            <DialogFooter>\r\n              <Button variant=\"outline\" size={{ initial: \"lg\", sm: \"md\" }} onPress={close}>\r\n                Cancel\r\n              </Button>\r\n              <Button variant=\"primary\" size={{ initial: \"lg\", sm: \"md\" }} onPress={close}>\r\n                Save changes\r\n              </Button>\r\n            </DialogFooter>\r\n          </>\r\n        )}\r\n      </Dialog>\r\n    </DialogRoot>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/dialog/dismiss-button": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/dialog/dismiss-button")),
      code : [{"title":"dismiss-button.tsx","code":"\"use client\";\r\n\r\nimport React from \"react\";\r\nimport { Button } from \"@/lib/components/core/default/button\";\r\nimport { DialogRoot, Dialog, DialogFooter } from \"@/lib/components/core/default/dialog\";\r\nimport { TextField } from \"@/lib/components/core/default/text-field\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <DialogRoot>\r\n      <Button variant=\"outline\">Edit Profile</Button>\r\n      <Dialog\r\n        title=\"Edit profile\"\r\n        description=\"Make changes to your profile.\"\r\n        showDismissButton={false}\r\n      >\r\n        {({ close }) => (\r\n          <>\r\n            <div className=\"space-y-4\">\r\n              <TextField autoFocus label=\"Name\" defaultValue=\"Mehdi\" className=\"w-full\" />\r\n              <TextField label=\"Username\" defaultValue=\"@mehdibha_\" className=\"w-full\" />\r\n            </div>\r\n            <DialogFooter>\r\n              <Button variant=\"outline\" size={{ initial: \"lg\", sm: \"md\" }} onPress={close}>\r\n                Cancel\r\n              </Button>\r\n              <Button variant=\"primary\" size={{ initial: \"lg\", sm: \"md\" }} onPress={close}>\r\n                Save changes\r\n              </Button>\r\n            </DialogFooter>\r\n          </>\r\n        )}\r\n      </Dialog>\r\n    </DialogRoot>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/dialog/inset-content": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/dialog/inset-content")),
      code : [{"title":"inset-content.tsx","code":"\"use client\";\r\n\r\nimport React from \"react\";\r\nimport { Button } from \"@/lib/components/core/default/button\";\r\nimport {\r\n  DialogRoot,\r\n  Dialog,\r\n  DialogFooter,\r\n  DialogInset,\r\n} from \"@/lib/components/core/default/dialog\";\r\nimport { TextField } from \"@/lib/components/core/default/text-field\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <DialogRoot>\r\n      <Button variant=\"outline\">Edit Profile</Button>\r\n      <Dialog title=\"Edit profile\" description=\"Make changes to your profile.\">\r\n        {({ close }) => (\r\n          <>\r\n            <DialogInset className=\"mb-4 border-y bg-bg-muted\">\r\n              Content within the inset.\r\n            </DialogInset>\r\n            <div className=\"space-y-4\">\r\n              <TextField autoFocus label=\"Name\" defaultValue=\"Mehdi\" className=\"w-full\" />\r\n              <TextField label=\"Username\" defaultValue=\"@mehdibha_\" className=\"w-full\" />\r\n            </div>\r\n            <DialogFooter>\r\n              <Button variant=\"outline\" size={{ initial: \"lg\", sm: \"md\" }} onPress={close}>\r\n                Cancel\r\n              </Button>\r\n              <Button variant=\"primary\" size={{ initial: \"lg\", sm: \"md\" }} onPress={close}>\r\n                Save changes\r\n              </Button>\r\n            </DialogFooter>\r\n          </>\r\n        )}\r\n      </Dialog>\r\n    </DialogRoot>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/dialog/popover": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/dialog/popover")),
      code : [{"title":"popover.tsx","code":"\"use client\";\r\n\r\nimport React from \"react\";\r\nimport type { Key } from \"react-aria-components\";\r\nimport { Button } from \"@/lib/components/core/default/button\";\r\nimport { DialogRoot, Dialog } from \"@/lib/components/core/default/dialog\";\r\nimport { Item } from \"@/lib/components/core/default/list-box\";\r\nimport { NumberField } from \"@/lib/components/core/default/number-field\";\r\nimport { Select } from \"@/lib/components/core/default/select\";\r\nimport { Switch } from \"@/lib/components/core/default/switch\";\r\nimport { InfoIcon } from \"@/lib/icons\";\r\n\r\nexport default function Demo() {\r\n  const [placement, setPlacement] = React.useState<Key>(\"top\");\r\n  const [offset, setOffset] = React.useState<number>(0);\r\n  const [crossOffset, setCrossOffset] = React.useState<number>(0);\r\n  const [containerPadding, setContainerPadding] = React.useState<number>(0);\r\n  const [showArrow, setShowArrow] = React.useState<boolean>(true);\r\n  return (\r\n    <div className=\"flex w-full items-center\">\r\n      <div className=\"flex flex-1 items-center justify-center\">\r\n        <DialogRoot>\r\n          <Button variant=\"outline\" shape=\"square\">\r\n            <InfoIcon />\r\n          </Button>\r\n          <Dialog\r\n            type=\"popover\"\r\n            title=\"Help\"\r\n            description=\"For help accessing your account, please contact support.\"\r\n          />\r\n        </DialogRoot>\r\n      </div>\r\n      <div className=\"space-y-4 rounded-md border p-4\">\r\n        <Select label=\"Placement\" selectedKey={placement} onSelectionChange={setPlacement}>\r\n          <Item id=\"top\">Top</Item>\r\n          <Item id=\"bottom\">Bottom</Item>\r\n        </Select>\r\n        <NumberField label=\"Offset\" value={offset} onChange={setOffset} />\r\n        <NumberField label=\"Cross offset\" value={crossOffset} onChange={setCrossOffset} />\r\n        <NumberField\r\n          label=\"Container padding\"\r\n          value={containerPadding}\r\n          onChange={setContainerPadding}\r\n        />\r\n        <Switch isSelected={showArrow} onChange={setShowArrow}>\r\n          Arrow\r\n        </Switch>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/dialog/drawer": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/dialog/drawer")),
      code : [{"title":"drawer.tsx","code":"\"use client\";\r\n\r\nimport React from \"react\";\r\nimport type { Key } from \"react-aria-components\";\r\nimport { Button } from \"@/lib/components/core/default/button\";\r\nimport { DialogRoot, Dialog } from \"@/lib/components/core/default/dialog\";\r\nimport { Item } from \"@/lib/components/core/default/list-box\";\r\nimport { Select } from \"@/lib/components/core/default/select\";\r\nimport { Switch } from \"@/lib/components/core/default/switch\";\r\n\r\nexport default function Demo() {\r\n  const [placement, setPlacement] = React.useState<Key>(\"top\");\r\n  const [swipeable, setSwipeable] = React.useState<boolean>(true);\r\n  return (\r\n    <div className=\"flex w-full items-center\">\r\n      <div className=\"flex flex-1 items-center justify-center\">\r\n        <DialogRoot>\r\n          <Button variant=\"outline\">Open drawer</Button>\r\n          <Dialog\r\n            type=\"drawer\"\r\n            title=\"Help\"\r\n            description=\"For help accessing your account, please contact support.\"\r\n          />\r\n        </DialogRoot>\r\n      </div>\r\n      <div className=\"space-y-4 rounded-md border p-4\">\r\n        <Select label=\"Placement\" selectedKey={placement} onSelectionChange={setPlacement}>\r\n          <Item id=\"top\">Top</Item>\r\n          <Item id=\"bottom\">Bottom</Item>\r\n        </Select>\r\n        <Switch isSelected={swipeable} onChange={setSwipeable}>\r\n          Swipeable\r\n        </Switch>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/dialog/alert-dialog": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/dialog/alert-dialog")),
      code : [{"title":"alert-dialog.tsx","code":"\"use client\";\r\n\r\nimport React from \"react\";\r\nimport { Button } from \"@/lib/components/core/default/button\";\r\nimport { DialogRoot, Dialog, DialogFooter } from \"@/lib/components/core/default/dialog\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <DialogRoot>\r\n      <Button variant=\"danger\">Delete project</Button>\r\n      <Dialog\r\n        title=\"Delete project\"\r\n        description=\"Are you sure you want to delete this project? This action is permanent and cannot be undone.\"\r\n        role=\"alertdialog\"\r\n        // isDissmissible={false}\r\n      >\r\n        {({ close }) => (\r\n          <>\r\n            <DialogFooter>\r\n              <Button variant=\"outline\" size={{ initial: \"lg\", sm: \"md\" }} onPress={close}>\r\n                Cancel\r\n              </Button>\r\n              <Button variant=\"danger\" size={{ initial: \"lg\", sm: \"md\" }} onPress={close}>\r\n                Delete project\r\n              </Button>\r\n            </DialogFooter>\r\n          </>\r\n        )}\r\n      </Dialog>\r\n    </DialogRoot>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/dialog/controlled": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/dialog/controlled")),
      code : [{"title":"controlled.tsx","code":"\"use client\";\r\n\r\nimport React from \"react\";\r\nimport { Button } from \"@/lib/components/core/default/button\";\r\nimport { DialogRoot, Dialog, DialogFooter } from \"@/lib/components/core/default/dialog\";\r\nimport { TextField } from \"@/lib/components/core/default/text-field\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <DialogRoot>\r\n      <Button variant=\"outline\">Edit Profile</Button>\r\n      <Dialog title=\"Edit profile\" description=\"Make changes to your profile.\">\r\n        {({ close }) => (\r\n          <>\r\n            <div className=\"space-y-4\">\r\n              <TextField autoFocus label=\"Name\" defaultValue=\"Mehdi\" />\r\n              <TextField label=\"Username\" defaultValue=\"@mehdibha_\" />\r\n            </div>\r\n            <DialogFooter>\r\n              <Button variant=\"outline\" size={{ initial: \"lg\", sm: \"md\" }} onPress={close}>\r\n                Cancel\r\n              </Button>\r\n              <Button variant=\"primary\" size={{ initial: \"lg\", sm: \"md\" }} onPress={close}>\r\n                Save changes\r\n              </Button>\r\n            </DialogFooter>\r\n          </>\r\n        )}\r\n      </Dialog>\r\n    </DialogRoot>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/dialog/composition": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/dialog/composition")),
      code : [{"title":"composition.tsx","code":"import React from \"react\";\r\nimport { Button } from \"@/lib/components/core/default/button\";\r\nimport { DialogRoot, Dialog } from \"@/lib/components/core/default/dialog\";\r\nimport { TextField } from \"@/lib/components/core/default/text-field\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <DialogRoot>\r\n      <Button variant=\"outline\">Edit username</Button>\r\n      <Dialog title=\"Edit username\">\r\n        <TextField label=\"Username\" defaultValue=\"@mehdibha_\" />\r\n      </Dialog>\r\n    </DialogRoot>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/dialog/async-form-submission": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/dialog/async-form-submission")),
      code : [{"title":"async-form-submission.tsx","code":"\"use client\";\r\n\r\nimport React from \"react\";\r\nimport { Button } from \"@/lib/components/core/default/button\";\r\nimport { DialogRoot, Dialog, DialogFooter } from \"@/lib/components/core/default/dialog\";\r\nimport { TextField } from \"@/lib/components/core/default/text-field\";\r\n\r\nexport default function DialogDemo() {\r\n  const [isLoading, setIsLoading] = React.useState(false);\r\n  const handleSubmit = async () => {\r\n    setIsLoading(true);\r\n    await new Promise((resolve) => setTimeout(resolve, 1000));\r\n    setIsLoading(false);\r\n  };\r\n  return (\r\n    <DialogRoot>\r\n      <Button variant=\"outline\">Edit Profile</Button>\r\n      <Dialog title=\"Edit profile\" description=\"Make changes to your profile.\">\r\n        {({ close }) => (\r\n          <>\r\n            <div className=\"space-y-4\">\r\n              <TextField autoFocus label=\"Name\" defaultValue=\"Mehdi\" className=\"w-full\" />\r\n              <TextField label=\"Username\" defaultValue=\"@mehdibha_\" />\r\n            </div>\r\n            <DialogFooter>\r\n              <Button variant=\"outline\" size={{ initial: \"lg\", sm: \"md\" }} onPress={close}>\r\n                Cancel\r\n              </Button>\r\n              <Button\r\n                isLoading={isLoading}\r\n                variant=\"primary\"\r\n                size={{ initial: \"lg\", sm: \"md\" }}\r\n                onPress={async () => {\r\n                  await handleSubmit();\r\n                  close();\r\n                }}\r\n              >\r\n                Save changes\r\n              </Button>\r\n            </DialogFooter>\r\n          </>\r\n        )}\r\n      </Dialog>\r\n    </DialogRoot>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/dialog/nested": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/dialog/nested")),
      code : [{"title":"nested.tsx","code":"\"use client\";\r\n\r\nimport React from \"react\";\r\nimport { Button } from \"@/lib/components/core/default/button\";\r\nimport { DialogRoot, Dialog } from \"@/lib/components/core/default/dialog\";\r\nimport { Radio, RadioGroup } from \"@/lib/components/core/default/radio-group\";\r\n\r\ntype Type = \"modal\" | \"drawer\" | \"popover\";\r\n\r\nexport default function Demo() {\r\n  const [type, setType] = React.useState<Type>(\"modal\");\r\n  return (\r\n    <div className=\"flex w-full items-center\">\r\n      <div className=\"flex flex-1 items-center justify-center\">\r\n        <DialogRoot>\r\n          <Button variant=\"outline\">Dialog</Button>\r\n          <Dialog title=\"Dialog\" type={type}>\r\n            <DialogRoot>\r\n              <Button variant=\"outline\">Nested dialog</Button>\r\n              <Dialog title=\"Nested dialog\" type={type}></Dialog>\r\n            </DialogRoot>\r\n          </Dialog>\r\n        </DialogRoot>\r\n      </div>\r\n      <div className=\"space-y-4 rounded-md border px-10 py-6\">\r\n        <RadioGroup label=\"Type\" value={type} onChange={(value) => setType(value as Type)}>\r\n          <Radio value=\"modal\">Modal</Radio>\r\n          <Radio value=\"drawer\">Drawer</Radio>\r\n          <Radio value=\"popover\">Popover</Radio>\r\n        </RadioGroup>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/tooltip/default": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/tooltip/default")),
      code : [{"title":"default.tsx","code":"import { Button } from \"@/lib/components/core/default/button\";\r\nimport { Tooltip } from \"@/lib/components/core/default/tooltip\";\r\nimport { PlusIcon } from \"@/lib/icons\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <Tooltip content=\"Add to library\">\r\n      <Button shape=\"square\">\r\n        <PlusIcon />\r\n      </Button>\r\n    </Tooltip>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/tooltip/arrow": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/tooltip/arrow")),
      code : [{"title":"arrow.tsx","code":"import { Button } from \"@/lib/components/core/default/button\";\r\nimport { Tooltip } from \"@/lib/components/core/default/tooltip\";\r\nimport { PlusIcon } from \"@/lib/icons\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <Tooltip content=\"Add to library\" arrow>\r\n      <Button shape=\"square\">\r\n        <PlusIcon />\r\n      </Button>\r\n    </Tooltip>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/tooltip/placement": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/tooltip/placement")),
      code : [{"title":"placement.tsx","code":"import React from \"react\";\r\nimport { Button } from \"@/lib/components/core/default/button\";\r\nimport { Tooltip } from \"@/lib/components/core/default/tooltip\";\r\nimport { PlusIcon } from \"@/lib/icons\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <div className=\"flex items-center gap-4\">\r\n      <Tooltip placement=\"top\" content=\"Add to library\">\r\n        <Button shape=\"square\">\r\n          <PlusIcon />\r\n        </Button>\r\n      </Tooltip>\r\n      <Tooltip placement=\"bottom\" content=\"Add to library\">\r\n        <Button shape=\"square\">\r\n          <PlusIcon />\r\n        </Button>\r\n      </Tooltip>\r\n      <Tooltip placement=\"left\" content=\"Add to library\">\r\n        <Button shape=\"square\">\r\n          <PlusIcon />\r\n        </Button>\r\n      </Tooltip>\r\n      <Tooltip placement=\"right\" content=\"Add to library\">\r\n        <Button shape=\"square\">\r\n          <PlusIcon />\r\n        </Button>\r\n      </Tooltip>\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/tooltip/flip": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/tooltip/flip")),
      code : [{"title":"flip.tsx","code":"\"use client\";\r\n\r\nimport React from \"react\";\r\nimport { Button } from \"@/lib/components/core/default/button\";\r\nimport { Switch } from \"@/lib/components/core/default/switch\";\r\nimport { Tooltip } from \"@/lib/components/core/default/tooltip\";\r\nimport { PlusIcon } from \"@/lib/icons\";\r\n\r\nexport default function Demo() {\r\n  const [shouldFlip, setShouldFlip] = React.useState(false);\r\n  return (\r\n    <div className=\"flex flex-col items-center gap-10\">\r\n      <Tooltip shouldFlip={shouldFlip} content=\"Add to library\">\r\n        <Button shape=\"square\">\r\n          <PlusIcon />\r\n        </Button>\r\n      </Tooltip>\r\n      <Switch isSelected={shouldFlip} onChange={(isSelected) => setShouldFlip(isSelected)}>\r\n        Should flip\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/tooltip/offset": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/tooltip/offset")),
      code : [{"title":"offset.tsx","code":"\"use client\";\r\n\r\nimport React from \"react\";\r\nimport { Button } from \"@/lib/components/core/default/button\";\r\nimport { NumberField } from \"@/lib/components/core/default/number-field\";\r\nimport { Tooltip } from \"@/lib/components/core/default/tooltip\";\r\nimport { PlusIcon } from \"@/lib/icons\";\r\n\r\nexport default function Demo() {\r\n  const [offset, setOffset] = React.useState(10);\r\n  return (\r\n    <div className=\"flex flex-col items-center gap-10\">\r\n      <Tooltip offset={offset} content=\"Add to library\">\r\n        <Button shape=\"square\">\r\n          <PlusIcon />\r\n        </Button>\r\n      </Tooltip>\r\n      <NumberField\r\n        label=\"Offset\"\r\n        value={offset}\r\n        onChange={(value) => setOffset(value)}\r\n        className=\"max-w-[150px]\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/tooltip/container-padding": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/tooltip/container-padding")),
      code : [{"title":"container-padding.tsx","code":"\"use client\";\r\n\r\nimport React from \"react\";\r\nimport { Button } from \"@/lib/components/core/default/button\";\r\nimport { NumberField } from \"@/lib/components/core/default/number-field\";\r\nimport { Tooltip } from \"@/lib/components/core/default/tooltip\";\r\nimport { PlusIcon } from \"@/lib/icons\";\r\n\r\nexport default function Demo() {\r\n  const [containerPadding, setContainerPadding] = React.useState(12);\r\n  return (\r\n    <div className=\"flex flex-col items-center gap-10\">\r\n      <Tooltip containerPadding={containerPadding} content=\"Add to library\">\r\n        <Button shape=\"square\">\r\n          <PlusIcon />\r\n        </Button>\r\n      </Tooltip>\r\n      <NumberField\r\n        label=\"Container padding\"\r\n        value={containerPadding}\r\n        onChange={(value) => setContainerPadding(value)}\r\n        className=\"max-w-[150px]\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/tooltip/delay": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/tooltip/delay")),
      code : [{"title":"delay.tsx","code":"\"use client\";\r\n\r\nimport React from \"react\";\r\nimport { Button } from \"@/lib/components/core/default/button\";\r\nimport { NumberField } from \"@/lib/components/core/default/number-field\";\r\nimport { Tooltip } from \"@/lib/components/core/default/tooltip\";\r\nimport { PlusIcon } from \"@/lib/icons\";\r\n\r\nexport default function Demo() {\r\n  const [delay, setDelay] = React.useState(700);\r\n  const [closeDelay, setCloseDelay] = React.useState(0);\r\n  return (\r\n    <div className=\"flex flex-col items-center gap-10\">\r\n      <Tooltip delay={delay} closeDelay={closeDelay} content=\"Add to library\">\r\n        <Button shape=\"square\">\r\n          <PlusIcon />\r\n        </Button>\r\n      </Tooltip>\r\n      <div className=\"max-w-[150px] space-y-4\">\r\n        <NumberField label=\"Delay\" value={delay} onChange={(value) => setDelay(value)} />\r\n        <NumberField\r\n          label=\"Close Delay\"\r\n          value={closeDelay}\r\n          onChange={(value) => setCloseDelay(value)}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/tooltip/composition": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/tooltip/composition")),
      code : [{"title":"composition.tsx","code":"import { Button } from \"@/lib/components/core/default/button\";\r\nimport { TooltipRoot, TooltipContent } from \"@/lib/components/core/default/tooltip\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <TooltipRoot>\r\n      <Button>Hover</Button>\r\n      <TooltipContent>\r\n        <p>Add to library</p>\r\n      </TooltipContent>\r\n    </TooltipRoot>\r\n  );\r\n}\r\n"}]
    },
  }